{"version":3,"file":"static/js/9915.dd72b2c1.chunk.js","mappings":"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","sources":["pages/calendars/BirdsEyeView.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport {\n    Box,\n    Container,\n    Heading,\n    Text,\n    VStack,\n    Card,\n    CardBody,\n    Spinner,\n    Center,\n    useColorMode,\n} from '@chakra-ui/react';\nimport { brandConfig, getColor } from \"../../brandConfig\";\nimport { useNavigate } from 'react-router-dom';\nimport { NavbarWithCallToAction } from \"../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction\";\nimport { FooterWithFourColumns } from \"../../components/chakra/FooterWithFourColumns/FooterWithFourColumns\";\nimport { usePageTitle } from \"../../hooks/useDocumentTitle\";\nimport { ModuleBreadcrumb } from \"../../components/ModuleBreadcrumb\";\nimport { calendarsModuleConfig } from \"./moduleConfig\";\n\n// Query to get calendars accessible to the current user\nconst MY_CALENDARS_QUERY = gql`\n    query MyCalendars {\n        myCalendars {\n            id\n            name\n            type\n            description\n            responsibleOwnerId\n            linkedEmailAddressId\n            createdAt\n            updatedAt\n            lastEventAt\n            eventCount\n        }\n    }\n`;\n\nconst BirdsEyeView: React.FC = () => {\n    const navigate = useNavigate();\n    const { colorMode } = useColorMode();\n\n    // Brand styling from brandConfig\n    const bgMain = getColor(\"background.main\", colorMode);\n    const cardGradientBg = getColor(\"background.cardGradient\", colorMode);\n    const cardBorder = getColor(\"border.darkCard\", colorMode);\n    const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n    const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n    const primaryColor = getColor(\"primary\", colorMode);\n\n    // Update page title\n    usePageTitle(\"Bird's Eye View - Calendars\");\n\n    // Fetch calendars\n    const { loading, error, data } = useQuery(MY_CALENDARS_QUERY, {\n        fetchPolicy: 'cache-and-network'\n    });\n\n    // Auto-select all calendars and navigate to view\n    useEffect(() => {\n        if (data?.myCalendars && data.myCalendars.length > 0) {\n            const calendarIds = data.myCalendars.map((cal: any) => cal.id).join(',');\n            navigate(`/calendars/view?calendars=${calendarIds}`, { replace: true });\n        }\n    }, [data, navigate]);\n\n    if (loading) {\n        return (\n            <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n                <Container maxW=\"container.xl\" py={8} flex=\"1\">\n                    <Center py={20}>\n                        <VStack spacing={4}>\n                            <Spinner size=\"xl\" color={primaryColor} />\n                            <Text color={textSecondary}>Loading all calendars...</Text>\n                        </VStack>\n                    </Center>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    if (error) {\n        return (\n            <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n                <Container maxW=\"container.xl\" py={8} flex=\"1\">\n                    <Center py={20}>\n                        <VStack spacing={4}>\n                            <Text color=\"red.500\">Error loading calendars</Text>\n                        </VStack>\n                    </Center>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    if (!data?.myCalendars || data.myCalendars.length === 0) {\n        return (\n            <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n                <Container maxW=\"container.xl\" py={8} flex=\"1\">\n                    <Card\n                        bg={cardGradientBg}\n                        backdropFilter=\"blur(20px)\"\n                        boxShadow=\"0 8px 32px 0 rgba(31, 38, 135, 0.37)\"\n                        border=\"1px solid\"\n                        borderColor={cardBorder}\n                        borderRadius=\"xl\"\n                    >\n                        <CardBody p={8}>\n                            <Center>\n                                <VStack spacing={3}>\n                                    <Heading\n                                        size=\"xl\"\n                                        color={textPrimary}\n                                        fontFamily={brandConfig.fonts.heading}\n                                        fontWeight=\"bold\"\n                                    >\n                                        No Calendars Available\n                                    </Heading>\n                                    <Text\n                                        color={textSecondary}\n                                        fontSize=\"lg\"\n                                        fontFamily={brandConfig.fonts.body}\n                                    >\n                                        You don't have any calendars to display yet.\n                                    </Text>\n                                </VStack>\n                            </Center>\n                        </CardBody>\n                    </Card>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    // If we have calendars, the useEffect will redirect\n    return (\n        <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <NavbarWithCallToAction />\n            <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n            <Container maxW=\"container.xl\" py={8} flex=\"1\">\n                <Center py={20}>\n                    <VStack spacing={4}>\n                        <Spinner size=\"xl\" color={primaryColor} />\n                        <Text color={textSecondary}>Redirecting to calendar view...</Text>\n                    </VStack>\n                </Center>\n            </Container>\n            <FooterWithFourColumns />\n        </Box>\n    );\n};\n\nexport default BirdsEyeView;"],"names":["MY_CALENDARS_QUERY","gql","_templateObject","_taggedTemplateLiteral","BirdsEyeView","navigate","useNavigate","colorMode","useColorMode","bgMain","getColor","cardGradientBg","cardBorder","textPrimary","textSecondary","primaryColor","usePageTitle","loading","error","data","useQuery","fetchPolicy","useEffect","myCalendars","length","calendarIds","map","cal","id","join","concat","replace","_jsxs","Box","bg","minH","display","flexDirection","children","_jsx","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","calendarsModuleConfig","Container","maxW","py","flex","Center","VStack","spacing","Spinner","size","color","Text","FooterWithFourColumns","Card","backdropFilter","boxShadow","border","borderColor","borderRadius","CardBody","p","Heading","fontFamily","brandConfig","fonts","heading","fontWeight","fontSize","body"],"sourceRoot":""}