{"version":3,"file":"static/js/7312.1386d8f6.chunk.js","mappings":"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","sources":["pages/frontend-upgrades/NewUpgrade.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  VStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  Select,\n  useToast,\n  Card,\n  CardBody,\n  HStack,\n  IconButton,\n  Text,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  useColorMode\n} from '@chakra-ui/react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { FiPlus, FiTrash2, FiArrowLeft } from 'react-icons/fi';\nimport ReactMarkdown from 'react-markdown';\nimport { getColor } from '../../brandConfig';\nimport { FooterWithFourColumns } from '../../components/chakra/FooterWithFourColumns/FooterWithFourColumns';\nimport { NavbarWithCallToAction } from '../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction';\n\nconst CREATE_FRONTEND_UPGRADE = gql`\n  mutation CreateFrontendUpgrade($input: CreateFrontendUpgradeInput!) {\n    createFrontendUpgrade(input: $input) {\n      id\n      title\n    }\n  }\n`;\n\nconst GET_TENANTS = gql`\n  query GetTenants {\n    tenants {\n      id\n      name\n      status\n    }\n  }\n`;\n\nconst NewUpgrade: React.FC = () => {\n  const { colorMode } = useColorMode();\n  const navigate = useNavigate();\n  const toast = useToast();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('UI_ENHANCEMENT');\n  const [originTenantId, setOriginTenantId] = useState('');\n  const [originTenantName, setOriginTenantName] = useState('');\n  const [gitCommitUrls, setGitCommitUrls] = useState<string[]>(['']);\n  const [markdownDocumentation, setMarkdownDocumentation] = useState('');\n\n  const { data: tenantsData, loading: tenantsLoading, error: tenantsError } = useQuery(GET_TENANTS);\n  const tenants = tenantsData?.tenants || [];\n\n  // Debug logging\n  React.useEffect(() => {\n    if (tenantsData) {\n      console.log('Tenants data:', tenantsData);\n      console.log('All tenants:', tenants);\n      console.log('Active tenants:', tenants.filter((t: any) => t.status === 'active'));\n    }\n    if (tenantsError) {\n      console.error('Tenants error:', tenantsError);\n    }\n  }, [tenantsData, tenantsError, tenants]);\n\n  const [createUpgrade, { loading }] = useMutation(CREATE_FRONTEND_UPGRADE, {\n    onCompleted: (data) => {\n      toast({\n        title: 'Upgrade Created',\n        description: `Successfully tracked upgrade: ${data.createFrontendUpgrade.title}`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n      navigate('/frontend-upgrades');\n    },\n    onError: (error) => {\n      toast({\n        title: 'Error',\n        description: error.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  });\n\n  const handleAddCommitUrl = () => {\n    setGitCommitUrls([...gitCommitUrls, '']);\n  };\n\n  const handleRemoveCommitUrl = (index: number) => {\n    setGitCommitUrls(gitCommitUrls.filter((_, i) => i !== index));\n  };\n\n  const handleCommitUrlChange = (index: number, value: string) => {\n    const newUrls = [...gitCommitUrls];\n    newUrls[index] = value;\n    setGitCommitUrls(newUrls);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Validate\n    if (!title || !description || !category || !originTenantId || !originTenantName) {\n      toast({\n        title: 'Validation Error',\n        description: 'Please fill in all required fields',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    // Filter out empty commit URLs\n    const filteredCommitUrls = gitCommitUrls.filter(url => url.trim() !== '');\n\n    if (filteredCommitUrls.length === 0) {\n      toast({\n        title: 'Validation Error',\n        description: 'Please add at least one git commit URL',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    await createUpgrade({\n      variables: {\n        input: {\n          title,\n          description,\n          category,\n          originTenantId,\n          originTenantName,\n          gitCommitUrls: filteredCommitUrls,\n          markdownDocumentation: markdownDocumentation || undefined\n        }\n      }\n    });\n  };\n\n  const handleTenantChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedId = e.target.value;\n    setOriginTenantId(selectedId);\n\n    const selectedTenant = tenants.find((t: any) => t.id === selectedId);\n    if (selectedTenant) {\n      setOriginTenantName(selectedTenant.name);\n    }\n  };\n\n  return (\n    <>\n      <NavbarWithCallToAction />\n      <Box p={6}>\n        <VStack spacing={6} align=\"stretch\" maxW=\"1200px\" mx=\"auto\">\n        {/* Header */}\n        <HStack>\n          <IconButton\n            aria-label=\"Go back\"\n            icon={<FiArrowLeft />}\n            onClick={() => navigate('/frontend-upgrades')}\n            variant=\"ghost\"\n          />\n          <Heading size=\"lg\">Track New Frontend Upgrade</Heading>\n        </HStack>\n\n        <form onSubmit={handleSubmit}>\n          <VStack spacing={6} align=\"stretch\">\n            {/* Basic Information */}\n            <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n              <CardBody>\n                <VStack spacing={4} align=\"stretch\">\n                  <Heading size=\"md\">Basic Information</Heading>\n\n                  <FormControl isRequired>\n                    <FormLabel>Title</FormLabel>\n                    <Input\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                      placeholder=\"e.g., Dynamic Color Configuration for FloatingNavbar\"\n                    />\n                  </FormControl>\n\n                  <FormControl isRequired>\n                    <FormLabel>Description</FormLabel>\n                    <Textarea\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                      placeholder=\"Brief description of what this upgrade improves\"\n                      rows={3}\n                    />\n                  </FormControl>\n\n                  <FormControl isRequired>\n                    <FormLabel>Category</FormLabel>\n                    <Select value={category} onChange={(e) => setCategory(e.target.value)}>\n                      <option value=\"UI_ENHANCEMENT\">UI Enhancement</option>\n                      <option value=\"BUG_FIX\">Bug Fix</option>\n                      <option value=\"PERFORMANCE\">Performance</option>\n                      <option value=\"SECURITY\">Security</option>\n                      <option value=\"FEATURE\">Feature</option>\n                      <option value=\"REFACTOR\">Refactor</option>\n                      <option value=\"ACCESSIBILITY\">Accessibility</option>\n                      <option value=\"OTHER\">Other</option>\n                    </Select>\n                  </FormControl>\n\n                  <FormControl isRequired>\n                    <FormLabel>Origin Tenant (Where was this first innovated?)</FormLabel>\n                    <Select\n                      value={originTenantId}\n                      onChange={handleTenantChange}\n                      placeholder=\"Select tenant site\"\n                    >\n                      {tenants.map((tenant: any) => (\n                        <option key={tenant.id} value={tenant.id}>\n                          {tenant.name}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </VStack>\n              </CardBody>\n            </Card>\n\n            {/* Git Commit URLs */}\n            <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n              <CardBody>\n                <VStack spacing={4} align=\"stretch\">\n                  <HStack justify=\"space-between\">\n                    <Heading size=\"md\">Git Commit URLs</Heading>\n                    <Button\n                      leftIcon={<FiPlus />}\n                      size=\"sm\"\n                      onClick={handleAddCommitUrl}\n                      colorScheme=\"blue\"\n                    >\n                      Add URL\n                    </Button>\n                  </HStack>\n\n                  {gitCommitUrls.map((url, index) => (\n                    <HStack key={index}>\n                      <FormControl>\n                        <Input\n                          value={url}\n                          onChange={(e) => handleCommitUrlChange(index, e.target.value)}\n                          placeholder=\"https://github.com/username/repo/commit/...\"\n                        />\n                      </FormControl>\n                      {gitCommitUrls.length > 1 && (\n                        <IconButton\n                          aria-label=\"Remove URL\"\n                          icon={<FiTrash2 />}\n                          onClick={() => handleRemoveCommitUrl(index)}\n                          colorScheme=\"red\"\n                          variant=\"ghost\"\n                        />\n                      )}\n                    </HStack>\n                  ))}\n                </VStack>\n              </CardBody>\n            </Card>\n\n            {/* Markdown Documentation */}\n            <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n              <CardBody>\n                <VStack spacing={4} align=\"stretch\">\n                  <Heading size=\"md\">Documentation (Optional)</Heading>\n                  <Text fontSize=\"sm\" color={colorMode === 'light' ? 'gray.600' : 'gray.400'}>\n                    Add detailed markdown documentation about this upgrade, including implementation notes, gotchas, etc.\n                  </Text>\n\n                  <Tabs>\n                    <TabList>\n                      <Tab>Edit</Tab>\n                      <Tab>Preview</Tab>\n                    </TabList>\n                    <TabPanels>\n                      <TabPanel px={0}>\n                        <Textarea\n                          value={markdownDocumentation}\n                          onChange={(e) => setMarkdownDocumentation(e.target.value)}\n                          placeholder=\"# Implementation Notes&#10;&#10;## What Changed&#10;- Point 1&#10;- Point 2&#10;&#10;## How to Apply&#10;1. Step 1&#10;2. Step 2\"\n                          rows={15}\n                          fontFamily=\"monospace\"\n                        />\n                      </TabPanel>\n                      <TabPanel>\n                        {markdownDocumentation ? (\n                          <Box\n                            p={4}\n                            border=\"1px solid\"\n                            borderColor={colorMode === 'light' ? 'gray.200' : 'gray.600'}\n                            borderRadius=\"md\"\n                            minH=\"300px\"\n                          >\n                            <ReactMarkdown>{markdownDocumentation}</ReactMarkdown>\n                          </Box>\n                        ) : (\n                          <Text color={colorMode === 'light' ? 'gray.500' : 'gray.500'}>\n                            No documentation yet. Add some markdown content to see the preview.\n                          </Text>\n                        )}\n                      </TabPanel>\n                    </TabPanels>\n                  </Tabs>\n                </VStack>\n              </CardBody>\n            </Card>\n\n            {/* Submit Button */}\n            <HStack justify=\"flex-end\" spacing={4}>\n              <Button\n                variant=\"ghost\"\n                onClick={() => navigate('/frontend-upgrades')}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                bg={getColor('secondary', colorMode)}\n                color=\"white\"\n                isLoading={loading}\n                _hover={{ bg: getColor('secondaryHover', colorMode) }}\n              >\n                Track Upgrade\n              </Button>\n            </HStack>\n          </VStack>\n        </form>\n        </VStack>\n      </Box>\n      <FooterWithFourColumns />\n    </>\n  );\n};\n\nexport default NewUpgrade;\n"],"names":["CREATE_FRONTEND_UPGRADE","gql","_templateObject","_taggedTemplateLiteral","GET_TENANTS","_templateObject2","NewUpgrade","colorMode","useColorMode","navigate","useNavigate","toast","useToast","title","setTitle","useState","description","setDescription","category","setCategory","originTenantId","setOriginTenantId","originTenantName","setOriginTenantName","gitCommitUrls","setGitCommitUrls","markdownDocumentation","setMarkdownDocumentation","data","tenantsData","loading","tenantsLoading","error","tenantsError","useQuery","tenants","React","console","log","filter","t","status","createUpgrade","useMutation","onCompleted","concat","createFrontendUpgrade","duration","isClosable","onError","message","_jsxs","_Fragment","children","_jsx","NavbarWithCallToAction","Box","p","VStack","spacing","align","maxW","mx","HStack","IconButton","icon","FiArrowLeft","onClick","variant","Heading","size","onSubmit","async","e","preventDefault","filteredCommitUrls","url","trim","length","variables","input","undefined","Card","bg","getColor","CardBody","FormControl","isRequired","FormLabel","Input","value","onChange","target","placeholder","Textarea","rows","Select","selectedId","selectedTenant","find","id","name","map","tenant","justify","Button","leftIcon","FiPlus","handleAddCommitUrl","colorScheme","index","handleCommitUrlChange","newUrls","FiTrash2","_","i","handleRemoveCommitUrl","Text","fontSize","color","Tabs","TabList","Tab","TabPanels","TabPanel","px","fontFamily","border","borderColor","borderRadius","minH","ReactMarkdown","type","isLoading","_hover","FooterWithFourColumns"],"sourceRoot":""}