{"version":3,"file":"static/js/9664.b1e55991.chunk.js","mappings":"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","sources":["pages/projects/ProjectsList.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  SimpleGrid,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  Text,\n  VStack,\n  HStack,\n  Badge,\n  Avatar,\n  Icon,\n  Button,\n  Skeleton,\n  useToast,\n  Progress,\n  Center,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { useNavigate } from \"react-router-dom\";\nimport { NavbarWithCallToAction } from \"../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction\";\nimport { FooterWithFourColumns } from \"../../components/chakra/FooterWithFourColumns/FooterWithFourColumns\";\nimport { ModuleBreadcrumb } from \"../../components/ModuleBreadcrumb\";\nimport { FiUsers, FiCheckCircle, FiDollarSign, FiTrash2, FiLock } from \"react-icons/fi\";\nimport projectsModuleConfig from \"./moduleConfig\";\nimport { getColor, getComponent, brandConfig } from \"../../brandConfig\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { usePageTitle } from \"../../hooks/useDocumentTitle\";\n\nconst GET_ALL_PROJECTS = gql`\n  query GetAllProjects {\n    projects {\n      id\n      projectName\n      projectGoal\n      progress\n      billingClient {\n        id\n        fName\n        lName\n        email\n        businessName\n      }\n      members {\n        id\n        fName\n        lName\n        email\n      }\n      tasks {\n        id\n        description\n        status\n        assignedTo {\n          id\n          fName\n          lName\n        }\n        billed\n      }\n      bills {\n        id\n        lineItems {\n          id\n          amount\n        }\n        isPaid\n        status\n      }\n    }\n  }\n`;\n\nconst DELETE_PROJECT = gql`\n  mutation DeleteProject($id: ID!) {\n    deleteProject(id: $id)\n  }\n`;\n\nconst ProjectCard = ({ project, onDelete }: { project: any, onDelete: () => void }) => {\n  const toast = useToast();\n  const navigate = useNavigate();\n  const { colorMode } = useColorMode();\n\n  // Consistent styling from brandConfig\n  const cardGradientBg = getColor(\"background.cardGradient\", colorMode);\n  const cardBorder = getColor(\"border.darkCard\", colorMode);\n  const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n  const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n  const textMuted = getColor(colorMode === 'light' ? \"text.muted\" : \"text.mutedDark\", colorMode);\n\n  const handleClick = (e: React.MouseEvent, action: \"view\" | \"delete\") => {\n    e.stopPropagation();\n    if (action === \"delete\") {\n      if (window.confirm(\"Are you sure you want to delete this project?\")) {\n        onDelete();\n      }\n    } else {\n      navigate(`/project/${project.id}`);\n    }\n  };\n\n  // Debug logging\n  console.log(`Project ${project.projectName}:`, {\n    tasks: project.tasks,\n    taskCount: project.tasks?.length || 0,\n    bills: project.bills,\n    members: project.members\n  });\n\n  const completedTasks = project.tasks.filter((t: any) => t.status === \"COMPLETED\").length;\n  const billedTasks = project.tasks.filter((t: any) => t.billed).length;\n  \n  // Count bills that are either SENT or marked as PAID (regardless of status)\n  // This ensures we include all actual bills, not drafts/proposals that haven't been sent\n  const actualBills = project.bills.filter((b: any) => b.status === \"SENT\" || b.isPaid);\n  const totalBilled = actualBills.reduce((sum: number, bill: any) =>\n    sum + (bill.lineItems?.reduce((itemSum: number, item: any) => itemSum + (item.amount || 0), 0) || 0),\n    0);\n  const paidBills = actualBills.filter((b: any) => b.isPaid).length;\n  \n  // Debug logging for billing\n  console.log(`Project ${project.projectName} billing:`, {\n    allBills: project.bills.length,\n    actualBills: actualBills.length,\n    sentBills: project.bills.filter((b: any) => b.status === \"SENT\").length,\n    paidBills: project.bills.filter((b: any) => b.isPaid).length,\n    draftBills: project.bills.filter((b: any) => b.status === \"DRAFT\" && !b.isPaid).length,\n    proposalBills: project.bills.filter((b: any) => b.status === \"PROPOSAL\" && !b.isPaid).length,\n    totalBilled\n  });\n\n  return (\n    <Card\n      bg={cardGradientBg}\n      backdropFilter=\"blur(10px)\"\n      boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n      border=\"1px\"\n      borderColor={cardBorder}\n      borderRadius=\"lg\"\n      cursor=\"pointer\"\n      onClick={(e) => handleClick(e, \"view\")}\n      _hover={{\n        transform: \"translateY(-4px)\",\n        boxShadow: \"0 12px 40px 0 rgba(0, 0, 0, 0.5)\",\n        borderColor: textSecondary,\n        transition: \"all 0.2s\"\n      }}\n      transition=\"all 0.2s\"\n    >\n      <CardHeader>\n        <HStack justify=\"space-between\" width=\"full\">\n          <VStack align=\"start\" spacing={2}>\n            <Heading size=\"md\" color={textPrimary} fontFamily={brandConfig.fonts.heading}>\n              {project.projectName}\n            </Heading>\n            <HStack spacing={2} flexWrap=\"wrap\">\n              {project.billingClient.businessName && (\n                <Badge \n                  bg=\"rgba(59, 130, 246, 0.2)\"\n                  color=\"#3B82F6\"\n                  border=\"1px solid\"\n                  borderColor=\"rgba(59, 130, 246, 0.3)\"\n                >{project.billingClient.businessName}</Badge>\n              )}\n              <Badge \n                bg=\"rgba(251, 146, 60, 0.2)\"\n                color=\"#FB923C\"\n                border=\"1px solid\"\n                borderColor=\"rgba(251, 146, 60, 0.3)\"\n                fontSize=\"sm\" px={2} py={1}>\n                {project.tasks?.length || 0} Total Tasks\n              </Badge>\n              <Badge \n                bg=\"rgba(34, 197, 94, 0.2)\"\n                color=\"#22C55E\"\n                border=\"1px solid\"\n                borderColor=\"rgba(34, 197, 94, 0.3)\"\n                fontSize=\"sm\" px={2} py={1}>\n                {completedTasks} Completed\n              </Badge>\n              <Badge \n                bg=\"rgba(168, 85, 247, 0.2)\"\n                color=\"#A855F7\"\n                border=\"1px solid\"\n                borderColor=\"rgba(168, 85, 247, 0.3)\"\n                fontSize=\"sm\" px={2} py={1}>\n                ${totalBilled.toLocaleString()} Billed\n              </Badge>\n            </HStack>\n          </VStack>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={(e) => handleClick(e, \"delete\")}\n            color=\"#EF4444\"\n            _hover={{ bg: \"rgba(239, 68, 68, 0.2)\", color: \"#EF4444\" }}\n          >\n            <Icon as={FiTrash2} />\n          </Button>\n        </HStack>\n      </CardHeader>\n\n      <CardBody>\n        <VStack align=\"start\" spacing={4}>\n          <Text noOfLines={2} color={textSecondary} fontFamily={brandConfig.fonts.body}>\n            {project.projectGoal}\n          </Text>\n\n          <Box width=\"full\">\n            <HStack justify=\"space-between\" mb={1}>\n              <Text fontSize=\"sm\" fontWeight=\"medium\" color={textPrimary}>Project Progress</Text>\n              <Text fontSize=\"sm\" color={textSecondary}>{project.progress || 0}%</Text>\n            </HStack>\n            <Progress\n              value={project.progress || 0}\n              size=\"sm\"\n              colorScheme={\n                (project.progress || 0) >= 100 ? \"green\" :\n                  (project.progress || 0) >= 50 ? \"blue\" : \"yellow\"\n              }\n              borderRadius=\"full\"\n              hasStripe\n              isAnimated\n            />\n          </Box>\n\n          <SimpleGrid columns={4} spacing={4} width=\"full\">\n            <VStack>\n              <Icon as={FiUsers} color=\"#3B82F6\" boxSize={5} />\n              <Text fontWeight=\"bold\" color={textPrimary}>{project.members.length}</Text>\n              <Text fontSize=\"sm\" color={textMuted}>Members</Text>\n            </VStack>\n\n            <VStack>\n              <Icon as={FiCheckCircle} color=\"#22C55E\" boxSize={5} />\n              <Text fontWeight=\"bold\" color={textPrimary}>{completedTasks}/{project.tasks.length}</Text>\n              <Text fontSize=\"sm\" color={textMuted}>Tasks Done</Text>\n            </VStack>\n\n            <VStack>\n              <Icon as={FiDollarSign} color=\"#A855F7\" boxSize={5} />\n              <Text fontWeight=\"bold\" color={textPrimary}>${totalBilled}</Text>\n              <Text fontSize=\"sm\" color={textMuted}>Billed</Text>\n            </VStack>\n\n            <VStack>\n              <Icon as={FiCheckCircle} color=\"#14B8A6\" boxSize={5} />\n              <Text fontWeight=\"bold\" color={textPrimary}>{billedTasks}/{project.tasks.length}</Text>\n              <Text fontSize=\"sm\" color={textMuted}>Tasks Billed</Text>\n            </VStack>\n          </SimpleGrid>\n\n          <HStack spacing={2} wrap=\"wrap\">\n            {project.members.slice(0, 3).map((member: any) => (\n              <Avatar\n                key={member.id}\n                size=\"sm\"\n                name={`${member.fName} ${member.lName}`}\n                title={`${member.fName} ${member.lName}`}\n                bg=\"#3B82F6\"\n              />\n            ))}\n            {project.members.length > 3 && (\n              <Avatar\n                size=\"sm\"\n                name={`+${project.members.length - 3}`}\n                bg={textMuted}\n              />\n            )}\n          </HStack>\n\n          {actualBills.length > 0 && (\n            <HStack spacing={2}>\n              <Badge \n                bg={paidBills === actualBills.length ? \"rgba(34, 197, 94, 0.2)\" : \"rgba(251, 191, 36, 0.2)\"}\n                color={paidBills === actualBills.length ? \"#22C55E\" : \"#FBBF24\"}\n                border=\"1px solid\"\n                borderColor={paidBills === actualBills.length ? \"rgba(34, 197, 94, 0.3)\" : \"rgba(251, 191, 36, 0.3)\"}\n              >\n                {paidBills}/{actualBills.length} Bills Paid\n              </Badge>\n              <Badge \n                bg=\"rgba(59, 130, 246, 0.2)\"\n                color=\"#3B82F6\"\n                border=\"1px solid\"\n                borderColor=\"rgba(59, 130, 246, 0.3)\"\n              >\n                {billedTasks}/{project.tasks.length} Tasks Billed\n              </Badge>\n            </HStack>\n          )}\n        </VStack>\n      </CardBody>\n    </Card>\n  );\n};\n\nconst ProjectsList = () => {\n  usePageTitle(\"Projects\");\n  const toast = useToast();\n  const navigate = useNavigate();\n  const { loading: authLoading, isAuthenticated, user } = useAuth();\n  const { loading, error, data, refetch } = useQuery(GET_ALL_PROJECTS, {\n    skip: !isAuthenticated || !user?.permissions?.includes(\"PROJECTS_ADMIN\"),\n  });\n  const bg = getColor(\"background.main\");\n  const cardGradientBg = getColor(\"background.cardGradient\");\n  const cardBorder = getColor(\"border.darkCard\");\n  const textPrimary = getColor(\"text.primaryDark\");\n  const textSecondary = getColor(\"text.secondaryDark\");\n  const textMuted = getColor(\"text.mutedDark\");\n\n  // Check authentication and permissions\n  useEffect(() => {\n    if (!authLoading && !isAuthenticated) {\n      toast({\n        title: \"Authentication required\",\n        description: \"Please log in to access projects\",\n        status: \"warning\",\n        duration: 3000,\n      });\n      navigate(\"/\");\n    } else if (!authLoading && isAuthenticated && !user?.permissions?.includes(\"PROJECTS_ADMIN\")) {\n      // User is authenticated but doesn't have the required permission\n      // Don't redirect, just show access denied\n    }\n  }, [authLoading, isAuthenticated, user, navigate, toast]);\n\n  const [deleteProject] = useMutation(DELETE_PROJECT, {\n    onCompleted: () => {\n      toast({\n        title: \"Project deleted\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      refetch(); // Refresh the projects list\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error deleting project\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    },\n  });\n\n  const handleDeleteProject = async (projectId: string) => {\n    try {\n      await deleteProject({\n        variables: { id: projectId },\n      });\n    } catch (error) {\n      console.error(\"Error deleting project:\", error);\n    }\n  };\n\n  if (error) {\n    console.error(\"GraphQL Error:\", error);\n    return <Text>Error: {error.message}</Text>;\n  }\n\n  return (\n    <Box bg={bg} minHeight=\"100vh\" display=\"flex\" flexDirection=\"column\">\n      <NavbarWithCallToAction />\n      <ModuleBreadcrumb moduleConfig={projectsModuleConfig} />\n      <Container maxW=\"container.xl\" py={12} flex=\"1\">\n        {/* Show access denied if user doesn't have permission */}\n        {!authLoading && isAuthenticated && !user?.permissions?.includes(\"PROJECTS_ADMIN\") ? (\n          <Center minH=\"50vh\">\n            <VStack spacing={6}>\n              <Icon as={FiLock} boxSize={16} color={textMuted} />\n              <Heading size=\"lg\" color={textPrimary}>\n                Access Denied\n              </Heading>\n              <Text color={textMuted} textAlign=\"center\" maxW=\"md\">\n                You need PROJECTS_ADMIN permission to access this page. Please contact your administrator to request access.\n              </Text>\n              <Button\n                onClick={() => navigate(\"/\")}\n                variant=\"outline\"\n                borderColor={cardBorder}\n                color={textPrimary}\n                _hover={{\n                  borderColor: textSecondary,\n                  bg: \"rgba(255, 255, 255, 0.05)\"\n                }}\n              >\n                Go to Home\n              </Button>\n            </VStack>\n          </Center>\n        ) : (\n        <VStack spacing={8} align=\"stretch\">\n          <HStack justify=\"space-between\">\n            <Heading size=\"lg\" color={textPrimary} fontFamily={brandConfig.fonts.heading}>\n              📂 Projects\n            </Heading>\n            <Button\n              bg=\"white\"\n              color=\"black\"\n              _hover={{ \n                bg: \"gray.100\",\n                transform: \"translateY(-2px)\"\n              }}\n              _active={{ transform: \"translateY(1px)\" }}\n              onClick={() => navigate(\"/projects/new\")}\n              size=\"lg\"\n              fontFamily={brandConfig.fonts.body}\n              boxShadow=\"0 2px 4px rgba(255, 255, 255, 0.1)\"\n            >\n              New Project\n            </Button>\n          </HStack>\n\n          {loading ? (\n            <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={6}>\n              {[...Array(6)].map((_, i) => (\n                <Skeleton key={i} height=\"300px\" borderRadius=\"lg\" />\n              ))}\n            </SimpleGrid>\n          ) : (\n            <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={6}>\n              {data?.projects.map((project: any) => (\n                <ProjectCard\n                  key={project.id}\n                  project={project}\n                  onDelete={() => handleDeleteProject(project.id)}\n                />\n              ))}\n            </SimpleGrid>\n          )}\n\n          {/* Empty state */}\n          {!loading && data?.projects?.length === 0 && (\n            <Box\n              textAlign=\"center\"\n              py={12}\n              px={6}\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              borderStyle=\"dashed\"\n              borderColor={cardBorder}\n              bg={cardGradientBg}\n              backdropFilter=\"blur(10px)\"\n            >\n              <Icon as={FiCheckCircle} boxSize={12} color=\"#3B82F6\" mb={4} />\n              <Heading as=\"h4\" size=\"md\" mb={2} color={textPrimary}>\n                No projects yet\n              </Heading>\n              <Text color={textMuted} mb={4}>\n                Start by creating your first project to organize your work\n              </Text>\n              <Button\n                bg=\"white\"\n                color=\"black\"\n                _hover={{ \n                  bg: \"gray.100\",\n                  transform: \"translateY(-2px)\"\n                }}\n                onClick={() => navigate(\"/projects/new\")}\n              >\n                Create First Project\n              </Button>\n            </Box>\n          )}\n        </VStack>\n        )}\n      </Container>\n      <FooterWithFourColumns />\n    </Box>\n  );\n};\n\nexport default ProjectsList; "],"names":["GET_ALL_PROJECTS","gql","_templateObject","_taggedTemplateLiteral","DELETE_PROJECT","_templateObject2","ProjectCard","_ref","_project$tasks","_project$tasks2","project","onDelete","useToast","navigate","useNavigate","colorMode","useColorMode","cardGradientBg","getColor","cardBorder","textPrimary","textSecondary","textMuted","handleClick","e","action","stopPropagation","window","confirm","concat","id","console","log","projectName","tasks","taskCount","length","bills","members","completedTasks","filter","t","status","billedTasks","billed","actualBills","b","isPaid","totalBilled","reduce","sum","bill","_bill$lineItems","lineItems","itemSum","item","amount","paidBills","allBills","sentBills","draftBills","proposalBills","_jsxs","Card","bg","backdropFilter","boxShadow","border","borderColor","borderRadius","cursor","onClick","_hover","transform","transition","children","_jsx","CardHeader","HStack","justify","width","VStack","align","spacing","Heading","size","color","fontFamily","brandConfig","fonts","heading","flexWrap","billingClient","businessName","Badge","fontSize","px","py","toLocaleString","Button","variant","Icon","as","FiTrash2","CardBody","Text","noOfLines","body","projectGoal","Box","mb","fontWeight","progress","Progress","value","colorScheme","hasStripe","isAnimated","SimpleGrid","columns","FiUsers","boxSize","FiCheckCircle","FiDollarSign","wrap","slice","map","member","Avatar","name","fName","lName","title","ProjectsList","_user$permissions","_user$permissions3","_data$projects","usePageTitle","toast","loading","authLoading","isAuthenticated","user","useAuth","error","data","refetch","useQuery","skip","permissions","includes","useEffect","_user$permissions2","description","duration","deleteProject","useMutation","onCompleted","isClosable","onError","message","minHeight","display","flexDirection","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","projectsModuleConfig","Container","maxW","flex","_active","base","md","lg","Array","_","i","Skeleton","height","projects","async","variables","projectId","handleDeleteProject","textAlign","borderWidth","borderStyle","Center","minH","FiLock","FooterWithFourColumns"],"sourceRoot":""}