{"version":3,"file":"static/js/5202.4919762b.chunk.js","mappings":"ijBAiCA,MAAMA,GAAoBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sNAgBvBC,GAA4BH,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6HAM/BG,GAAkBL,EAAAA,EAAAA,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mFAyQ3B,EAnQgCK,KAC9B,MAAMC,GAAWC,EAAAA,EAAAA,OACX,UAAEC,IAAcC,EAAAA,EAAAA,MAChBC,GAAQC,EAAAA,EAAAA,MACR,KAAEC,EAAI,QAAEC,EAAO,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,IAASnB,IAC5CoB,IAAmBC,EAAAA,EAAAA,GAAYjB,IAC/BkB,IAAkBD,EAAAA,EAAAA,GAAYf,GAE/BiB,GAAKC,EAAAA,EAAAA,IAAS,kBAAmBb,GACjCc,EAAuB,UAAdd,EAAwB,QAAU,WAC3Ce,GAAcF,EAAAA,EAAAA,IAAuB,UAAdb,EAAwB,eAAiB,mBAAoBA,GACpFgB,GAAgBH,EAAAA,EAAAA,IAAuB,UAAdb,EAAwB,iBAAmB,qBAAsBA,GAE1FiB,EAAkBC,IACtB,OAAQA,GACN,IAAK,QAML,QAAS,MAAO,OALhB,IAAK,OAAQ,MAAO,OACpB,IAAK,mBAAoB,MAAO,SAChC,IAAK,eAAgB,MAAO,QAC5B,IAAK,UACL,IAAK,YAAa,MAAO,QAgE7B,GAAIb,EACF,OACEc,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACR,GAAIA,EAAIS,KAAK,QAAQC,GAAI,GAAGC,UAC/BJ,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,KAAK,eAAcF,UAC5BG,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAEL,SAAA,EACjBJ,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CAACC,KAAK,KAAKC,MAAM,cACzBZ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACD,MAAOhB,EAAYQ,SAAC,gCAOpC,GAAIjB,EACF,OACEa,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACR,GAAIA,EAAIS,KAAK,QAAQC,GAAI,GAAGC,UAC/BJ,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,KAAK,eAAcF,UAC5BG,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACf,OAAO,QAAOK,SAAA,EACnBJ,EAAAA,EAAAA,KAACe,EAAAA,EAAS,IAAG,4BACa5B,EAAM6B,eAO1C,MAAMC,GAAgB,OAAJhC,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,kBAAmB,GAE3C,OACEX,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAf,SAAA,EACEJ,EAAAA,EAAAA,KAACoB,EAAAA,EAAsB,KACvBpB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACR,GAAIA,EAAIS,KAAK,QAAQC,GAAI,GAAGC,UAC/BG,EAAAA,EAAAA,MAACF,EAAAA,EAAS,CAACC,KAAK,eAAcF,SAAA,EAC5BJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CAACC,aAAcC,EAAAA,WAChChB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGe,MAAM,UAASpB,SAAA,EAEjCG,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACC,QAAQ,gBAAetB,SAAA,EAC/BG,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACgB,MAAM,QAAQf,QAAS,EAAEL,SAAA,EAC/BJ,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAAChB,KAAK,KAAKC,MAAOhB,EAAYQ,SAAC,eACvCJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACD,MAAOf,EAAcO,SAAC,qDAE9BJ,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACLC,UAAU7B,EAAAA,EAAAA,KAAC8B,EAAAA,IAAM,IACjBC,YAAY,OACZC,QAASA,IAAMrD,EAAS,kBAAkByB,SAC3C,qBAMHJ,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFR,GAAIE,EACJsC,aAAa,KACbC,OAAO,KACPC,SAAS,SAAQ/B,SAEK,IAArBa,EAAUmB,QACT7B,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGN,GAAI,GAAGC,SAAA,EACzBJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACwB,SAAS,KAAKzB,MAAOf,EAAcO,SAAC,sBAC1CJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACD,MAAOf,EAAcO,SAAC,+CAC5BJ,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACLC,UAAU7B,EAAAA,EAAAA,KAAC8B,EAAAA,IAAM,IACjBC,YAAY,OACZC,QAASA,IAAMrD,EAAS,kBAAkByB,SAC3C,wBAKHG,EAAAA,EAAAA,MAAC+B,EAAAA,EAAK,CAACC,QAAQ,SAAQnC,SAAA,EACrBJ,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CAAApC,UACJG,EAAAA,EAAAA,MAACkC,EAAAA,GAAE,CAAArC,SAAA,EACDJ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAE,CAAAtC,SAAC,aACJJ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAE,CAAAtC,SAAC,WACJJ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAE,CAAAtC,SAAC,YACJJ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAE,CAAAtC,SAAC,gBACJJ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAE,CAAAtC,SAAC,aACJJ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAE,CAAAtC,SAAC,kBAGRJ,EAAAA,EAAAA,KAAC2C,EAAAA,EAAK,CAAAvC,SACHa,EAAU2B,IAAKC,IACdtC,EAAAA,EAAAA,MAACkC,EAAAA,GAAE,CAAArC,SAAA,EACDJ,EAAAA,EAAAA,KAAC8C,EAAAA,GAAE,CAAA1C,UACDG,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACgB,MAAM,QAAQf,QAAS,EAAEL,SAAA,EAC/BJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACkC,WAAW,OAAOnC,MAAOhB,EAAYQ,SAAEyC,EAASG,eACtDzC,EAAAA,EAAAA,MAACM,EAAAA,EAAI,CAACwB,SAAS,KAAKzB,MAAOf,EAAcO,SAAA,CAAC,IAAEyC,EAASI,cAGzDjD,EAAAA,EAAAA,KAAC8C,EAAAA,GAAE,CAAA1C,UACDJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACD,MAAOhB,EAAYQ,SAAEyC,EAASK,WAEtClD,EAAAA,EAAAA,KAAC8C,EAAAA,GAAE,CAAA1C,UACDJ,EAAAA,EAAAA,KAACmD,EAAAA,EAAK,CAACpB,YAAajC,EAAe+C,EAAS9C,QAAQK,SACjDyC,EAAS9C,YAGdC,EAAAA,EAAAA,KAAC8C,EAAAA,GAAE,CAAA1C,UACDJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACD,MAAOhB,EAAYQ,SACF,iBAApByC,EAAS9C,OAA4B,gBAAa,cAGvDC,EAAAA,EAAAA,KAAC8C,EAAAA,GAAE,CAAA1C,UACDJ,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACD,MAAOf,EAAewC,SAAS,KAAIjC,SACtC,IAAIgD,KAAKP,EAASQ,WAAWC,0BAGlCtD,EAAAA,EAAAA,KAAC8C,EAAAA,GAAE,CAAA1C,UACDG,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAAChB,QAAS,EAAEL,SAAA,EACjBJ,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,CAACC,MAAM,eAAcpD,UAC3BJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACT,aAAW,gBACXC,MAAM1D,EAAAA,EAAAA,KAAC2D,EAAAA,IAAK,IACZhD,KAAK,KACL4B,QAAQ,QACRP,QAASA,IAAMrD,EAAS,cAADiF,OAAef,EAASgB,SAGlDhB,EAASiB,iBACR9D,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,CAACC,MAAM,mBAAkBpD,UAC/BJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACT,aAAW,mBACXC,MAAM1D,EAAAA,EAAAA,KAAC+D,EAAAA,IAAc,IACrBpD,KAAK,KACL4B,QAAQ,QACRP,QAASA,IAAMrD,EAASkE,EAASiB,qBAIvC9D,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,CAACC,MAAM,gBAAepD,UAC5BJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACT,aAAW,gBACXC,MAAM1D,EAAAA,EAAAA,KAACgE,EAAAA,IAAM,IACbrD,KAAK,KACL4B,QAAQ,QACRP,QAASA,IAAMrD,EAAS,cAADiF,OAAef,EAASgB,GAAE,eAGrD7D,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,CAACC,MAAM,mBAAkBpD,UAC/BJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACT,aAAW,mBACXC,MAAM1D,EAAAA,EAAAA,KAACiE,EAAAA,IAAW,IAClBtD,KAAK,KACL4B,QAAQ,QACRR,YAAY,SACZC,QAASA,IA1MPkC,OAAOC,EAAoBnB,KACvD,GAAKoB,OAAOC,QAAQ,uBAADT,OAAwBZ,EAAW,0EAItD,UACQ1D,EAAgB,CACpBgF,UAAW,CAAEH,gBAGfpF,EAAM,CACJmE,MAAO,iBACPqB,YAAY,IAADX,OAAMZ,EAAW,oCAC5BjD,OAAQ,UACRyE,SAAU,MAGZpF,GACF,CAAE,MAAOD,GACPJ,EAAM,CACJmE,MAAO,2BACPqB,YAAapF,aAAiBsF,MAAQtF,EAAM6B,QAAU,gBACtDjB,OAAQ,QACRyE,SAAU,KAEd,GAiLyCE,CAAsB7B,EAASgB,GAAIhB,EAASG,kBAG/DhD,EAAAA,EAAAA,KAACuD,EAAAA,EAAO,CAACC,MAAM,kBAAiBpD,UAC9BJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACT,aAAW,kBACXC,MAAM1D,EAAAA,EAAAA,KAAC2E,EAAAA,IAAQ,IACfhE,KAAK,KACL4B,QAAQ,QACRR,YAAY,MACZC,QAASA,IAxLRkC,OAAOC,EAAoBnB,KACtD,GAAKoB,OAAOC,QAAQ,iDAADT,OAAwCZ,EAAW,sHAItE,UACQxD,EAAe,CACnB8E,UAAW,CAAET,GAAIM,KAGnBpF,EAAM,CACJmE,MAAO,mBACPqB,YAAY,IAADX,OAAMZ,EAAW,kCAC5BjD,OAAQ,UACRyE,SAAU,MAGZpF,GACF,CAAE,MAAOD,GACPJ,EAAM,CACJmE,MAAO,0BACPqB,YAAapF,aAAiBsF,MAAQtF,EAAM6B,QAAU,gBACtDjB,OAAQ,QACRyE,SAAU,KAEd,GA+JyCI,CAAqB/B,EAASgB,GAAIhB,EAASG,wBAzE3DH,EAASgB,qBAuFlC7D,EAAAA,EAAAA,KAAC6E,EAAAA,EAAqB,O","sources":["pages/proposals/ProposalsList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Container,\n  Heading,\n  Text,\n  Button,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Badge,\n  HStack,\n  VStack,\n  useColorMode,\n  Spinner,\n  Alert,\n  AlertIcon,\n  IconButton,\n  Tooltip,\n  useToast,\n} from '@chakra-ui/react';\nimport { FiPlus, FiEye, FiEdit, FiExternalLink, FiRotateCcw, FiTrash2 } from 'react-icons/fi';\nimport { useNavigate } from 'react-router-dom';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { getColor } from '../../brandConfig';\nimport { FooterWithFourColumns } from '../../components/chakra/FooterWithFourColumns/FooterWithFourColumns';\nimport { NavbarWithCallToAction } from '../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction';\nimport { ModuleBreadcrumb } from '../../components/ModuleBreadcrumb';\nimport proposalsModuleConfig from './moduleConfig';\n\nconst GET_ALL_PROPOSALS = gql`\n  query GetAllProposals {\n    getAllProposals {\n      id\n      companyName\n      slug\n      title\n      status\n      createdAt\n      sentAt\n      fullySignedAt\n      customPagePath\n    }\n  }\n`;\n\nconst CLEAR_PROPOSAL_SIGNATURES = gql`\n  mutation ClearProposalSignatures($proposalId: ID!) {\n    clearProposalSignatures(proposalId: $proposalId)\n  }\n`;\n\nconst DELETE_PROPOSAL = gql`\n  mutation DeleteProposal($id: ID!) {\n    deleteProposal(id: $id)\n  }\n`;\n\nconst ProposalsList: React.FC = () => {\n  const navigate = useNavigate();\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n  const { data, loading, error, refetch } = useQuery(GET_ALL_PROPOSALS);\n  const [clearSignatures] = useMutation(CLEAR_PROPOSAL_SIGNATURES);\n  const [deleteProposal] = useMutation(DELETE_PROPOSAL);\n\n  const bg = getColor(\"background.main\", colorMode);\n  const cardBg = colorMode === 'light' ? 'white' : 'gray.800';\n  const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n  const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'DRAFT': return 'gray';\n      case 'SENT': return 'blue';\n      case 'PARTIALLY_SIGNED': return 'orange';\n      case 'FULLY_SIGNED': return 'green';\n      case 'EXPIRED': return 'red';\n      case 'CANCELLED': return 'red';\n      default: return 'gray';\n    }\n  };\n\n  // We'll fetch signature counts separately for each proposal\n  // For now, we'll show status instead of signature count\n\n  const handleClearSignatures = async (proposalId: string, companyName: string) => {\n    if (!window.confirm(`Reset proposal for \"${companyName}\"? This will clear all signatures and start fresh from the agreement.`)) {\n      return;\n    }\n\n    try {\n      await clearSignatures({\n        variables: { proposalId },\n      });\n\n      toast({\n        title: 'Proposal reset',\n        description: `\"${companyName}\" has been reset to draft status`,\n        status: 'success',\n        duration: 3000,\n      });\n\n      refetch();\n    } catch (error) {\n      toast({\n        title: 'Error resetting proposal',\n        description: error instanceof Error ? error.message : 'Unknown error',\n        status: 'error',\n        duration: 5000,\n      });\n    }\n  };\n\n  const handleDeleteProposal = async (proposalId: string, companyName: string) => {\n    if (!window.confirm(`⚠️ PERMANENTLY DELETE proposal for \"${companyName}\"?\\n\\nThis will delete:\\n- The proposal\\n- All signatures\\n- All associated data\\n\\nThis action CANNOT be undone!`)) {\n      return;\n    }\n\n    try {\n      await deleteProposal({\n        variables: { id: proposalId },\n      });\n\n      toast({\n        title: 'Proposal deleted',\n        description: `\"${companyName}\" has been permanently deleted`,\n        status: 'success',\n        duration: 3000,\n      });\n\n      refetch();\n    } catch (error) {\n      toast({\n        title: 'Error deleting proposal',\n        description: error instanceof Error ? error.message : 'Unknown error',\n        status: 'error',\n        duration: 5000,\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box bg={bg} minH=\"100vh\" py={10}>\n        <Container maxW=\"container.xl\">\n          <VStack spacing={8}>\n            <Spinner size=\"xl\" color=\"blue.500\" />\n            <Text color={textPrimary}>Loading proposals...</Text>\n          </VStack>\n        </Container>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box bg={bg} minH=\"100vh\" py={10}>\n        <Container maxW=\"container.xl\">\n          <Alert status=\"error\">\n            <AlertIcon />\n            Error loading proposals: {error.message}\n          </Alert>\n        </Container>\n      </Box>\n    );\n  }\n\n  const proposals = data?.getAllProposals || [];\n\n  return (\n    <>\n      <NavbarWithCallToAction />\n      <Box bg={bg} minH=\"100vh\" py={10}>\n        <Container maxW=\"container.xl\">\n          <ModuleBreadcrumb moduleConfig={proposalsModuleConfig} />\n          <VStack spacing={8} align=\"stretch\">\n            {/* Header */}\n            <HStack justify=\"space-between\">\n            <VStack align=\"start\" spacing={1}>\n              <Heading size=\"xl\" color={textPrimary}>Proposals</Heading>\n              <Text color={textSecondary}>Manage all business proposals and signatures</Text>\n            </VStack>\n            <Button\n              leftIcon={<FiPlus />}\n              colorScheme=\"blue\"\n              onClick={() => navigate('/proposals/new')}\n            >\n              New Proposal\n            </Button>\n          </HStack>\n\n          {/* Proposals Table */}\n          <Box\n            bg={cardBg}\n            borderRadius=\"lg\"\n            shadow=\"md\"\n            overflow=\"hidden\"\n          >\n            {proposals.length === 0 ? (\n              <VStack spacing={4} py={10}>\n                <Text fontSize=\"xl\" color={textSecondary}>No proposals yet</Text>\n                <Text color={textSecondary}>Create your first proposal to get started</Text>\n                <Button\n                  leftIcon={<FiPlus />}\n                  colorScheme=\"blue\"\n                  onClick={() => navigate('/proposals/new')}\n                >\n                  Create Proposal\n                </Button>\n              </VStack>\n            ) : (\n              <Table variant=\"simple\">\n                <Thead>\n                  <Tr>\n                    <Th>Company</Th>\n                    <Th>Title</Th>\n                    <Th>Status</Th>\n                    <Th>Signatures</Th>\n                    <Th>Created</Th>\n                    <Th>Actions</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {proposals.map((proposal: any) => (\n                    <Tr key={proposal.id}>\n                      <Td>\n                        <VStack align=\"start\" spacing={0}>\n                          <Text fontWeight=\"bold\" color={textPrimary}>{proposal.companyName}</Text>\n                          <Text fontSize=\"sm\" color={textSecondary}>/{proposal.slug}</Text>\n                        </VStack>\n                      </Td>\n                      <Td>\n                        <Text color={textPrimary}>{proposal.title}</Text>\n                      </Td>\n                      <Td>\n                        <Badge colorScheme={getStatusColor(proposal.status)}>\n                          {proposal.status}\n                        </Badge>\n                      </Td>\n                      <Td>\n                        <Text color={textPrimary}>\n                          {proposal.status === 'FULLY_SIGNED' ? '✓ Signed' : '—'}\n                        </Text>\n                      </Td>\n                      <Td>\n                        <Text color={textSecondary} fontSize=\"sm\">\n                          {new Date(proposal.createdAt).toLocaleDateString()}\n                        </Text>\n                      </Td>\n                      <Td>\n                        <HStack spacing={2}>\n                          <Tooltip label=\"View Details\">\n                            <IconButton\n                              aria-label=\"View proposal\"\n                              icon={<FiEye />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              onClick={() => navigate(`/proposals/${proposal.id}`)}\n                            />\n                          </Tooltip>\n                          {proposal.customPagePath && (\n                            <Tooltip label=\"Open Custom Page\">\n                              <IconButton\n                                aria-label=\"Open custom page\"\n                                icon={<FiExternalLink />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => navigate(proposal.customPagePath)}\n                              />\n                            </Tooltip>\n                          )}\n                          <Tooltip label=\"Edit Proposal\">\n                            <IconButton\n                              aria-label=\"Edit proposal\"\n                              icon={<FiEdit />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              onClick={() => navigate(`/proposals/${proposal.id}/edit`)}\n                            />\n                          </Tooltip>\n                          <Tooltip label=\"Reset Signatures\">\n                            <IconButton\n                              aria-label=\"Reset signatures\"\n                              icon={<FiRotateCcw />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              colorScheme=\"orange\"\n                              onClick={() => handleClearSignatures(proposal.id, proposal.companyName)}\n                            />\n                          </Tooltip>\n                          <Tooltip label=\"Delete Proposal\">\n                            <IconButton\n                              aria-label=\"Delete proposal\"\n                              icon={<FiTrash2 />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              colorScheme=\"red\"\n                              onClick={() => handleDeleteProposal(proposal.id, proposal.companyName)}\n                            />\n                          </Tooltip>\n                        </HStack>\n                      </Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </Table>\n            )}\n          </Box>\n        </VStack>\n      </Container>\n    </Box>\n    <FooterWithFourColumns />\n  </>\n  );\n};\n\nexport default ProposalsList;\n"],"names":["GET_ALL_PROPOSALS","gql","_templateObject","_taggedTemplateLiteral","CLEAR_PROPOSAL_SIGNATURES","_templateObject2","DELETE_PROPOSAL","_templateObject3","ProposalsList","navigate","useNavigate","colorMode","useColorMode","toast","useToast","data","loading","error","refetch","useQuery","clearSignatures","useMutation","deleteProposal","bg","getColor","cardBg","textPrimary","textSecondary","getStatusColor","status","_jsx","Box","minH","py","children","Container","maxW","_jsxs","VStack","spacing","Spinner","size","color","Text","Alert","AlertIcon","message","proposals","getAllProposals","_Fragment","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","proposalsModuleConfig","align","HStack","justify","Heading","Button","leftIcon","FiPlus","colorScheme","onClick","borderRadius","shadow","overflow","length","fontSize","Table","variant","Thead","Tr","Th","Tbody","map","proposal","Td","fontWeight","companyName","slug","title","Badge","Date","createdAt","toLocaleDateString","Tooltip","label","IconButton","icon","FiEye","concat","id","customPagePath","FiExternalLink","FiEdit","FiRotateCcw","async","proposalId","window","confirm","variables","description","duration","Error","handleClearSignatures","FiTrash2","handleDeleteProposal","FooterWithFourColumns"],"sourceRoot":""}