{"version":3,"file":"static/js/5823.e51639e2.chunk.js","mappings":"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","sources":["pages/employees/NewEmployee.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nimport {\n    Box,\n    Container,\n    Heading,\n    Card,\n    CardBody,\n    VStack,\n    HStack,\n    FormControl,\n    FormLabel,\n    FormHelperText,\n    Input,\n    Textarea,\n    Select,\n    Button,\n    useToast,\n    Divider,\n    Text,\n    Grid,\n    GridItem,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    Tag,\n    TagLabel,\n    TagCloseButton,\n    Wrap,\n    InputGroup,\n    InputLeftAddon,\n    useBreakpointValue,\n    Tabs,\n    TabList,\n    TabPanels,\n    Tab,\n    TabPanel,\n    useColorMode,\n} from \"@chakra-ui/react\";\nimport { AddIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport { getColor, brandConfig } from \"../../brandConfig\";\nimport { NavbarWithCallToAction } from \"../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction\";\nimport { FooterWithFourColumns } from \"../../components/chakra/FooterWithFourColumns/FooterWithFourColumns\";\nimport { ModuleBreadcrumb } from \"../../components/ModuleBreadcrumb\";\nimport employeesModuleConfig from \"./moduleConfig\";\nimport { Client } from \"../../generated/graphql\";\nimport { usePageTitle } from \"../../hooks/useDocumentTitle\";\n\nconst GET_CLIENTS = gql`\n    query GetClients {\n        clients {\n            id\n            fName\n            lName\n            email\n        }\n    }\n`;\n\nconst GET_COMPANIES = gql`\n    query GetCompanies {\n        companies {\n            id\n            name\n        }\n    }\n`;\n\nconst GET_EMPLOYEE = gql`\n    query GetEmployee($id: String!) {\n        employee(id: $id) {\n            id\n            clientId\n            companyId\n            employeeNumber\n            fName\n            lName\n            email\n            phoneNumber\n            mobileNumber\n            dateOfBirth\n            address {\n                street\n                city\n                state\n                postcode\n                country\n            }\n            role\n            department\n            position\n            status\n            startDate\n            endDate\n            contractType\n            workingRights\n            hourlyRate\n            annualSalary\n            taxFileNumber\n            superannuationFund\n            bankAccountName\n            bankAccountNumber\n            bankBSB\n            emergencyContact {\n                name\n                relationship\n                phoneNumber\n                email\n            }\n            qualifications\n            certifications\n            notes\n        }\n    }\n`;\n\nconst CREATE_EMPLOYEE = gql`\n    mutation CreateEmployee($input: EmployeeInput!) {\n        createEmployee(input: $input) {\n            id\n            employeeNumber\n            fName\n            lName\n            email\n            status\n        }\n    }\n`;\n\nconst UPDATE_EMPLOYEE = gql`\n    mutation UpdateEmployee($id: String!, $input: EmployeeInput!) {\n        updateEmployee(id: $id, input: $input) {\n            id\n            employeeNumber\n            fName\n            lName\n            email\n            status\n        }\n    }\n`;\n\n\nconst NewEmployee: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const isEditMode = !!id;\n\n    usePageTitle(isEditMode ? \"Edit Employee\" : \"New Employee\");\n\n    const navigate = useNavigate();\n    const toast = useToast();\n    const { colorMode } = useColorMode();\n    \n    // Brand styling\n    const bgMain = getColor(\"background.main\", colorMode);\n    const cardGradientBg = getColor(\"background.cardGradient\", colorMode);\n    const cardBorder = getColor(\"border.darkCard\", colorMode);\n    const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n    const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n    const textMuted = getColor(colorMode === 'light' ? \"text.muted\" : \"text.mutedDark\", colorMode);\n    const primaryColor = getColor(\"primary\", colorMode);\n    const primaryHover = getColor(\"primaryHover\", colorMode);\n    const errorRed = getColor(\"status.error\", colorMode);\n\n    // Responsive values\n    const gridColumns = useBreakpointValue({ base: 1, md: 2 });\n    const buttonSize = useBreakpointValue({ base: \"sm\", md: \"md\" });\n\n    // Form state - Basic Information\n    const [clientId, setClientId] = useState(\"\");\n    const [companyId, setCompanyId] = useState(\"\");\n    const [employeeNumber, setEmployeeNumber] = useState(\"\");\n    const [fName, setFName] = useState(\"\");\n    const [lName, setLName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [mobileNumber, setMobileNumber] = useState(\"\");\n    const [dateOfBirth, setDateOfBirth] = useState(\"\");\n\n    // Address\n    const [street, setStreet] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [postcode, setPostcode] = useState(\"\");\n    const [country, setCountry] = useState(\"Australia\");\n\n    // Employment Details\n    const [role, setRole] = useState(\"\");\n    const [department, setDepartment] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n    const [status, setStatus] = useState(\"ACTIVE\");\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const [contractType, setContractType] = useState(\"\");\n    const [workingRights, setWorkingRights] = useState(\"\");\n\n    // Compensation\n    const [hourlyRate, setHourlyRate] = useState(\"\");\n    const [annualSalary, setAnnualSalary] = useState(\"\");\n\n    // Banking & Tax\n    const [taxFileNumber, setTaxFileNumber] = useState(\"\");\n    const [superannuationFund, setSuperannuationFund] = useState(\"\");\n    const [bankAccountName, setBankAccountName] = useState(\"\");\n    const [bankAccountNumber, setBankAccountNumber] = useState(\"\");\n    const [bankBSB, setBankBSB] = useState(\"\");\n\n    // Emergency Contact\n    const [emergencyName, setEmergencyName] = useState(\"\");\n    const [emergencyRelationship, setEmergencyRelationship] = useState(\"\");\n    const [emergencyPhone, setEmergencyPhone] = useState(\"\");\n    const [emergencyEmail, setEmergencyEmail] = useState(\"\");\n\n    // Additional\n    const [qualifications, setQualifications] = useState<string[]>([]);\n    const [certifications, setCertifications] = useState<string[]>([]);\n    const [notes, setNotes] = useState(\"\");\n    const [currentQualification, setCurrentQualification] = useState(\"\");\n    const [currentCertification, setCurrentCertification] = useState(\"\");\n\n    // Queries and mutations\n    const { data: clientsData, loading: clientsLoading } = useQuery(GET_CLIENTS);\n    const { data: companiesData, loading: companiesLoading } = useQuery(GET_COMPANIES);\n\n    const { data: employeeData, loading: employeeLoading } = useQuery(GET_EMPLOYEE, {\n        variables: { id: id || \"\" },\n        skip: !isEditMode,\n    });\n\n    const [createEmployee, { loading: creating }] = useMutation(CREATE_EMPLOYEE, {\n        onCompleted: (data) => {\n            toast({\n                title: \"Employee created successfully\",\n                description: `${data.createEmployee.fName} ${data.createEmployee.lName} has been added`,\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n            navigate(\"/employees\");\n        },\n        onError: (error) => {\n            toast({\n                title: \"Error creating employee\",\n                description: error.message,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            });\n        },\n    });\n\n    const [updateEmployee, { loading: updating }] = useMutation(UPDATE_EMPLOYEE, {\n        onCompleted: (data) => {\n            toast({\n                title: \"Employee updated successfully\",\n                description: `${data.updateEmployee.fName} ${data.updateEmployee.lName} has been updated`,\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n            navigate(`/employees/${id}`);\n        },\n        onError: (error) => {\n            toast({\n                title: \"Error updating employee\",\n                description: error.message,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            });\n        },\n    });\n\n    // Populate form fields when editing\n    useEffect(() => {\n        if (isEditMode && employeeData?.employee) {\n            const emp = employeeData.employee;\n            setClientId(emp.clientId || \"\");\n            setCompanyId(emp.companyId || \"\");\n            setEmployeeNumber(emp.employeeNumber || \"\");\n            setFName(emp.fName || \"\");\n            setLName(emp.lName || \"\");\n            setEmail(emp.email || \"\");\n            setPhoneNumber(emp.phoneNumber || \"\");\n            setMobileNumber(emp.mobileNumber || \"\");\n            setDateOfBirth(emp.dateOfBirth || \"\");\n\n            // Address\n            if (emp.address) {\n                setStreet(emp.address.street || \"\");\n                setCity(emp.address.city || \"\");\n                setState(emp.address.state || \"\");\n                setPostcode(emp.address.postcode || \"\");\n                setCountry(emp.address.country || \"Australia\");\n            }\n\n            // Employment\n            setRole(emp.role || \"\");\n            setDepartment(emp.department || \"\");\n            setPosition(emp.position || \"\");\n            setStatus(emp.status || \"ACTIVE\");\n            setStartDate(emp.startDate || \"\");\n            setEndDate(emp.endDate || \"\");\n            setContractType(emp.contractType || \"\");\n            setWorkingRights(emp.workingRights || \"\");\n\n            // Compensation\n            setHourlyRate(emp.hourlyRate?.toString() || \"\");\n            setAnnualSalary(emp.annualSalary?.toString() || \"\");\n\n            // Banking & Tax\n            setTaxFileNumber(emp.taxFileNumber || \"\");\n            setSuperannuationFund(emp.superannuationFund || \"\");\n            setBankAccountName(emp.bankAccountName || \"\");\n            setBankAccountNumber(emp.bankAccountNumber || \"\");\n            setBankBSB(emp.bankBSB || \"\");\n\n            // Emergency Contact\n            if (emp.emergencyContact) {\n                setEmergencyName(emp.emergencyContact.name || \"\");\n                setEmergencyRelationship(emp.emergencyContact.relationship || \"\");\n                setEmergencyPhone(emp.emergencyContact.phoneNumber || \"\");\n                setEmergencyEmail(emp.emergencyContact.email || \"\");\n            }\n\n            // Additional\n            setQualifications(emp.qualifications || []);\n            setCertifications(emp.certifications || []);\n            setNotes(emp.notes || \"\");\n        }\n    }, [isEditMode, employeeData]);\n\n    // Handle form submission\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        // Validation\n        if (!clientId || !companyId || !fName || !lName) {\n            toast({\n                title: \"Missing required fields\",\n                description: \"Please fill in Client, Company, First Name, and Last Name\",\n                status: \"error\",\n                duration: 3000,\n            });\n            return;\n        }\n\n        const input: any = {\n            clientId,\n            companyId,\n            fName,\n            lName,\n            status,\n        };\n\n        // Add optional fields\n        if (employeeNumber) input.employeeNumber = employeeNumber;\n        if (email) input.email = email;\n        if (phoneNumber) input.phoneNumber = phoneNumber;\n        if (mobileNumber) input.mobileNumber = mobileNumber;\n        if (dateOfBirth) input.dateOfBirth = new Date(dateOfBirth);\n        if (role) input.role = role;\n        if (department) input.department = department;\n        if (position) input.position = position;\n        if (startDate) input.startDate = new Date(startDate);\n        if (endDate) input.endDate = new Date(endDate);\n        if (contractType) input.contractType = contractType;\n        if (workingRights) input.workingRights = workingRights;\n        if (hourlyRate) input.hourlyRate = parseFloat(hourlyRate);\n        if (annualSalary) input.annualSalary = parseFloat(annualSalary);\n        if (taxFileNumber) input.taxFileNumber = taxFileNumber;\n        if (superannuationFund) input.superannuationFund = superannuationFund;\n        if (bankAccountName) input.bankAccountName = bankAccountName;\n        if (bankAccountNumber) input.bankAccountNumber = bankAccountNumber;\n        if (bankBSB) input.bankBSB = bankBSB;\n        if (notes) input.notes = notes;\n\n        // Address\n        if (street || city || state || postcode || country) {\n            input.address = {\n                street,\n                city,\n                state,\n                postcode,\n                country,\n            };\n        }\n\n        // Emergency contact\n        if (emergencyName || emergencyPhone) {\n            input.emergencyContact = {\n                name: emergencyName,\n                relationship: emergencyRelationship,\n                phone: emergencyPhone,\n                email: emergencyEmail,\n            };\n        }\n\n        // Arrays\n        if (qualifications.length > 0) input.qualifications = qualifications;\n        if (certifications.length > 0) input.certifications = certifications;\n\n        if (isEditMode && id) {\n            await updateEmployee({ variables: { id, input } });\n        } else {\n            await createEmployee({ variables: { input } });\n        }\n    };\n\n    // Add qualification\n    const addQualification = () => {\n        if (currentQualification.trim()) {\n            setQualifications([...qualifications, currentQualification.trim()]);\n            setCurrentQualification(\"\");\n        }\n    };\n\n    // Add certification\n    const addCertification = () => {\n        if (currentCertification.trim()) {\n            setCertifications([...certifications, currentCertification.trim()]);\n            setCurrentCertification(\"\");\n        }\n    };\n\n    return (\n        <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <NavbarWithCallToAction />\n            <ModuleBreadcrumb moduleConfig={employeesModuleConfig} />\n\n            <Container maxW=\"container.xl\" px={{ base: 4, md: 8 }} py={{ base: 6, md: 8 }} flex=\"1\">\n                <VStack spacing={{ base: 4, md: 6 }} align=\"stretch\">\n                    <Heading color={textPrimary} fontFamily={brandConfig.fonts.heading} size={{ base: \"md\", md: \"lg\" }}>\n                        {isEditMode ? `Edit Employee${fName && lName ? `: ${fName} ${lName}` : ''}` : 'New Employee'}\n                    </Heading>\n                    \n                    <Card\n                        bg={cardGradientBg}\n                        backdropFilter=\"blur(10px)\"\n                        boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n                        border=\"1px\"\n                        borderColor={cardBorder}\n                        borderRadius=\"lg\"\n                    >\n                        <CardBody>\n                            <form onSubmit={handleSubmit}>\n                                <Tabs isFitted variant=\"enclosed\" colorScheme=\"purple\">\n                                    <TabList mb={6}>\n                                        <Tab color={textPrimary} _selected={{ color: primaryColor, borderColor: primaryColor }}>\n                                            Basic Info\n                                        </Tab>\n                                        <Tab color={textPrimary} _selected={{ color: primaryColor, borderColor: primaryColor }}>\n                                            Employment\n                                        </Tab>\n                                        <Tab color={textPrimary} _selected={{ color: primaryColor, borderColor: primaryColor }}>\n                                            Banking & Tax\n                                        </Tab>\n                                        <Tab color={textPrimary} _selected={{ color: primaryColor, borderColor: primaryColor }}>\n                                            Emergency & Other\n                                        </Tab>\n                                    </TabList>\n\n                                    <TabPanels>\n                                        {/* Basic Information Tab */}\n                                        <TabPanel p={0}>\n                                            <VStack spacing={6} align=\"stretch\">\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={6}>\n                                                    <GridItem colSpan={{ base: 1, md: 2 }}>\n                                                        <FormControl isRequired>\n                                                            <FormLabel color={textPrimary}>Link to Client</FormLabel>\n                                                            <Select\n                                                                placeholder=\"Select a client\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={clientId}\n                                                                onChange={(e) => setClientId(e.target.value)}\n                                                                disabled={clientsLoading}\n                                                            >\n                                                                {clientsData?.clients?.map((client: Client) => (\n                                                                    <option key={client.id} value={client.id}>\n                                                                        {client.fName} {client.lName} ({client.email})\n                                                                    </option>\n                                                                ))}\n                                                            </Select>\n                                                            <FormHelperText color={textMuted}>\n                                                                Select the client account this employee belongs to\n                                                            </FormHelperText>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem colSpan={{ base: 1, md: 2 }}>\n                                                        <FormControl isRequired>\n                                                            <FormLabel color={textPrimary}>Company</FormLabel>\n                                                            <Select\n                                                                placeholder=\"Select a company\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={companyId}\n                                                                onChange={(e) => setCompanyId(e.target.value)}\n                                                                disabled={companiesLoading}\n                                                            >\n                                                                {companiesData?.companies?.map((company: any) => (\n                                                                    <option key={company.id} value={company.id}>\n                                                                        {company.name}\n                                                                    </option>\n                                                                ))}\n                                                            </Select>\n                                                            <FormHelperText color={textMuted}>\n                                                                Select the company this employee works for\n                                                            </FormHelperText>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Employee ID</FormLabel>\n                                                            <Input\n                                                                placeholder=\"AUTO or custom ID\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={employeeNumber}\n                                                                onChange={(e) => setEmployeeNumber(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Date of Birth</FormLabel>\n                                                            <Input\n                                                                type=\"date\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={dateOfBirth}\n                                                                onChange={(e) => setDateOfBirth(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl isRequired>\n                                                            <FormLabel color={textPrimary}>First Name</FormLabel>\n                                                            <Input\n                                                                placeholder=\"Enter first name\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={fName}\n                                                                onChange={(e) => setFName(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl isRequired>\n                                                            <FormLabel color={textPrimary}>Last Name</FormLabel>\n                                                            <Input\n                                                                placeholder=\"Enter last name\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={lName}\n                                                                onChange={(e) => setLName(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Email</FormLabel>\n                                                            <Input\n                                                                type=\"email\"\n                                                                placeholder=\"employee@example.com\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={email}\n                                                                onChange={(e) => setEmail(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Mobile Number</FormLabel>\n                                                            <Input\n                                                                placeholder=\"0400 000 000\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={mobileNumber}\n                                                                onChange={(e) => setMobileNumber(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n\n                                                <Divider borderColor={cardBorder} />\n\n                                                <Text color={textPrimary} fontSize=\"lg\" fontWeight=\"bold\">\n                                                    Address\n                                                </Text>\n\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={4}>\n                                                    <GridItem colSpan={{ base: 1, md: 2 }}>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Street Address</FormLabel>\n                                                            <Input\n                                                                placeholder=\"123 Main Street\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={street}\n                                                                onChange={(e) => setStreet(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>City/Suburb</FormLabel>\n                                                            <Input\n                                                                placeholder=\"Brisbane\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={city}\n                                                                onChange={(e) => setCity(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>State</FormLabel>\n                                                            <Select\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={state}\n                                                                onChange={(e) => setState(e.target.value)}\n                                                                placeholder=\"Select state\"\n                                                            >\n                                                                <option value=\"QLD\">Queensland</option>\n                                                                <option value=\"NSW\">New South Wales</option>\n                                                                <option value=\"VIC\">Victoria</option>\n                                                                <option value=\"WA\">Western Australia</option>\n                                                                <option value=\"SA\">South Australia</option>\n                                                                <option value=\"TAS\">Tasmania</option>\n                                                                <option value=\"ACT\">Australian Capital Territory</option>\n                                                                <option value=\"NT\">Northern Territory</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Postcode</FormLabel>\n                                                            <Input\n                                                                placeholder=\"4000\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={postcode}\n                                                                onChange={(e) => setPostcode(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Country</FormLabel>\n                                                            <Input\n                                                                placeholder=\"Australia\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={country}\n                                                                onChange={(e) => setCountry(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n                                            </VStack>\n                                        </TabPanel>\n\n                                        {/* Employment Tab */}\n                                        <TabPanel p={0}>\n                                            <VStack spacing={6} align=\"stretch\">\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={6}>\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Role</FormLabel>\n                                                            <Select\n                                                                placeholder=\"Select role\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={role}\n                                                                onChange={(e) => setRole(e.target.value)}\n                                                            >\n                                                                <option value=\"CARE_WORKER\">Care Worker</option>\n                                                                <option value=\"SUPPORT_WORKER\">Support Worker</option>\n                                                                <option value=\"NURSE\">Nurse (RN)</option>\n                                                                <option value=\"COORDINATOR\">Coordinator</option>\n                                                                <option value=\"MANAGER\">Manager</option>\n                                                                <option value=\"ADMIN\">Admin/Management</option>\n                                                                <option value=\"OTHER\">Other</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Department</FormLabel>\n                                                            <Select\n                                                                placeholder=\"Select department\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={department}\n                                                                onChange={(e) => setDepartment(e.target.value)}\n                                                            >\n                                                                <option value=\"Director of Care\">Director of Care</option>\n                                                                <option value=\"Nursing\">Nursing</option>\n                                                                <option value=\"Enrolled Nurse\">Enrolled Nurse</option>\n                                                                <option value=\"Care Worker\">Care Worker</option>\n                                                                <option value=\"Therapy\">Therapy</option>\n                                                                <option value=\"Catering\">Catering</option>\n                                                                <option value=\"Cleaning/Laundry\">Cleaning/Laundry</option>\n                                                                <option value=\"Maintenance\">Maintenance</option>\n                                                                <option value=\"Admin/Management\">Admin/Management</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Position Title</FormLabel>\n                                                            <Input\n                                                                placeholder=\"e.g., Senior Care Worker\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={position}\n                                                                onChange={(e) => setPosition(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Employment Status</FormLabel>\n                                                            <Select\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={status}\n                                                                onChange={(e) => setStatus(e.target.value)}\n                                                            >\n                                                                <option value=\"ACTIVE\">Active</option>\n                                                                <option value=\"INACTIVE\">Inactive</option>\n                                                                <option value=\"ON_LEAVE\">On Leave</option>\n                                                                <option value=\"TERMINATED\">Terminated</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Start Date</FormLabel>\n                                                            <Input\n                                                                type=\"date\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={startDate}\n                                                                onChange={(e) => setStartDate(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>End Date</FormLabel>\n                                                            <Input\n                                                                type=\"date\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={endDate}\n                                                                onChange={(e) => setEndDate(e.target.value)}\n                                                            />\n                                                            <FormHelperText color={textMuted}>\n                                                                Leave blank for ongoing employment\n                                                            </FormHelperText>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Contract Type</FormLabel>\n                                                            <Select\n                                                                placeholder=\"Select contract type\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={contractType}\n                                                                onChange={(e) => setContractType(e.target.value)}\n                                                            >\n                                                                <option value=\"Full-time\">Full-time</option>\n                                                                <option value=\"Part-time\">Part-time</option>\n                                                                <option value=\"Casual\">Casual</option>\n                                                                <option value=\"Contract\">Contract</option>\n                                                                <option value=\"Temporary\">Temporary</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Working Rights</FormLabel>\n                                                            <Select\n                                                                placeholder=\"Select working rights\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                value={workingRights}\n                                                                onChange={(e) => setWorkingRights(e.target.value)}\n                                                            >\n                                                                <option value=\"Citizen\">Australian Citizen</option>\n                                                                <option value=\"Permanent Resident\">Permanent Resident</option>\n                                                                <option value=\"Work Visa\">Work Visa</option>\n                                                                <option value=\"Student Visa\">Student Visa</option>\n                                                                <option value=\"Working Holiday\">Working Holiday Visa</option>\n                                                                <option value=\"Other\">Other</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n\n                                                <Divider borderColor={cardBorder} />\n\n                                                <Text color={textPrimary} fontSize=\"lg\" fontWeight=\"bold\">\n                                                    Compensation\n                                                </Text>\n\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={4}>\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Hourly Rate</FormLabel>\n                                                            <InputGroup>\n                                                                <InputLeftAddon bg=\"rgba(255, 255, 255, 0.05)\" borderColor={cardBorder} color={textMuted}>\n                                                                    $\n                                                                </InputLeftAddon>\n                                                                <Input\n                                                                    type=\"number\"\n                                                                    step=\"0.01\"\n                                                                    placeholder=\"0.00\"\n                                                                    bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                    borderColor={cardBorder}\n                                                                    color={textPrimary}\n                                                                    _placeholder={{ color: textMuted }}\n                                                                    value={hourlyRate}\n                                                                    onChange={(e) => setHourlyRate(e.target.value)}\n                                                                />\n                                                            </InputGroup>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Annual Salary</FormLabel>\n                                                            <InputGroup>\n                                                                <InputLeftAddon bg=\"rgba(255, 255, 255, 0.05)\" borderColor={cardBorder} color={textMuted}>\n                                                                    $\n                                                                </InputLeftAddon>\n                                                                <Input\n                                                                    type=\"number\"\n                                                                    step=\"1000\"\n                                                                    placeholder=\"0\"\n                                                                    bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                    borderColor={cardBorder}\n                                                                    color={textPrimary}\n                                                                    _placeholder={{ color: textMuted }}\n                                                                    value={annualSalary}\n                                                                    onChange={(e) => setAnnualSalary(e.target.value)}\n                                                                />\n                                                            </InputGroup>\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n                                            </VStack>\n                                        </TabPanel>\n\n                                        {/* Banking & Tax Tab */}\n                                        <TabPanel p={0}>\n                                            <VStack spacing={6} align=\"stretch\">\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={6}>\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Tax File Number (TFN)</FormLabel>\n                                                            <Input\n                                                                placeholder=\"XXX XXX XXX\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={taxFileNumber}\n                                                                onChange={(e) => setTaxFileNumber(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Superannuation Fund</FormLabel>\n                                                            <Input\n                                                                placeholder=\"Fund name\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={superannuationFund}\n                                                                onChange={(e) => setSuperannuationFund(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n\n                                                <Divider borderColor={cardBorder} />\n\n                                                <Text color={textPrimary} fontSize=\"lg\" fontWeight=\"bold\">\n                                                    Bank Account Details\n                                                </Text>\n\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={4}>\n                                                    <GridItem colSpan={{ base: 1, md: 2 }}>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Account Name</FormLabel>\n                                                            <Input\n                                                                placeholder=\"John Smith\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={bankAccountName}\n                                                                onChange={(e) => setBankAccountName(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>BSB</FormLabel>\n                                                            <Input\n                                                                placeholder=\"XXX-XXX\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={bankBSB}\n                                                                onChange={(e) => setBankBSB(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Account Number</FormLabel>\n                                                            <Input\n                                                                placeholder=\"XXXXXXXXX\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={bankAccountNumber}\n                                                                onChange={(e) => setBankAccountNumber(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n                                            </VStack>\n                                        </TabPanel>\n\n                                        {/* Emergency Contact & Other Tab */}\n                                        <TabPanel p={0}>\n                                            <VStack spacing={6} align=\"stretch\">\n                                                <Text color={textPrimary} fontSize=\"lg\" fontWeight=\"bold\">\n                                                    Emergency Contact\n                                                </Text>\n\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={4}>\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Contact Name</FormLabel>\n                                                            <Input\n                                                                placeholder=\"Emergency contact name\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={emergencyName}\n                                                                onChange={(e) => setEmergencyName(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Relationship</FormLabel>\n                                                            <Input\n                                                                placeholder=\"e.g., Spouse, Parent\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={emergencyRelationship}\n                                                                onChange={(e) => setEmergencyRelationship(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Phone Number</FormLabel>\n                                                            <Input\n                                                                placeholder=\"0400 000 000\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={emergencyPhone}\n                                                                onChange={(e) => setEmergencyPhone(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Email</FormLabel>\n                                                            <Input\n                                                                type=\"email\"\n                                                                placeholder=\"emergency@example.com\"\n                                                                bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                borderColor={cardBorder}\n                                                                color={textPrimary}\n                                                                _placeholder={{ color: textMuted }}\n                                                                value={emergencyEmail}\n                                                                onChange={(e) => setEmergencyEmail(e.target.value)}\n                                                            />\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n\n                                                <Divider borderColor={cardBorder} />\n\n                                                <Text color={textPrimary} fontSize=\"lg\" fontWeight=\"bold\">\n                                                    Qualifications & Certifications\n                                                </Text>\n\n                                                <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }} gap={4}>\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Qualifications</FormLabel>\n                                                            <HStack>\n                                                                <Input\n                                                                    placeholder=\"e.g., Bachelor of Nursing\"\n                                                                    bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                    borderColor={cardBorder}\n                                                                    color={textPrimary}\n                                                                    _placeholder={{ color: textMuted }}\n                                                                    value={currentQualification}\n                                                                    onChange={(e) => setCurrentQualification(e.target.value)}\n                                                                    onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addQualification())}\n                                                                />\n                                                                <Button\n                                                                    onClick={addQualification}\n                                                                    size=\"md\"\n                                                                    bg={primaryColor}\n                                                                    color=\"white\"\n                                                                    _hover={{ bg: primaryHover }}\n                                                                >\n                                                                    Add\n                                                                </Button>\n                                                            </HStack>\n                                                            <Wrap mt={2}>\n                                                                {qualifications.map((qual, index) => (\n                                                                    <Tag key={index} size=\"md\" borderRadius=\"full\" variant=\"solid\" colorScheme=\"purple\">\n                                                                        <TagLabel>{qual}</TagLabel>\n                                                                        <TagCloseButton onClick={() => setQualifications(qualifications.filter((_, i) => i !== index))} />\n                                                                    </Tag>\n                                                                ))}\n                                                            </Wrap>\n                                                        </FormControl>\n                                                    </GridItem>\n\n                                                    <GridItem>\n                                                        <FormControl>\n                                                            <FormLabel color={textPrimary}>Certifications</FormLabel>\n                                                            <HStack>\n                                                                <Input\n                                                                    placeholder=\"e.g., First Aid Certificate\"\n                                                                    bg=\"rgba(255, 255, 255, 0.05)\"\n                                                                    borderColor={cardBorder}\n                                                                    color={textPrimary}\n                                                                    _placeholder={{ color: textMuted }}\n                                                                    value={currentCertification}\n                                                                    onChange={(e) => setCurrentCertification(e.target.value)}\n                                                                    onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addCertification())}\n                                                                />\n                                                                <Button\n                                                                    onClick={addCertification}\n                                                                    size=\"md\"\n                                                                    bg={primaryColor}\n                                                                    color=\"white\"\n                                                                    _hover={{ bg: primaryHover }}\n                                                                >\n                                                                    Add\n                                                                </Button>\n                                                            </HStack>\n                                                            <Wrap mt={2}>\n                                                                {certifications.map((cert, index) => (\n                                                                    <Tag key={index} size=\"md\" borderRadius=\"full\" variant=\"solid\" colorScheme=\"green\">\n                                                                        <TagLabel>{cert}</TagLabel>\n                                                                        <TagCloseButton onClick={() => setCertifications(certifications.filter((_, i) => i !== index))} />\n                                                                    </Tag>\n                                                                ))}\n                                                            </Wrap>\n                                                        </FormControl>\n                                                    </GridItem>\n                                                </Grid>\n\n                                                <FormControl>\n                                                    <FormLabel color={textPrimary}>Notes</FormLabel>\n                                                    <Textarea\n                                                        placeholder=\"Additional notes about the employee...\"\n                                                        bg=\"rgba(255, 255, 255, 0.05)\"\n                                                        borderColor={cardBorder}\n                                                        color={textPrimary}\n                                                        _placeholder={{ color: textMuted }}\n                                                        value={notes}\n                                                        onChange={(e) => setNotes(e.target.value)}\n                                                        rows={4}\n                                                    />\n                                                </FormControl>\n                                            </VStack>\n                                        </TabPanel>\n                                    </TabPanels>\n                                </Tabs>\n\n                                <Divider my={6} borderColor={cardBorder} />\n\n                                {/* Submit Buttons */}\n                                <HStack spacing={4} justify={{ base: \"center\", md: \"flex-end\" }} wrap=\"wrap\">\n                                    <Button\n                                        variant=\"outline\"\n                                        borderColor={cardBorder}\n                                        color={textPrimary}\n                                        onClick={() => navigate(\"/employees\")}\n                                        size={buttonSize}\n                                        width={{ base: \"100%\", md: \"auto\" }}\n                                        minW={{ md: \"100px\" }}\n                                    >\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        bg={primaryColor}\n                                        color=\"white\"\n                                        _hover={{ bg: primaryHover }}\n                                        isLoading={creating || updating || employeeLoading}\n                                        loadingText={isEditMode ? \"Updating...\" : \"Creating...\"}\n                                        leftIcon={<AddIcon />}\n                                        size={buttonSize}\n                                        width={{ base: \"100%\", md: \"auto\" }}\n                                        minW={{ md: \"150px\" }}\n                                    >\n                                        {isEditMode ? 'Update Employee' : 'Create Employee'}\n                                    </Button>\n                                </HStack>\n                            </form>\n                        </CardBody>\n                    </Card>\n                </VStack>\n            </Container>\n\n            <FooterWithFourColumns />\n        </Box>\n    );\n};\n\nexport default NewEmployee;"],"names":["GET_CLIENTS","gql","_templateObject","_taggedTemplateLiteral","GET_COMPANIES","_templateObject2","GET_EMPLOYEE","_templateObject3","CREATE_EMPLOYEE","_templateObject4","UPDATE_EMPLOYEE","_templateObject5","NewEmployee","_clientsData$clients","_companiesData$compan","id","useParams","isEditMode","usePageTitle","navigate","useNavigate","toast","useToast","colorMode","useColorMode","bgMain","getColor","cardGradientBg","cardBorder","textPrimary","textMuted","primaryColor","primaryHover","buttonSize","useBreakpointValue","base","md","clientId","setClientId","useState","companyId","setCompanyId","employeeNumber","setEmployeeNumber","fName","setFName","lName","setLName","email","setEmail","phoneNumber","setPhoneNumber","mobileNumber","setMobileNumber","dateOfBirth","setDateOfBirth","street","setStreet","city","setCity","state","setState","postcode","setPostcode","country","setCountry","role","setRole","department","setDepartment","position","setPosition","status","setStatus","startDate","setStartDate","endDate","setEndDate","contractType","setContractType","workingRights","setWorkingRights","hourlyRate","setHourlyRate","annualSalary","setAnnualSalary","taxFileNumber","setTaxFileNumber","superannuationFund","setSuperannuationFund","bankAccountName","setBankAccountName","bankAccountNumber","setBankAccountNumber","bankBSB","setBankBSB","emergencyName","setEmergencyName","emergencyRelationship","setEmergencyRelationship","emergencyPhone","setEmergencyPhone","emergencyEmail","setEmergencyEmail","qualifications","setQualifications","certifications","setCertifications","notes","setNotes","currentQualification","setCurrentQualification","currentCertification","setCurrentCertification","data","clientsData","loading","clientsLoading","useQuery","companiesData","companiesLoading","employeeData","employeeLoading","variables","skip","createEmployee","creating","useMutation","onCompleted","title","description","concat","duration","isClosable","onError","error","message","updateEmployee","updating","useEffect","employee","_emp$hourlyRate","_emp$annualSalary","emp","address","toString","emergencyContact","name","relationship","addQualification","trim","addCertification","_jsxs","Box","bg","minH","display","flexDirection","children","_jsx","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","employeesModuleConfig","Container","maxW","px","py","flex","VStack","spacing","align","Heading","color","fontFamily","brandConfig","fonts","heading","size","Card","backdropFilter","boxShadow","border","borderColor","borderRadius","CardBody","onSubmit","async","e","preventDefault","input","Date","parseFloat","phone","length","Tabs","isFitted","variant","colorScheme","TabList","mb","Tab","_selected","TabPanels","TabPanel","p","Grid","templateColumns","gap","GridItem","colSpan","FormControl","isRequired","FormLabel","Select","placeholder","value","onChange","target","disabled","clients","map","client","FormHelperText","companies","company","Input","_placeholder","type","Divider","Text","fontSize","fontWeight","InputGroup","InputLeftAddon","step","HStack","onKeyPress","key","Button","onClick","_hover","Wrap","mt","qual","index","Tag","TagLabel","TagCloseButton","filter","_","i","cert","Textarea","rows","my","justify","wrap","width","minW","isLoading","loadingText","leftIcon","AddIcon","FooterWithFourColumns"],"sourceRoot":""}