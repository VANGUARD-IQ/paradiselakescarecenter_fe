{"version":3,"file":"static/js/5260.a02e3d06.chunk.js","mappings":"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","sources":["pages/companyknowledge/PublicArticleViewer.tsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport {\n    Box,\n    Container,\n    Heading,\n    Text,\n    HStack,\n    VStack,\n    Badge,\n    useColorMode,\n    Spinner,\n    Alert,\n    AlertIcon,\n    Divider,\n    Tag,\n    TagLabel,\n    Card,\n    CardBody,\n    Flex,\n} from \"@chakra-ui/react\";\nimport { NavbarWithCallToAction } from \"../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction\";\nimport { FooterWithFourColumns } from \"../../components/chakra/FooterWithFourColumns/FooterWithFourColumns\";\nimport { usePageTitle } from \"../../hooks/useDocumentTitle\";\nimport { getColor, brandConfig } from \"../../brandConfig\";\nimport { format } from \"date-fns\";\nimport DOMPurify from \"dompurify\";\n\nconst GET_PUBLIC_ARTICLE = gql`\n    query GetPublicArticle($slug: String!) {\n        publicCompanyKnowledgeArticle(slug: $slug) {\n            id\n            title\n            content\n            category\n            tags\n            viewCount\n            createdAt\n            updatedAt\n        }\n    }\n`;\n\nconst PublicArticleViewer: React.FC = () => {\n    const { slug } = useParams<{ slug: string }>();\n    const { colorMode } = useColorMode();\n    usePageTitle(\"Knowledge Article\");\n\n    const bgMain = getColor(\"background.main\", colorMode);\n    const cardGradientBg = getColor(\"background.cardGradient\", colorMode);\n    const cardBorder = getColor(\"border.darkCard\", colorMode);\n    const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n    const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n\n    const { data, loading, error } = useQuery(GET_PUBLIC_ARTICLE, {\n        variables: { slug },\n        skip: !slug,\n    });\n\n    if (loading) {\n        return (\n            <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <Container maxW=\"container.xl\" py={8} flex=\"1\">\n                    <Flex justify=\"center\" align=\"center\" minH=\"400px\">\n                        <Spinner size=\"xl\" />\n                    </Flex>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    if (error || !data?.publicCompanyKnowledgeArticle) {\n        return (\n            <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <Container maxW=\"container.xl\" py={8} flex=\"1\">\n                    <Alert status=\"error\">\n                        <AlertIcon />\n                        {error?.message || \"Article not found\"}\n                    </Alert>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    const article = data.publicCompanyKnowledgeArticle;\n    const sanitizedContent = DOMPurify.sanitize(article.content);\n\n    return (\n        <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <NavbarWithCallToAction />\n\n            <Container maxW=\"container.lg\" py={8} flex=\"1\">\n                <VStack align=\"stretch\" spacing={6}>\n                    {/* Public Badge */}\n                    <Badge colorScheme=\"green\" alignSelf=\"start\" fontSize=\"sm\" px={3} py={1}>\n                        üìñ PUBLIC ARTICLE - No Login Required\n                    </Badge>\n\n                    {/* Title */}\n                    <Heading color={textPrimary} fontFamily={brandConfig.fonts.heading} size=\"2xl\">\n                        {article.title}\n                    </Heading>\n\n                    {/* Metadata */}\n                    <Card bg={cardGradientBg} border=\"1px\" borderColor={cardBorder}>\n                        <CardBody>\n                            <HStack justify=\"space-between\" wrap=\"wrap\" spacing={4}>\n                                {article.category && (\n                                    <HStack>\n                                        <Text fontSize=\"sm\" color={textSecondary}>Category:</Text>\n                                        <Badge colorScheme=\"cyan\">{article.category}</Badge>\n                                    </HStack>\n                                )}\n                                <Text fontSize=\"sm\" color={textSecondary}>\n                                    üëÅÔ∏è {article.viewCount || 0} views\n                                </Text>\n                                <Text fontSize=\"sm\" color={textSecondary}>\n                                    Last updated: {format(new Date(article.updatedAt), 'MMM dd, yyyy')}\n                                </Text>\n                            </HStack>\n                        </CardBody>\n                    </Card>\n\n                    {/* Tags */}\n                    {article.tags && article.tags.length > 0 && (\n                        <HStack wrap=\"wrap\" spacing={2}>\n                            <Text fontSize=\"sm\" color={textSecondary}>Tags:</Text>\n                            {article.tags.map((tag: string) => (\n                                <Tag key={tag} colorScheme=\"blue\">\n                                    <TagLabel>{tag}</TagLabel>\n                                </Tag>\n                            ))}\n                        </HStack>\n                    )}\n\n                    <Divider />\n\n                    {/* Article Content */}\n                    <Card bg={cardGradientBg} border=\"1px\" borderColor={cardBorder}>\n                        <CardBody>\n                            <Box\n                                className=\"article-content\"\n                                dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n                                sx={{\n                                    '& h1': { fontSize: '2xl', fontWeight: 'bold', mb: 4, mt: 6, color: textPrimary },\n                                    '& h2': { fontSize: 'xl', fontWeight: 'bold', mb: 3, mt: 5, color: textPrimary },\n                                    '& h3': { fontSize: 'lg', fontWeight: 'bold', mb: 2, mt: 4, color: textPrimary },\n                                    '& p': { mb: 4, lineHeight: '1.8', color: textPrimary },\n                                    '& ul, & ol': { ml: 6, mb: 4, color: textPrimary },\n                                    '& li': { mb: 2, lineHeight: '1.6' },\n                                    '& a': { color: 'blue.500', textDecoration: 'underline', _hover: { color: 'blue.700' } },\n                                    '& code': { bg: 'gray.100', px: 2, py: 1, borderRadius: 'md', fontSize: 'sm', fontFamily: 'mono' },\n                                    '& pre': { bg: 'gray.800', color: 'white', p: 4, borderRadius: 'md', overflowX: 'auto', mb: 4 },\n                                    '& img': { maxW: '100%', borderRadius: 'md', my: 4, boxShadow: 'md' },\n                                    '& blockquote': {\n                                        borderLeft: '4px solid',\n                                        borderColor: 'blue.500',\n                                        pl: 4,\n                                        py: 2,\n                                        fontStyle: 'italic',\n                                        mb: 4,\n                                        bg: colorMode === 'light' ? 'blue.50' : 'rgba(66, 153, 225, 0.1)'\n                                    },\n                                    '& table': { width: '100%', mb: 4, borderCollapse: 'collapse' },\n                                    '& th': { bg: 'gray.100', p: 2, border: '1px solid', borderColor: 'gray.300', fontWeight: 'bold' },\n                                    '& td': { p: 2, border: '1px solid', borderColor: 'gray.300' },\n                                }}\n                            />\n                        </CardBody>\n                    </Card>\n\n                    {/* Footer Info */}\n                    <Card bg={cardGradientBg} border=\"1px\" borderColor={cardBorder}>\n                        <CardBody>\n                            <Text fontSize=\"sm\" color={textSecondary} textAlign=\"center\">\n                                This is a public knowledge article. No login required to view.\n                            </Text>\n                        </CardBody>\n                    </Card>\n                </VStack>\n            </Container>\n\n            <FooterWithFourColumns />\n        </Box>\n    );\n};\n\nexport default PublicArticleViewer;\n"],"names":["GET_PUBLIC_ARTICLE","gql","_templateObject","_taggedTemplateLiteral","PublicArticleViewer","slug","useParams","colorMode","useColorMode","usePageTitle","bgMain","getColor","cardGradientBg","cardBorder","textPrimary","textSecondary","data","loading","error","useQuery","variables","skip","_jsxs","Box","bg","minH","display","flexDirection","children","_jsx","NavbarWithCallToAction","Container","maxW","py","flex","Flex","justify","align","Spinner","size","FooterWithFourColumns","publicCompanyKnowledgeArticle","Alert","status","AlertIcon","message","article","sanitizedContent","DOMPurify","sanitize","content","VStack","spacing","Badge","colorScheme","alignSelf","fontSize","px","Heading","color","fontFamily","brandConfig","fonts","heading","title","Card","border","borderColor","CardBody","HStack","wrap","category","Text","viewCount","format","Date","updatedAt","tags","length","map","tag","Tag","TagLabel","Divider","className","dangerouslySetInnerHTML","__html","sx","fontWeight","mb","mt","lineHeight","ml","textDecoration","_hover","borderRadius","p","overflowX","my","boxShadow","borderLeft","pl","fontStyle","width","borderCollapse","textAlign"],"sourceRoot":""}