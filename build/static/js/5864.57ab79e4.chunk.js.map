{"version":3,"file":"static/js/5864.57ab79e4.chunk.js","mappings":"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","sources":["pages/calendars/components/TagManager.tsx","pages/calendars/CalendarDetails.tsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@chakra-ui/react/dist/esm/radio/use-radio-group.mjs","../node_modules/@chakra-ui/react/dist/esm/radio/radio-group.mjs","../node_modules/@chakra-ui/react/dist/esm/radio/use-radio.mjs","../node_modules/@chakra-ui/react/dist/esm/radio/radio.mjs","../node_modules/@chakra-ui/icons/dist/esm/ChevronUp.mjs"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Text,\n  IconButton,\n  Input,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  Grid,\n  Button,\n  useToast,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  Badge,\n  Tooltip,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { FaEdit, FaTrash, FaPalette, FaCheck, FaTimes } from 'react-icons/fa';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { gql } from '@apollo/client';\n\n// GraphQL queries and mutations\nconst GET_CALENDAR_TAGS = gql`\n  query GetCalendarTags($calendarId: String!) {\n    calendarTags(calendarId: $calendarId) {\n      id\n      name\n      color\n      description\n      usageCount\n    }\n  }\n`;\n\nconst UPSERT_CALENDAR_TAG = gql`\n  mutation UpsertCalendarTag($calendarId: String!, $input: CalendarTagInput!) {\n    upsertCalendarTag(calendarId: $calendarId, input: $input) {\n      id\n      name\n      color\n      description\n      usageCount\n    }\n  }\n`;\n\nconst DELETE_CALENDAR_TAG = gql`\n  mutation DeleteCalendarTag($calendarId: String!, $name: String!) {\n    deleteCalendarTag(calendarId: $calendarId, name: $name)\n  }\n`;\n\nconst SUGGEST_TAG_COLORS = gql`\n  query SuggestTagColors {\n    suggestTagColors\n  }\n`;\n\ninterface TagManagerProps {\n  calendarId: string;\n}\n\nexport const TagManager: React.FC<TagManagerProps> = ({ calendarId }) => {\n  const { colorMode } = useColorMode();\n  const [editingTag, setEditingTag] = useState<string | null>(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedColor, setEditedColor] = useState('');\n  const [deleteTagName, setDeleteTagName] = useState<string | null>(null);\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const toast = useToast();\n\n  // Fetch calendar tags\n  const { data: tagsData, refetch: refetchTags } = useQuery(GET_CALENDAR_TAGS, {\n    variables: { calendarId },\n    context: {\n      headers: {\n        'x-tenant-id': localStorage.getItem('tenantId') || ''\n      }\n    }\n  });\n\n  // Fetch suggested colors\n  const { data: colorsData } = useQuery(SUGGEST_TAG_COLORS, {\n    context: {\n      headers: {\n        'x-tenant-id': localStorage.getItem('tenantId') || ''\n      }\n    }\n  });\n\n  // Mutations\n  const [upsertTag] = useMutation(UPSERT_CALENDAR_TAG, {\n    context: {\n      headers: {\n        'x-tenant-id': localStorage.getItem('tenantId') || ''\n      }\n    },\n    onCompleted: () => {\n      refetchTags();\n      toast({\n        title: 'Tag updated',\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: 'Error updating tag',\n        description: error.message,\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  });\n\n  const [deleteTag] = useMutation(DELETE_CALENDAR_TAG, {\n    context: {\n      headers: {\n        'x-tenant-id': localStorage.getItem('tenantId') || ''\n      }\n    },\n    onCompleted: () => {\n      refetchTags();\n      toast({\n        title: 'Tag deleted',\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: 'Error deleting tag',\n        description: error.message,\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  });\n\n  const calendarTags = tagsData?.calendarTags || [];\n  const suggestedColors = colorsData?.suggestTagColors || [];\n\n  const startEditing = (tag: any) => {\n    setEditingTag(tag.id);\n    setEditedName(tag.name);\n    setEditedColor(tag.color);\n  };\n\n  const cancelEditing = () => {\n    setEditingTag(null);\n    setEditedName('');\n    setEditedColor('');\n  };\n\n  const saveEdit = async (originalName: string) => {\n    if (!editedName.trim()) {\n      toast({\n        title: 'Tag name required',\n        status: 'warning',\n        duration: 2000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    await upsertTag({\n      variables: {\n        calendarId,\n        input: {\n          name: editedName.trim(),\n          color: editedColor,\n          description: null\n        }\n      }\n    });\n\n    // If the name changed, we need to update any existing events\n    if (originalName !== editedName.trim()) {\n      // The backend will handle updating events with the old tag name\n    }\n\n    cancelEditing();\n  };\n\n  const handleDelete = async () => {\n    if (deleteTagName) {\n      await deleteTag({\n        variables: {\n          calendarId,\n          name: deleteTagName\n        }\n      });\n      setDeleteTagName(null);\n    }\n  };\n\n  if (calendarTags.length === 0) {\n    return (\n      <Box p={4} textAlign=\"center\">\n        <Text fontSize=\"sm\" color=\"gray.400\">\n          No tags created yet. Tags will appear here when you add them to events.\n        </Text>\n      </Box>\n    );\n  }\n\n  return (\n    <VStack spacing={3} align=\"stretch\" w=\"full\">\n      <Text fontSize=\"sm\" fontWeight=\"bold\" mb={2} color=\"white\">\n        Manage Tags ({calendarTags.length})\n      </Text>\n      \n      {calendarTags.map((tag: any) => (\n        <Box key={tag.id}>\n          {editingTag === tag.id ? (\n            // Edit mode\n            <HStack spacing={2} p={3} bg=\"rgba(255, 255, 255, 0.1)\" borderRadius=\"md\">\n              <Input\n                size=\"sm\"\n                value={editedName}\n                onChange={(e) => setEditedName(e.target.value)}\n                placeholder=\"Tag name\"\n                maxW=\"150px\"\n                bg=\"rgba(255, 255, 255, 0.9)\"\n                color=\"black\"\n              />\n              \n              <Popover placement=\"bottom\">\n                <PopoverTrigger>\n                  <Button\n                    size=\"sm\"\n                    leftIcon={<FaPalette />}\n                    style={{ backgroundColor: editedColor }}\n                    _hover={{ opacity: 0.8 }}\n                  >\n                    Color\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent width=\"280px\">\n                  <PopoverBody>\n                    <Grid templateColumns=\"repeat(5, 1fr)\" gap={2}>\n                      {suggestedColors.map((color: string) => (\n                        <Box\n                          key={color}\n                          w=\"40px\"\n                          h=\"40px\"\n                          bg={color}\n                          borderRadius=\"md\"\n                          cursor=\"pointer\"\n                          border={editedColor === color ? \"2px solid\" : \"none\"}\n                          borderColor=\"blue.500\"\n                          onClick={() => setEditedColor(color)}\n                          _hover={{ transform: 'scale(1.1)' }}\n                          transition=\"all 0.2s\"\n                        />\n                      ))}\n                    </Grid>\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n\n              <IconButton\n                aria-label=\"Save\"\n                icon={<FaCheck />}\n                size=\"sm\"\n                colorScheme=\"green\"\n                onClick={() => saveEdit(tag.name)}\n              />\n              \n              <IconButton\n                aria-label=\"Cancel\"\n                icon={<FaTimes />}\n                size=\"sm\"\n                colorScheme=\"gray\"\n                onClick={cancelEditing}\n              />\n            </HStack>\n          ) : (\n            // Display mode\n            <HStack spacing={2} p={2} _hover={{ bg: 'rgba(255, 255, 255, 0.1)' }} borderRadius=\"md\" transition=\"all 0.2s\">\n              <Box\n                w=\"24px\"\n                h=\"24px\"\n                bg={tag.color}\n                borderRadius=\"md\"\n                flexShrink={0}\n              />\n              \n              <Text fontSize=\"sm\" fontWeight=\"medium\" flex={1} color=\"white\">\n                {tag.name}\n              </Text>\n              \n              {tag.usageCount > 0 && (\n                <Badge \n                  bg=\"rgba(59, 130, 246, 0.2)\" \n                  color=\"white\" \n                  fontSize=\"xs\"\n                  px={2}\n                  borderRadius=\"full\"\n                >\n                  {tag.usageCount} events\n                </Badge>\n              )}\n              \n              <Tooltip label=\"Edit tag\">\n                <IconButton\n                  aria-label=\"Edit\"\n                  icon={<FaEdit />}\n                  size=\"xs\"\n                  variant=\"solid\"\n                  bg=\"rgba(59, 130, 246, 0.2)\"\n                  color=\"white\"\n                  _hover={{ bg: 'rgba(59, 130, 246, 0.4)' }}\n                  onClick={() => startEditing(tag)}\n                />\n              </Tooltip>\n              \n              <Tooltip label={tag.usageCount > 0 ? \"Tag is in use\" : \"Delete tag\"}>\n                <IconButton\n                  aria-label=\"Delete\"\n                  icon={<FaTrash />}\n                  size=\"xs\"\n                  variant=\"solid\"\n                  bg={tag.usageCount > 0 ? 'rgba(100, 100, 100, 0.2)' : 'rgba(239, 68, 68, 0.2)'}\n                  color={tag.usageCount > 0 ? 'gray.500' : 'red.300'}\n                  _hover={tag.usageCount > 0 ? {} : { bg: 'rgba(239, 68, 68, 0.4)' }}\n                  onClick={() => setDeleteTagName(tag.name)}\n                  isDisabled={tag.usageCount > 0}\n                  cursor={tag.usageCount > 0 ? 'not-allowed' : 'pointer'}\n                />\n              </Tooltip>\n            </HStack>\n          )}\n        </Box>\n      ))}\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog\n        isOpen={deleteTagName !== null}\n        leastDestructiveRef={cancelRef}\n        onClose={() => setDeleteTagName(null)}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Delete Tag\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure you want to delete the tag \"{deleteTagName}\"? This action cannot be undone.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={() => setDeleteTagName(null)}>\n                Cancel\n              </Button>\n              <Button colorScheme=\"red\" onClick={handleDelete} ml={3}>\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </VStack>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport {\n  Box,\n  Container,\n  Heading,\n  Button,\n  Stack,\n  Alert,\n  AlertIcon,\n  HStack,\n  VStack,\n  Text,\n  Spinner,\n  useToast,\n  useDisclosure,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Badge,\n  IconButton,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Portal,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  Card,\n  CardHeader,\n  CardBody,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Input,\n  Checkbox,\n  Tooltip,\n  useColorMode,\n} from '@chakra-ui/react';\nimport {\n  ArrowBackIcon,\n  CalendarIcon,\n  AddIcon,\n  EditIcon,\n  DeleteIcon,\n  ChevronDownIcon,\n  DownloadIcon,\n  LinkIcon,\n  BellIcon,\n} from '@chakra-ui/icons';\nimport { useAuth } from '../../contexts/AuthContext';\nimport EventModal from './EventModal';\nimport { brandConfig } from '../../brandConfig';\nimport { getColor } from '../../brandConfig';\nimport { TagManager } from './components/TagManager';\nimport { NavbarWithCallToAction } from '../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction';\nimport { usePageTitle } from '../../hooks/useDocumentTitle';\nimport { FooterWithFourColumns } from '../../components/chakra/FooterWithFourColumns/FooterWithFourColumns';\nimport { ModuleBreadcrumb } from '../../components/ModuleBreadcrumb';\nimport { calendarsModuleConfig } from './moduleConfig';\n\nconst GET_CALENDAR = gql`\n  query GetCalendar($id: String!) {\n    calendar(id: $id) {\n      id\n      name\n      description\n      type\n      color\n      responsibleOwnerId\n      visibility\n      isPublic\n      publicUrl\n      linkedEmailAddressId\n      settings {\n        timezone\n        emailNotifications\n        smsNotifications\n        defaultReminderMinutes\n        workingHoursStart\n        workingHoursEnd\n        workingDays\n      }\n      totalEvents\n      upcomingEvents\n      lastEventAt\n      isActive\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nconst GET_CALENDAR_EVENTS = gql`\n  query GetCalendarEvents($calendarId: String!, $startDate: String, $endDate: String) {\n    calendarEvents(calendarId: $calendarId, startDate: $startDate, endDate: $endDate) {\n      id\n      calendarId\n      title\n      description\n      startTime\n      endTime\n      isAllDay\n      status\n      color\n      location {\n        name\n        address\n        latitude\n        longitude\n        room\n        floor\n        instructions\n      }\n      recurrence {\n        frequency\n        interval\n        count\n        until\n        byDay\n        byMonth\n        byMonthDay\n        rruleString\n      }\n      attendees {\n        clientId\n        email\n        name\n        status\n      }\n      reminders {\n        method\n        minutesBefore\n      }\n      isCancelled\n      cancellationReason\n      metadata\n    }\n  }\n`;\n\nconst CANCEL_EVENT = gql`\n  mutation CancelEvent($id: String!, $reason: String) {\n    cancelEvent(id: $id, reason: $reason)\n  }\n`;\n\nconst EXPORT_CALENDAR = gql`\n  mutation ExportCalendar($calendarId: String!) {\n    exportCalendar(calendarId: $calendarId) {\n      fileName\n      icalData\n    }\n  }\n`;\n\nconst DELETE_CALENDAR = gql`\n  mutation DeleteCalendar($id: String!) {\n    deleteCalendar(id: $id)\n  }\n`;\n\nconst SHARE_CALENDAR = gql`\n  mutation ShareCalendar($id: String!, $sharedWithEmail: String!, $permissions: [CalendarPermission!]!) {\n    shareCalendar(id: $id, sharedWithEmail: $sharedWithEmail, permissions: $permissions) {\n      id\n      calendarName\n      invitationType\n      recipientEmail\n      recipientPhone\n      shareLink\n      notificationSent\n      status\n      permissions\n      expiresAt\n    }\n  }\n`;\n\nconst CalendarDetails: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // Brand styling variables - comprehensive from checklist\n  const bgMain = getColor('background.main', colorMode);\n  const cardGradientBg = getColor('background.cardGradient', colorMode);\n  const cardBorder = getColor('border.darkCard', colorMode);\n  const textPrimary = getColor(colorMode === 'light' ? 'text.primary' : 'text.primaryDark', colorMode);\n  const textSecondary = getColor(colorMode === 'light' ? 'text.secondary' : 'text.secondaryDark', colorMode);\n  const textMuted = getColor(colorMode === 'light' ? 'text.muted' : 'text.mutedDark', colorMode);\n  const primaryColor = getColor('primary', colorMode);\n  const primaryHover = getColor('primaryHover', colorMode);\n  const successGreen = getColor('successGreen', colorMode);\n  const errorRed = getColor('status.error', colorMode);\n  const infoBlue = getColor('status.info', colorMode);\n  const warningColor = getColor('status.warning', colorMode);\n  const purpleAccent = getColor('purpleAccent', colorMode);\n\n  const [selectedEvent, setSelectedEvent] = useState<any>(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [shareEmail, setShareEmail] = useState('');\n  const [sharePermissions, setSharePermissions] = useState(['VIEW']);\n  const [dateRange] = useState({\n    // Fetch events from 6 months ago to 1 year in the future\n    start: new Date(Date.now() - 180 * 24 * 60 * 60 * 1000).toISOString(), // 6 months ago\n    end: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString() // 1 year from now\n  });\n\n  // Add detailed logging\n  useEffect(() => {\n    console.log('📅 CalendarDetails - Calendar ID from URL:', id);\n    console.log('👤 Current user:', user);\n    console.log('🏢 Tenant ID from localStorage:', localStorage.getItem('tenantId'));\n    console.log('🔑 Auth token exists:', !!localStorage.getItem('authToken'));\n  }, [id, user]);\n\n  const { loading, error, data, refetch } = useQuery(GET_CALENDAR, {\n    variables: { id },\n    skip: !id,\n    onCompleted: (data) => {\n      console.log('✅ Calendar query completed:', data);\n      if (data?.calendar) {\n        console.log('📊 Calendar found:', {\n          name: data.calendar.name,\n          id: data.calendar.id,\n          type: data.calendar.type,\n          responsibleOwnerId: data.calendar.responsibleOwnerId,\n          totalEvents: data.calendar.totalEvents\n        });\n      } else {\n        console.warn('⚠️ Query succeeded but no calendar in response');\n      }\n    },\n    onError: (error) => {\n      console.error('❌ Calendar query error:', error);\n      console.error('Error details:', {\n        message: error.message,\n        networkError: error.networkError,\n        graphQLErrors: error.graphQLErrors\n      });\n    },\n    context: {\n      headers: {\n        'x-tenant-id': localStorage.getItem('tenantId') || ''\n      }\n    }\n  });\n\n  // Update page title\n  usePageTitle(data?.calendar?.name ? `${data.calendar.name} - Settings` : 'Calendar Settings');\n\n  const { data: eventsData, refetch: refetchEvents, loading: eventsLoading, error: eventsError } = useQuery(GET_CALENDAR_EVENTS, {\n    variables: {\n      calendarId: id,\n      startDate: dateRange.start,\n      endDate: dateRange.end\n    },\n    skip: !id,\n    onCompleted: (data) => {\n      console.log('✅ Calendar events query completed:', data);\n      if (data?.calendarEvents) {\n        console.log('📊 Events found:', data.calendarEvents.length);\n        console.log('📅 Events data:', data.calendarEvents);\n      } else {\n        console.warn('⚠️ No calendarEvents in response');\n      }\n    },\n    onError: (error) => {\n      console.error('❌ Calendar events query error:', error);\n    },\n    context: {\n      headers: {\n        'x-tenant-id': localStorage.getItem('tenantId') || ''\n      }\n    }\n  });\n\n  const [deleteCalendar] = useMutation(DELETE_CALENDAR, {\n    onCompleted: () => {\n      toast({\n        title: 'Calendar deleted successfully',\n        status: 'success',\n        duration: 3000\n      });\n      navigate('/calendars');\n    },\n    onError: (error) => {\n      toast({\n        title: 'Failed to delete calendar',\n        description: error.message,\n        status: 'error',\n        duration: 5000\n      });\n    }\n  });\n\n  const [cancelEvent, { loading: cancellingEvent }] = useMutation(CANCEL_EVENT, {\n    onCompleted: () => {\n      toast({\n        title: 'Event deleted successfully',\n        status: 'success',\n        duration: 3000\n      });\n      refetchEvents();\n    },\n    onError: (error) => {\n      toast({\n        title: 'Failed to delete event',\n        description: error.message,\n        status: 'error',\n        duration: 5000\n      });\n    }\n  });\n\n  const [shareCalendar, { loading: sharing }] = useMutation(SHARE_CALENDAR, {\n    onCompleted: (data) => {\n      const invitation = data.shareCalendar;\n      const method = invitation.invitationType === 'SMS' ? 'SMS' : 'EMAIL';\n      const recipient = invitation.recipientPhone || invitation.recipientEmail;\n      \n      toast({\n        title: invitation.notificationSent ? 'Invitation sent! 🎉' : 'Invitation created',\n        description: invitation.notificationSent \n          ? `${method} sent to ${recipient}` \n          : `Invitation created for ${recipient} (notification pending)`,\n        status: 'success',\n        duration: 4000\n      });\n      \n      setShareEmail('');\n      setSharePermissions(['VIEW']);\n      refetch(); // Refresh calendar data to show new shares\n    },\n    onError: (error) => {\n      const isPhone = !shareEmail.includes('@');\n      toast({\n        title: 'Failed to send invitation',\n        description: error.message || `Could not send ${isPhone ? 'SMS' : 'email'}`,\n        status: 'error',\n        duration: 5000\n      });\n    }\n  });\n\n  const [exportCalendar] = useMutation(EXPORT_CALENDAR, {\n    onCompleted: (data) => {\n      const blob = new Blob([data.exportCalendar.icalData], { type: 'text/calendar' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = data.exportCalendar.fileName;\n      link.click();\n      URL.revokeObjectURL(url);\n      \n      toast({\n        title: 'Calendar exported',\n        description: 'Your calendar has been downloaded as an .ics file',\n        status: 'success',\n        duration: 3000\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (id) {\n      refetch();\n      refetchEvents();\n    }\n  }, [id, refetch, refetchEvents]);\n\n  const hasPermission = (permission: string) => {\n    return user?.permissions?.includes(permission) || \n           user?.permissions?.includes('ADMIN') || \n           user?.permissions?.includes('TENANT_ADMIN');\n  };\n\n  const handleEditEvent = (event: any) => {\n    setSelectedEvent(event);\n    onOpen();\n  };\n\n  const handleDeleteCalendar = async () => {\n    const confirmed = window.confirm('Are you sure you want to delete this calendar? This will delete all events and cannot be undone.');\n    if (confirmed) {\n      try {\n        await deleteCalendar({\n          variables: { id }\n        });\n      } catch (error) {\n        console.error('Error deleting calendar:', error);\n      }\n    }\n  };\n\n  const handleDeleteEvent = async (eventId: string) => {\n    const confirmed = window.confirm('Are you sure you want to delete this event? This action cannot be undone.');\n    if (confirmed) {\n      try {\n        await cancelEvent({ \n          variables: { \n            id: eventId,\n            reason: 'Deleted by user'\n          } \n        });\n      } catch (error) {\n        console.error('Error deleting event:', error);\n      }\n    }\n  };\n\n  const handleExport = () => {\n    exportCalendar({ variables: { calendarId: id } });\n  };\n\n  const handleShareCalendar = () => {\n    if (!shareEmail) {\n      toast({\n        title: 'Recipient required',\n        description: 'Please enter an email or phone number',\n        status: 'warning',\n        duration: 3000\n      });\n      return;\n    }\n\n    // Validate if it's email or phone\n    const isEmail = shareEmail.includes('@');\n    const isPhone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(shareEmail.replace(/\\s/g, ''));\n    \n    if (!isEmail && !isPhone) {\n      toast({\n        title: 'Invalid format',\n        description: 'Please enter a valid email address or phone number',\n        status: 'error',\n        duration: 3000\n      });\n      return;\n    }\n\n    // Show sending message\n    const method = isPhone ? 'SMS' : 'email';\n    toast({\n      title: `Sending invitation via ${method}...`,\n      status: 'info',\n      duration: 2000\n    });\n\n    shareCalendar({\n      variables: {\n        id,\n        sharedWithEmail: shareEmail,\n        permissions: sharePermissions\n      }\n    });\n  };\n\n  const getEventStatusColor = (status: string) => {\n    switch (status) {\n      case 'CONFIRMED': return successGreen;\n      case 'TENTATIVE': return warningColor;\n      case 'CANCELLED': return errorRed;\n      default: return textSecondary;\n    }\n  };\n\n  const formatEventTime = (start: string, end: string, isAllDay: boolean) => {\n    if (isAllDay) return 'All Day';\n    \n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const formatter = new Intl.DateTimeFormat('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n    \n    return `${formatter.format(startDate)} - ${formatter.format(endDate)}`;\n  };\n\n  const formatEventDate = (date: string) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n\n  if (loading) {\n    return (\n      <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n        <NavbarWithCallToAction />\n        <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n        <Container maxW=\"container.xl\" py={8} flex=\"1\">\n          <Stack align=\"center\" justify=\"center\" minH=\"200px\">\n            <Spinner size=\"xl\" color={primaryColor} />\n            <Text color={textSecondary}>Loading calendar...</Text>\n          </Stack>\n        </Container>\n        <FooterWithFourColumns />\n      </Box>\n    );\n  }\n\n  if (error || !data?.calendar) {\n    return (\n      <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n        <NavbarWithCallToAction />\n        <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n        <Container maxW=\"container.xl\" py={8} flex=\"1\">\n          <Alert \n            status=\"error\"\n            bg=\"rgba(239, 68, 68, 0.1)\"\n            borderColor=\"rgba(239, 68, 68, 0.3)\"\n            border=\"1px solid\"\n            borderRadius=\"md\"\n          >\n            <AlertIcon color={errorRed} />\n            <Text color={textPrimary}>\n              {error ? `Error loading calendar: ${error.message}` : 'Calendar not found'}\n            </Text>\n          </Alert>\n        </Container>\n        <FooterWithFourColumns />\n      </Box>\n    );\n  }\n\n  const calendar = data.calendar;\n  const events = eventsData?.calendarEvents || [];\n  \n  // Debug logging\n  console.log('📊 Raw eventsData object:', eventsData);\n  console.log('📆 Events array extracted:', events);\n  console.log('📅 Date range being used:', dateRange);\n  console.log('🔍 Events loading state:', eventsLoading);\n  console.log('❌ Events error state:', eventsError);\n  console.log('📋 Calendar totalEvents:', calendar.totalEvents);\n  console.log('🆔 Calendar ID:', id);\n\n  return (\n    <Box bg={bgMain} minH=\"100vh\" display=\"flex\" flexDirection=\"column\">\n      <NavbarWithCallToAction />\n      <ModuleBreadcrumb moduleConfig={calendarsModuleConfig} />\n\n      <Container maxW=\"container.xl\" py={8} flex=\"1\">\n        <VStack spacing={6} align=\"stretch\">\n          \n          {/* Header Section */}\n          <Card\n            bg={cardGradientBg}\n            backdropFilter=\"blur(10px)\"\n            boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n            border=\"1px solid\"\n            borderColor={cardBorder}\n            borderRadius=\"lg\"\n          >\n            <CardHeader>\n              <HStack justify=\"space-between\" align=\"center\" flexWrap=\"wrap\">\n                <VStack align=\"start\" spacing={3}>\n                  <Heading \n                    size=\"lg\"\n                    color={textPrimary}\n                    fontFamily={brandConfig.fonts.heading}\n                  >\n                    <HStack spacing={3}>\n                      <CalendarIcon color={primaryColor} boxSize={6} />\n                      <Text>{calendar.name}</Text>\n                    </HStack>\n                  </Heading>\n                  \n                  <HStack spacing={2}>\n                    <Badge \n                      bg={calendar.type === 'BUSINESS' ? \"rgba(59, 130, 246, 0.2)\" : \"rgba(139, 92, 246, 0.2)\"}\n                      color={calendar.type === 'BUSINESS' ? primaryColor : purpleAccent}\n                      border=\"1px solid\"\n                      borderColor={calendar.type === 'BUSINESS' ? \"rgba(59, 130, 246, 0.3)\" : \"rgba(139, 92, 246, 0.3)\"}\n                      px={3}\n                      py={1}\n                      borderRadius=\"md\"\n                    >\n                      {calendar.type}\n                    </Badge>\n                    <Badge\n                      bg={calendar.isPublic ? \"rgba(34, 197, 94, 0.2)\" : \"rgba(107, 114, 128, 0.2)\"}\n                      color={calendar.isPublic ? successGreen : textSecondary}\n                      border=\"1px solid\"\n                      borderColor={calendar.isPublic ? \"rgba(34, 197, 94, 0.3)\" : \"rgba(107, 114, 128, 0.3)\"}\n                      px={3}\n                      py={1}\n                      borderRadius=\"md\"\n                    >\n                      {calendar.isPublic ? 'Public' : 'Private'}\n                    </Badge>\n                  </HStack>\n                  \n                  {calendar.description && (\n                    <Text color={textSecondary} fontFamily={brandConfig.fonts.body}>\n                      {calendar.description}\n                    </Text>\n                  )}\n                </VStack>\n                \n                <HStack spacing={3}>\n                  <Button\n                    leftIcon={<ArrowBackIcon />}\n                    variant=\"outline\"\n                    onClick={() => navigate('/calendars')}\n                    borderColor={primaryColor}\n                    color={primaryColor}\n                    _hover={{ \n                      bg: \"rgba(59, 130, 246, 0.1)\",\n                      transform: \"translateY(-2px)\"\n                    }}\n                    _active={{ transform: \"translateY(0)\" }}\n                    transition=\"all 0.2s\"\n                  >\n                    Back\n                  </Button>\n                  \n                  <Button\n                    leftIcon={<CalendarIcon />}\n                    bg={primaryColor}\n                    color=\"white\"\n                    _hover={{ \n                      bg: primaryHover,\n                      transform: \"translateY(-2px)\"\n                    }}\n                    _active={{ transform: \"translateY(0)\" }}\n                    transition=\"all 0.2s\"\n                    fontWeight=\"semibold\"\n                    onClick={() => {\n                      // Open in week view with 24 hours by default\n                      const today = new Date().toISOString().split('T')[0];\n                      window.open(`/calendars/${id}/view?view=timeGridWeek&date=${today}&hours=24`, '_blank');\n                    }}\n                  >\n                    View Calendar\n                  </Button>\n                  \n                  <Menu isLazy placement=\"bottom-end\">\n                    <MenuButton\n                      as={Button}\n                      rightIcon={<ChevronDownIcon />}\n                      variant=\"outline\"\n                      borderColor={primaryColor}\n                      color={primaryColor}\n                      _hover={{ \n                        bg: \"rgba(59, 130, 246, 0.1)\",\n                        transform: \"translateY(-2px)\"\n                      }}\n                      _active={{ transform: \"translateY(0)\" }}\n                      transition=\"all 0.2s\"\n                      fontWeight=\"semibold\"\n                    >\n                      Actions\n                    </MenuButton>\n                    <Portal>\n                      <MenuList \n                        bg=\"rgba(26, 32, 44, 0.98)\"\n                        borderColor=\"rgba(255, 255, 255, 0.2)\"\n                        backdropFilter=\"blur(10px)\"\n                        boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.5)\"\n                        zIndex={9999}\n                      >\n                        <MenuItem \n                        icon={<EditIcon color=\"white\" />} \n                        onClick={() => navigate(`/calendars/${id}/edit`)}\n                        color=\"white\"\n                        bg=\"transparent\"\n                        _hover={{ bg: \"rgba(59, 130, 246, 0.3)\" }}\n                      >\n                        Edit Calendar\n                      </MenuItem>\n                      <MenuItem \n                        icon={<DownloadIcon color=\"white\" />} \n                        onClick={handleExport}\n                        color=\"white\"\n                        bg=\"transparent\"\n                        _hover={{ bg: \"rgba(59, 130, 246, 0.3)\" }}\n                      >\n                        Export Calendar\n                      </MenuItem>\n                      <MenuItem \n                        icon={<LinkIcon color=\"white\" />}\n                        onClick={() => setActiveTab(2)}\n                        color=\"white\"\n                        bg=\"transparent\"\n                        _hover={{ bg: \"rgba(59, 130, 246, 0.3)\" }}\n                      >\n                        Share Calendar\n                      </MenuItem>\n                      <MenuItem \n                        icon={<DeleteIcon />}\n                        color=\"red.400\"\n                        bg=\"transparent\"\n                        _hover={{ bg: \"rgba(239, 68, 68, 0.2)\" }}\n                        onClick={handleDeleteCalendar}\n                      >\n                        Delete Calendar\n                      </MenuItem>\n                      </MenuList>\n                    </Portal>\n                  </Menu>\n                </HStack>\n              </HStack>\n            </CardHeader>\n          </Card>\n\n          {/* Stats Grid */}\n          <SimpleGrid columns={{ base: 2, md: 4 }} spacing={4}>\n            {[\n              { label: 'Total Events', value: calendar.totalEvents || 0 },\n              { label: 'Upcoming', value: calendar.upcomingEvents || 0 },\n              { label: 'Timezone', value: calendar.settings?.timezone || 'UTC' },\n              { label: 'Working Hours', value: `${calendar.settings?.workingHoursStart || '09:00'} - ${calendar.settings?.workingHoursEnd || '17:00'}` }\n            ].map((stat) => (\n              <Card\n                key={stat.label}\n                bg={cardGradientBg}\n                backdropFilter=\"blur(10px)\"\n                boxShadow=\"0 4px 16px 0 rgba(0, 0, 0, 0.2)\"\n                border=\"1px solid\"\n                borderColor={cardBorder}\n                borderRadius=\"lg\"\n                p={4}\n                position=\"relative\"\n                zIndex={1}\n                _hover={{\n                  transform: \"translateY(-2px)\",\n                  boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.3)\",\n                  transition: \"all 0.2s\"\n                }}\n              >\n                <Stat>\n                  <StatLabel color={textSecondary} fontSize=\"sm\">{stat.label}</StatLabel>\n                  <StatNumber color={textPrimary} fontSize=\"xl\">{stat.value}</StatNumber>\n                </Stat>\n              </Card>\n            ))}\n          </SimpleGrid>\n\n          {/* Main Content Tabs */}\n          <Card\n            bg={cardGradientBg}\n            backdropFilter=\"blur(10px)\"\n            boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n            border=\"1px solid\"\n            borderColor={cardBorder}\n            borderRadius=\"lg\"\n          >\n            <CardBody>\n              <Tabs variant=\"soft-rounded\" colorScheme=\"brand\" index={activeTab} onChange={setActiveTab}>\n                <TabList mb={4}>\n                  <Tab\n                    _selected={{ \n                      bg: primaryColor, \n                      color: 'white' \n                    }}\n                    _hover={{\n                      bg: \"rgba(255, 255, 255, 0.1)\"\n                    }}\n                    color={textSecondary}\n                  >\n                    Events\n                  </Tab>\n                  <Tab\n                    _selected={{ \n                      bg: primaryColor, \n                      color: 'white' \n                    }}\n                    _hover={{\n                      bg: \"rgba(255, 255, 255, 0.1)\"\n                    }}\n                    color={textSecondary}\n                  >\n                    Settings\n                  </Tab>\n                  <Tab\n                    _selected={{\n                      bg: primaryColor,\n                      color: 'white'\n                    }}\n                    _hover={{\n                      bg: \"rgba(255, 255, 255, 0.1)\"\n                    }}\n                    color={textSecondary}\n                  >\n                    Sharing\n                  </Tab>\n                  {/* Email Integration Tab - DISABLED: emailAddress and acceptedEmailAddresses fields not in schema */}\n                  {/* <Tab\n                    _selected={{\n                      bg: primaryColor,\n                      color: 'white'\n                    }}\n                    _hover={{\n                      bg: \"rgba(255, 255, 255, 0.1)\"\n                    }}\n                    color={textSecondary}\n                  >\n                    Email Integration\n                  </Tab> */}\n                </TabList>\n\n                <TabPanels>\n                  {/* Events Tab */}\n                  <TabPanel px={0}>\n                    <VStack spacing={4} align=\"stretch\">\n                      <HStack justify=\"space-between\">\n                        <Text fontSize=\"lg\" fontWeight=\"bold\" color={textPrimary}>\n                          Calendar Events\n                        </Text>\n                        {hasPermission('CALENDAR_MANAGER') && (\n                          <Button\n                            leftIcon={<AddIcon />}\n                            size=\"md\"\n                            onClick={() => {\n                              setSelectedEvent(null);\n                              onOpen();\n                            }}\n                            bg={primaryColor}\n                            color=\"white\"\n                            _hover={{ \n                              bg: primaryHover,\n                              transform: \"translateY(-2px)\"\n                            }}\n                            _active={{ transform: \"translateY(0)\" }}\n                            transition=\"all 0.2s\"\n                            fontWeight=\"semibold\"\n                          >\n                            Add Event\n                          </Button>\n                        )}\n                      </HStack>\n\n                      {events.length > 0 ? (\n                        <Box \n                          overflowX=\"auto\"\n                          bg=\"rgba(255, 255, 255, 0.02)\"\n                          borderRadius=\"md\"\n                          border=\"1px solid\"\n                          borderColor={cardBorder}\n                        >\n                          <Table variant=\"simple\" size=\"md\">\n                            <Thead>\n                              <Tr>\n                                <Th color={textMuted} borderColor={cardBorder}>Title</Th>\n                                <Th color={textMuted} borderColor={cardBorder}>Date</Th>\n                                <Th color={textMuted} borderColor={cardBorder}>Time</Th>\n                                <Th color={textMuted} borderColor={cardBorder}>Status</Th>\n                                <Th color={textMuted} borderColor={cardBorder}>Actions</Th>\n                              </Tr>\n                            </Thead>\n                            <Tbody>\n                              {events.map((event: any) => (\n                                <Tr key={event.id} opacity={event.isCancelled ? 0.5 : 1}>\n                                  <Td color={textPrimary} borderColor={cardBorder}>\n                                    <Text \n                                      textDecoration={event.isCancelled ? \"line-through\" : \"none\"}\n                                      cursor=\"pointer\"\n                                      _hover={{ color: primaryColor, textDecoration: \"underline\" }}\n                                      onClick={() => {\n                                        console.log('📅 Event clicked:', {\n                                          id: event.id,\n                                          title: event.title,\n                                          calendarId: event.calendarId,\n                                          startTime: event.startTime,\n                                          endTime: event.endTime,\n                                          fullEvent: event\n                                        });\n                                        // Also copy ID to clipboard for convenience\n                                        navigator.clipboard.writeText(event.id).then(() => {\n                                          toast({\n                                            title: 'Event ID copied!',\n                                            description: `ID: ${event.id}`,\n                                            status: 'info',\n                                            duration: 2000,\n                                            position: 'bottom-right'\n                                          });\n                                        });\n                                      }}\n                                    >\n                                      {event.title}\n                                    </Text>\n                                  </Td>\n                                  <Td color={textSecondary} borderColor={cardBorder}>\n                                    {formatEventDate(event.startTime)}\n                                  </Td>\n                                  <Td color={textSecondary} borderColor={cardBorder}>\n                                    {formatEventTime(event.startTime, event.endTime, event.isAllDay)}\n                                  </Td>\n                                  <Td borderColor={cardBorder}>\n                                    <Badge\n                                      bg={`${getEventStatusColor(event.status)}20`}\n                                      color={getEventStatusColor(event.status)}\n                                      border=\"1px solid\"\n                                      borderColor={`${getEventStatusColor(event.status)}30`}\n                                    >\n                                      {event.status}\n                                    </Badge>\n                                  </Td>\n                                  <Td borderColor={cardBorder}>\n                                    <HStack spacing={2}>\n                                      <Tooltip label=\"View in calendar\" placement=\"top\">\n                                        <IconButton\n                                          aria-label=\"View in calendar\"\n                                          icon={<CalendarIcon />}\n                                          size=\"sm\"\n                                          bg=\"rgba(255, 255, 255, 0.1)\"\n                                          color={primaryColor}\n                                          _hover={{ bg: \"rgba(59, 130, 246, 0.2)\" }}\n                                          onClick={() => {\n                      // Open in week view with 24 hours by default\n                      const today = new Date().toISOString().split('T')[0];\n                      window.open(`/calendars/${id}/view?view=timeGridWeek&date=${today}&hours=24`, '_blank');\n                    }}\n                                        />\n                                      </Tooltip>\n                                      <IconButton\n                                        aria-label=\"Edit event\"\n                                        icon={<EditIcon />}\n                                        size=\"sm\"\n                                        bg=\"rgba(255, 255, 255, 0.1)\"\n                                        color={primaryColor}\n                                        _hover={{ bg: \"rgba(59, 130, 246, 0.2)\" }}\n                                        onClick={() => handleEditEvent(event)}\n                                      />\n                                      <IconButton\n                                        aria-label=\"Delete event\"\n                                        icon={<DeleteIcon />}\n                                        size=\"sm\"\n                                        bg=\"rgba(255, 255, 255, 0.1)\"\n                                        color={errorRed}\n                                        _hover={{ bg: \"rgba(239, 68, 68, 0.2)\" }}\n                                        onClick={() => handleDeleteEvent(event.id)}\n                                        isLoading={cancellingEvent}\n                                        isDisabled={event.isCancelled}\n                                      />\n                                    </HStack>\n                                  </Td>\n                                </Tr>\n                              ))}\n                            </Tbody>\n                          </Table>\n                        </Box>\n                      ) : (\n                        <Alert \n                          status=\"info\"\n                          bg=\"rgba(59, 130, 246, 0.1)\"\n                          borderColor=\"rgba(59, 130, 246, 0.3)\"\n                          border=\"1px solid\"\n                          borderRadius=\"md\"\n                        >\n                          <AlertIcon color={infoBlue} />\n                          <VStack align=\"start\" spacing={2}>\n                            <Text color={textPrimary}>No events scheduled</Text>\n                            <Text color={textSecondary} fontSize=\"sm\">\n                              Create your first event to get started\n                            </Text>\n                          </VStack>\n                        </Alert>\n                      )}\n                    </VStack>\n                  </TabPanel>\n\n                  {/* Settings Tab */}\n                  <TabPanel>\n                    <VStack spacing={4} align=\"stretch\">\n                      <Text fontSize=\"lg\" fontWeight=\"bold\" color={textPrimary}>\n                        Calendar Settings\n                      </Text>\n                      \n                      <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4}>\n                        <Box>\n                          <Text fontWeight=\"medium\" mb={2} color={textSecondary}>\n                            Default Reminders\n                          </Text>\n                          {calendar.settings?.defaultReminderMinutes ? (\n                            <HStack>\n                              <BellIcon color={primaryColor} />\n                              <Text color={textPrimary}>\n                                {calendar.settings.defaultReminderMinutes} minutes before\n                              </Text>\n                            </HStack>\n                          ) : (\n                            <Text color={textMuted}>No default reminders set</Text>\n                          )}\n                        </Box>\n                        \n                        <Box>\n                          <Text fontWeight=\"medium\" mb={2} color={textSecondary}>\n                            Email Notifications\n                          </Text>\n                          <Badge\n                            bg={calendar.settings?.emailNotifications ? \"rgba(34, 197, 94, 0.2)\" : \"rgba(107, 114, 128, 0.2)\"}\n                            color={calendar.settings?.emailNotifications ? successGreen : textMuted}\n                            border=\"1px solid\"\n                            borderColor={calendar.settings?.emailNotifications ? \"rgba(34, 197, 94, 0.3)\" : \"rgba(107, 114, 128, 0.3)\"}\n                          >\n                            {calendar.settings?.emailNotifications ? 'Enabled' : 'Disabled'}\n                          </Badge>\n                        </Box>\n                        \n                        <Box>\n                          <Text fontWeight=\"medium\" mb={2} color={textSecondary}>\n                            SMS Notifications\n                          </Text>\n                          <Badge\n                            bg={calendar.settings?.smsNotifications ? \"rgba(34, 197, 94, 0.2)\" : \"rgba(107, 114, 128, 0.2)\"}\n                            color={calendar.settings?.smsNotifications ? successGreen : textMuted}\n                            border=\"1px solid\"\n                            borderColor={calendar.settings?.smsNotifications ? \"rgba(34, 197, 94, 0.3)\" : \"rgba(107, 114, 128, 0.3)\"}\n                          >\n                            {calendar.settings?.smsNotifications ? 'Enabled' : 'Disabled'}\n                          </Badge>\n                        </Box>\n                      </SimpleGrid>\n\n                      {/* Tag Management Section */}\n                      <Box\n                        mt={6}\n                        p={4}\n                        bg=\"rgba(255, 255, 255, 0.03)\"\n                        borderRadius=\"lg\"\n                        border=\"1px solid\"\n                        borderColor={cardBorder}\n                      >\n                        <TagManager calendarId={id || ''} />\n                      </Box>\n                    </VStack>\n                  </TabPanel>\n\n                  {/* Sharing Tab */}\n                  <TabPanel>\n                    <VStack spacing={6} align=\"stretch\">\n                      {/* Share New User Section */}\n                      <Box\n                        p={6}\n                        bg=\"rgba(255, 255, 255, 0.03)\"\n                        borderRadius=\"lg\"\n                        border=\"1px solid\"\n                        borderColor={cardBorder}\n                      >\n                        <Heading size=\"md\" color={textPrimary} mb={4}>\n                          Share Calendar\n                        </Heading>\n                        \n                        <VStack spacing={4}>\n                          <FormControl>\n                            <FormLabel color={textSecondary}>Email Address</FormLabel>\n                            <Input\n                              placeholder=\"Enter email to share with\"\n                              value={shareEmail}\n                              onChange={(e) => setShareEmail(e.target.value)}\n                              bg=\"rgba(255, 255, 255, 0.05)\"\n                              borderColor={cardBorder}\n                              color={textPrimary}\n                              _hover={{ borderColor: primaryColor }}\n                              _focus={{\n                                borderColor: primaryColor,\n                                boxShadow: `0 0 0 1px ${primaryColor}`\n                              }}\n                            />\n                            <FormHelperText color={textMuted}>\n                              Enter the email address of the person you want to share this calendar with\n                            </FormHelperText>\n                          </FormControl>\n\n                          <FormControl>\n                            <FormLabel color={textSecondary}>Permissions</FormLabel>\n                            <Stack spacing={3}>\n                              <Checkbox\n                                isChecked={sharePermissions.includes('VIEW')}\n                                onChange={(e) => {\n                                  if (e.target.checked) {\n                                    setSharePermissions([...sharePermissions, 'VIEW']);\n                                  } else {\n                                    setSharePermissions(sharePermissions.filter(p => p !== 'VIEW'));\n                                  }\n                                }}\n                                colorScheme=\"blue\"\n                              >\n                                <Text color={textPrimary}>View Events</Text>\n                              </Checkbox>\n                              <Checkbox\n                                isChecked={sharePermissions.includes('CREATE')}\n                                onChange={(e) => {\n                                  if (e.target.checked) {\n                                    setSharePermissions([...sharePermissions, 'CREATE']);\n                                  } else {\n                                    setSharePermissions(sharePermissions.filter(p => p !== 'CREATE'));\n                                  }\n                                }}\n                                colorScheme=\"blue\"\n                              >\n                                <Text color={textPrimary}>Create Events</Text>\n                              </Checkbox>\n                              <Checkbox\n                                isChecked={sharePermissions.includes('EDIT')}\n                                onChange={(e) => {\n                                  if (e.target.checked) {\n                                    setSharePermissions([...sharePermissions, 'EDIT']);\n                                  } else {\n                                    setSharePermissions(sharePermissions.filter(p => p !== 'EDIT'));\n                                  }\n                                }}\n                                colorScheme=\"blue\"\n                              >\n                                <Text color={textPrimary}>Edit Events</Text>\n                              </Checkbox>\n                              <Checkbox\n                                isChecked={sharePermissions.includes('DELETE')}\n                                onChange={(e) => {\n                                  if (e.target.checked) {\n                                    setSharePermissions([...sharePermissions, 'DELETE']);\n                                  } else {\n                                    setSharePermissions(sharePermissions.filter(p => p !== 'DELETE'));\n                                  }\n                                }}\n                                colorScheme=\"blue\"\n                              >\n                                <Text color={textPrimary}>Delete Events</Text>\n                              </Checkbox>\n                            </Stack>\n                          </FormControl>\n\n                          <Button\n                            leftIcon={<LinkIcon />}\n                            bg={primaryColor}\n                            color=\"white\"\n                            _hover={{ bg: primaryHover }}\n                            onClick={handleShareCalendar}\n                            isLoading={sharing}\n                            loadingText=\"Sharing...\"\n                            width=\"full\"\n                          >\n                            Share Calendar\n                          </Button>\n                        </VStack>\n                      </Box>\n\n                      {/* Current Shares Section - DISABLED: shares field not in schema */}\n\n                      {/* Public Access Section */}\n                      <Box>\n                        <Heading size=\"md\" color={textPrimary} mb={4}>\n                          Public Access\n                        </Heading>\n                        <HStack spacing={4}>\n                          <Badge\n                            bg={calendar.isPublic ? \"rgba(34, 197, 94, 0.2)\" : \"rgba(107, 114, 128, 0.2)\"}\n                            color={calendar.isPublic ? successGreen : textMuted}\n                            border=\"1px solid\"\n                            borderColor={calendar.isPublic ? \"rgba(34, 197, 94, 0.3)\" : \"rgba(107, 114, 128, 0.3)\"}\n                            px={3}\n                            py={1}\n                          >\n                            {calendar.isPublic ? 'Public Calendar' : 'Private Calendar'}\n                          </Badge>\n                          {calendar.publicUrl && (\n                            <Text color={textSecondary} fontSize=\"sm\">\n                              Public URL: {calendar.publicUrl}\n                            </Text>\n                          )}\n                        </HStack>\n                      </Box>\n                    </VStack>\n                  </TabPanel>\n\n                </TabPanels>\n              </Tabs>\n            </CardBody>\n          </Card>\n\n        </VStack>\n      </Container>\n      \n      {/* Event Modal */}\n      <EventModal\n        isOpen={isOpen}\n        onClose={() => {\n          onClose();\n          setSelectedEvent(null);\n        }}\n        calendarId={id!}\n        event={selectedEvent}\n        onSuccess={() => {\n          refetchEvents();\n          onClose();\n          setSelectedEvent(null);\n        }}\n      />\n      \n      <FooterWithFourColumns />\n    </Box>\n  );\n};\n\nexport default CalendarDetails;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","'use client';\nimport { mergeRefs } from '@chakra-ui/hooks';\nimport { isObject } from '@chakra-ui/utils';\nimport { useState, useRef, useCallback, useId } from 'react';\n\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput?.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp?.(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport { useRadioGroup };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, cx } from '@chakra-ui/utils';\nimport { useMemo } from 'react';\nimport { useRadioGroup } from './use-radio-group.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nconst RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport { RadioGroup, useRadioGroupContext };\n","'use client';\nimport { dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { trackFocusVisible } from '@zag-js/focus-visible';\nimport { useId, useState, useRef, useEffect, useCallback } from 'react';\nimport { useRadioGroupContext } from './radio-group.mjs';\nimport { useFormControlContext } from '../form-control/form-control.mjs';\nimport { visuallyHiddenStyle } from '../visually-hidden/visually-hidden.style.mjs';\n\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp ?? id;\n  const isDisabled = isDisabledProp ?? formControl?.isDisabled;\n  const isReadOnly = isReadOnlyProp ?? formControl?.isReadOnly;\n  const isRequired = isRequiredProp ?? formControl?.isRequired;\n  const isInvalid = isInvalidProp ?? formControl?.isInvalid;\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  const isFocusVisibleRef = useRef(false);\n  useEffect(() => {\n    return trackFocusVisible((state2) => {\n      isFocusVisibleRef.current = state2;\n    });\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.currentTarget.checked);\n      }\n      onChange?.(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisibleRef.current),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly\n    ]\n  );\n  const { onFocus, onBlur } = formControl ?? {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    htmlFor: id,\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport { useRadio };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { omitThemingProps, layoutPropNames } from '@chakra-ui/styled-system';\nimport { callAll, split } from '@chakra-ui/utils';\nimport { useRadioGroupContext } from './radio-group.mjs';\nimport { useRadio } from './use-radio.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Radio = forwardRef((props, ref) => {\n  const group = useRadioGroupContext();\n  const { onChange: onChangeProp, value: valueProp } = props;\n  const styles = useMultiStyleConfig(\"Radio\", { ...group, ...props });\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    children,\n    isDisabled = group?.isDisabled,\n    isFocusable = group?.isFocusable,\n    inputProps: htmlInputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = props.isChecked;\n  if (group?.value != null && valueProp != null) {\n    isChecked = group.value === valueProp;\n  }\n  let onChange = onChangeProp;\n  if (group?.onChange && valueProp != null) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const name = props?.name ?? group?.name;\n  const {\n    getInputProps,\n    getRadioProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  } = useRadio({\n    ...rest,\n    isChecked,\n    isFocusable,\n    isDisabled,\n    onChange,\n    name\n  });\n  const [layoutProps, otherProps] = split(htmlProps, layoutPropNames);\n  const checkboxProps = getRadioProps(otherProps);\n  const inputProps = getInputProps(htmlInputProps, ref);\n  const labelProps = getLabelProps();\n  const rootProps = Object.assign({}, layoutProps, getRootProps());\n  const rootStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    ...styles.container\n  };\n  const checkboxStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexShrink: 0,\n    ...styles.control\n  };\n  const labelStyles = {\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label\n  };\n  return /* @__PURE__ */ jsxs(chakra.label, { className: \"chakra-radio\", ...rootProps, __css: rootStyles, children: [\n    /* @__PURE__ */ jsx(\"input\", { className: \"chakra-radio__input\", ...inputProps }),\n    /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        className: \"chakra-radio__control\",\n        ...checkboxProps,\n        __css: checkboxStyles\n      }\n    ),\n    children && /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        className: \"chakra-radio__label\",\n        ...labelProps,\n        __css: labelStyles,\n        children\n      }\n    )\n  ] });\n});\nRadio.displayName = \"Radio\";\n\nexport { Radio };\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronUpIcon = createIcon({\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\",\n  displayName: \"ChevronUpIcon\"\n});\n\nexport { ChevronUpIcon };\n"],"names":["GET_CALENDAR_TAGS","gql","_templateObject","_taggedTemplateLiteral","UPSERT_CALENDAR_TAG","_templateObject2","DELETE_CALENDAR_TAG","_templateObject3","SUGGEST_TAG_COLORS","_templateObject4","TagManager","_ref","calendarId","colorMode","useColorMode","editingTag","setEditingTag","useState","editedName","setEditedName","editedColor","setEditedColor","deleteTagName","setDeleteTagName","cancelRef","React","toast","useToast","data","tagsData","refetch","refetchTags","useQuery","variables","context","headers","localStorage","getItem","colorsData","upsertTag","useMutation","onCompleted","title","status","duration","isClosable","onError","error","description","message","deleteTag","calendarTags","suggestedColors","suggestTagColors","cancelEditing","length","_jsx","Box","p","textAlign","children","Text","fontSize","color","_jsxs","VStack","spacing","align","w","fontWeight","mb","map","tag","id","HStack","bg","borderRadius","Input","size","value","onChange","e","target","placeholder","maxW","Popover","placement","PopoverTrigger","Button","leftIcon","FaPalette","style","backgroundColor","_hover","opacity","PopoverContent","width","PopoverBody","Grid","templateColumns","gap","h","cursor","border","borderColor","onClick","transform","transition","IconButton","icon","FaCheck","colorScheme","async","trim","input","name","saveEdit","FaTimes","flexShrink","flex","usageCount","Badge","px","Tooltip","label","FaEdit","variant","startEditing","FaTrash","isDisabled","AlertDialog","isOpen","leastDestructiveRef","onClose","AlertDialogOverlay","AlertDialogContent","AlertDialogHeader","AlertDialogBody","AlertDialogFooter","ref","ml","GET_CALENDAR","GET_CALENDAR_EVENTS","CANCEL_EVENT","EXPORT_CALENDAR","DELETE_CALENDAR","_templateObject5","SHARE_CALENDAR","_templateObject6","CalendarDetails","_data$calendar","_calendar$settings","_calendar$settings2","_calendar$settings3","_calendar$settings4","_calendar$settings5","_calendar$settings6","_calendar$settings7","_calendar$settings8","_calendar$settings9","_calendar$settings0","_calendar$settings1","_calendar$settings10","useParams","navigate","useNavigate","user","useAuth","onOpen","useDisclosure","bgMain","getColor","cardGradientBg","cardBorder","textPrimary","textSecondary","textMuted","primaryColor","primaryHover","successGreen","errorRed","infoBlue","warningColor","purpleAccent","selectedEvent","setSelectedEvent","activeTab","setActiveTab","shareEmail","setShareEmail","sharePermissions","setSharePermissions","dateRange","start","Date","now","toISOString","end","useEffect","console","log","loading","skip","calendar","type","responsibleOwnerId","totalEvents","warn","networkError","graphQLErrors","usePageTitle","concat","eventsData","refetchEvents","eventsLoading","eventsError","startDate","endDate","calendarEvents","deleteCalendar","cancelEvent","cancellingEvent","shareCalendar","sharing","invitation","method","invitationType","recipient","recipientPhone","recipientEmail","notificationSent","isPhone","includes","exportCalendar","blob","Blob","icalData","url","URL","createObjectURL","link","document","createElement","href","download","fileName","click","revokeObjectURL","getEventStatusColor","formatEventTime","isAllDay","formatter","Intl","DateTimeFormat","hour","minute","hour12","format","minH","display","flexDirection","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","calendarsModuleConfig","Container","py","Stack","justify","Spinner","FooterWithFourColumns","Alert","AlertIcon","events","Card","backdropFilter","boxShadow","CardHeader","flexWrap","Heading","fontFamily","brandConfig","fonts","heading","CalendarIcon","boxSize","isPublic","body","ArrowBackIcon","_active","today","split","window","open","Menu","isLazy","MenuButton","as","rightIcon","ChevronDownIcon","Portal","MenuList","zIndex","MenuItem","EditIcon","DownloadIcon","handleExport","LinkIcon","DeleteIcon","confirm","SimpleGrid","columns","base","md","upcomingEvents","settings","timezone","workingHoursStart","workingHoursEnd","stat","position","Stat","StatLabel","StatNumber","CardBody","Tabs","index","TabList","Tab","_selected","TabPanels","TabPanel","permission","_user$permissions","_user$permissions2","_user$permissions3","permissions","hasPermission","AddIcon","overflowX","Table","Thead","Tr","Th","Tbody","event","isCancelled","Td","textDecoration","startTime","endTime","fullEvent","navigator","clipboard","writeText","then","date","toLocaleDateString","weekday","month","day","year","handleEditEvent","eventId","reason","handleDeleteEvent","isLoading","defaultReminderMinutes","BellIcon","emailNotifications","smsNotifications","mt","FormControl","FormLabel","_focus","FormHelperText","Checkbox","isChecked","checked","filter","handleShareCalendar","isEmail","test","replace","sharedWithEmail","loadingText","publicUrl","EventModal","onSuccess","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","undefined","toLowerCase","options","buf","_options$random","_options$rng","_options","native","rnds","random","rng","call","Error","RangeError","_excluded","useRadioGroup","props","onChangeProp","valueProp","defaultValue","nameProp","isFocusable","isNative","htmlProps","_objectWithoutProperties","valueState","setValue","isControlled","useRef","focus","useCallback","rootNode","current","query","firstEnabledAndCheckedInput","querySelector","firstEnabledInput","uuid","useId","fallbackName","eventOrValue","nextValue","isObject","isInputEvent","String","getRootProps","props2","forwardedRef","_objectSpread","mergeRefs","role","getRadioProps","ref2","checkedKey","RadioGroupProvider","useRadioGroupContext","createContext","strict","RadioGroup","forwardRef","className","rest","group","useMemo","jsx","chakra","div","cx","displayName","stopEvent","preventDefault","stopPropagation","Radio","_props$name","styles","useMultiStyleConfig","ownProps","omitThemingProps","inputProps","htmlInputProps","callAll","getInputProps","getLabelProps","defaultChecked","isCheckedProp","isDisabledProp","isReadOnly","isReadOnlyProp","isRequired","isRequiredProp","isInvalid","isInvalidProp","idProp","dataRadioGroup","ariaDescribedBy","formControl","useFormControlContext","isFocused","setFocused","isHovered","setHovering","isActive","setActive","isCheckedState","setChecked","Boolean","isFocusVisibleRef","trackFocusVisible","state2","handleChange","currentTarget","onKeyDown","key","onKeyUp","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","onFocus","onBlur","trulyDisabled","disabled","readOnly","required","ariaAttr","visuallyHiddenStyle","state","htmlFor","useRadio","layoutProps","otherProps","layoutPropNames","checkboxProps","labelProps","rootProps","Object","assign","rootStyles","alignItems","verticalAlign","container","checkboxStyles","justifyContent","control","labelStyles","userSelect","marginStart","jsxs","__css","span","ChevronUpIcon","createIcon","d"],"sourceRoot":""}