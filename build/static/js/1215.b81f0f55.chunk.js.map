{"version":3,"file":"static/js/1215.b81f0f55.chunk.js","mappings":"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","sources":["pages/proposals/NewProposal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Heading,\n  Text,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  VStack,\n  HStack,\n  useColorMode,\n  useToast,\n  Divider,\n  IconButton,\n  Badge,\n} from '@chakra-ui/react';\nimport { FiSave, FiPlus, FiX } from 'react-icons/fi';\nimport { useNavigate } from 'react-router-dom';\nimport { gql, useMutation } from '@apollo/client';\nimport { getColor } from '../../brandConfig';\nimport { FooterWithFourColumns } from '../../components/chakra/FooterWithFourColumns/FooterWithFourColumns';\nimport { NavbarWithCallToAction } from '../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction';\nimport { ModuleBreadcrumb } from '../../components/ModuleBreadcrumb';\nimport proposalsModuleConfig from './moduleConfig';\n\nconst CREATE_PROPOSAL = gql`\n  mutation CreateProposal($input: CreateProposalInput!) {\n    createProposal(input: $input) {\n      id\n      companyName\n      slug\n      title\n      status\n    }\n  }\n`;\n\ninterface ScheduledPayment {\n  billId?: string;\n  daysAfterPrevious?: number;\n  description?: string;\n}\n\nconst NewProposal: React.FC = () => {\n  const navigate = useNavigate();\n  const toast = useToast();\n  const { colorMode } = useColorMode();\n\n  const [companyName, setCompanyName] = useState('');\n  const [slug, setSlug] = useState('');\n  const [title, setTitle] = useState('');\n  const [agreementMarkdown, setAgreementMarkdown] = useState('');\n  const [customPagePath, setCustomPagePath] = useState('');\n  const [projectId, setProjectId] = useState('');\n  const [draftBillId, setDraftBillId] = useState('');\n  const [scheduledPayments, setScheduledPayments] = useState<ScheduledPayment[]>([]);\n  const [notes, setNotes] = useState('');\n\n  const [createProposal, { loading: creating }] = useMutation(CREATE_PROPOSAL);\n\n  const bg = getColor(\"background.main\", colorMode);\n  const cardBg = colorMode === 'light' ? 'white' : 'gray.800';\n  const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n  const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n\n  // Auto-generate slug from company name\n  const handleCompanyNameChange = (value: string) => {\n    setCompanyName(value);\n    const generatedSlug = value\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/^-|-$/g, '');\n    setSlug(generatedSlug);\n  };\n\n  const handleAddScheduledPayment = () => {\n    setScheduledPayments([...scheduledPayments, { billId: '', daysAfterPrevious: undefined, description: '' }]);\n  };\n\n  const handleRemoveScheduledPayment = (index: number) => {\n    setScheduledPayments(scheduledPayments.filter((_, i) => i !== index));\n  };\n\n  const handleUpdateScheduledPayment = (index: number, field: keyof ScheduledPayment, value: any) => {\n    const updated = [...scheduledPayments];\n    updated[index] = { ...updated[index], [field]: value };\n    setScheduledPayments(updated);\n  };\n\n  const handleSubmit = async () => {\n    console.log('🔵 SUBMIT - Starting validation');\n    console.log('📝 Form data:', {\n      companyName,\n      slug,\n      title,\n      agreementMarkdownLength: agreementMarkdown.length,\n      customPagePath,\n      notes,\n    });\n\n    if (!companyName || !slug || !title || !agreementMarkdown) {\n      toast({\n        title: 'Missing fields',\n        description: 'Please fill in all required fields',\n        status: 'error',\n        duration: 3000,\n      });\n      return;\n    }\n\n    const inputData = {\n      companyName,\n      slug,\n      title,\n      agreementMarkdown,\n      customPagePath: customPagePath || undefined,\n      projectId: projectId || undefined,\n      draftBillId: draftBillId || undefined,\n      scheduledPayments: scheduledPayments.length > 0 ? scheduledPayments : undefined,\n      notes: notes || undefined,\n    };\n\n    console.log('🚀 Sending to GraphQL:', JSON.stringify(inputData, null, 2));\n\n    try {\n      const { data } = await createProposal({\n        variables: {\n          input: inputData,\n        },\n      });\n\n      toast({\n        title: 'Proposal created!',\n        description: `Proposal \"${data.createProposal.companyName}\" has been created`,\n        status: 'success',\n        duration: 5000,\n      });\n\n      navigate('/proposals');\n    } catch (error) {\n      toast({\n        title: 'Error creating proposal',\n        description: error instanceof Error ? error.message : 'Unknown error occurred',\n        status: 'error',\n        duration: 5000,\n      });\n    }\n  };\n\n  return (\n    <>\n      <NavbarWithCallToAction />\n      <Box bg={bg} minH=\"100vh\" py={10}>\n        <Container maxW=\"container.lg\">\n          <ModuleBreadcrumb moduleConfig={proposalsModuleConfig} />\n          <VStack spacing={8} align=\"stretch\">\n            {/* Header */}\n            <VStack align=\"start\" spacing={1}>\n            <Heading size=\"xl\" color={textPrimary}>Create New Proposal</Heading>\n            <Text color={textSecondary}>Create a proposal with agreement and signature tracking</Text>\n          </VStack>\n\n          {/* Form */}\n          <Box bg={cardBg} p={8} borderRadius=\"lg\" shadow=\"md\">\n            <VStack spacing={6} align=\"stretch\">\n              {/* Company Info */}\n              <FormControl isRequired>\n                <FormLabel color={textPrimary}>Company Name</FormLabel>\n                <Input\n                  value={companyName}\n                  onChange={(e) => handleCompanyNameChange(e.target.value)}\n                  placeholder=\"e.g., One Group Australasia\"\n                />\n              </FormControl>\n\n              <FormControl isRequired>\n                <FormLabel color={textPrimary}>URL Slug</FormLabel>\n                <Input\n                  value={slug}\n                  onChange={(e) => setSlug(e.target.value)}\n                  placeholder=\"e.g., onegroup\"\n                />\n                <Text fontSize=\"sm\" color={textSecondary} mt={1}>\n                  Proposal will be accessible at: /proposals/{slug}\n                </Text>\n              </FormControl>\n\n              <FormControl isRequired>\n                <FormLabel color={textPrimary}>Proposal Title</FormLabel>\n                <Input\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  placeholder=\"e.g., Website Development & Managed IT Agreement\"\n                />\n              </FormControl>\n\n              <FormControl>\n                <FormLabel color={textPrimary}>Custom Offer Page Path (Optional)</FormLabel>\n                <Input\n                  value={customPagePath}\n                  onChange={(e) => setCustomPagePath(e.target.value)}\n                  placeholder=\"e.g., /offers/onegroup\"\n                />\n                <Text fontSize=\"sm\" color={textSecondary} mt={1}>\n                  If you have a custom branded offer page, enter its path here (e.g., /offers/onegroup)\n                </Text>\n              </FormControl>\n\n              <FormControl>\n                <FormLabel color={textPrimary}>Project ID (Optional)</FormLabel>\n                <Input\n                  value={projectId}\n                  onChange={(e) => setProjectId(e.target.value)}\n                  placeholder=\"e.g., 6234f234a234b234c234d234\"\n                />\n                <Text fontSize=\"sm\" color={textSecondary} mt={1}>\n                  Link this proposal to an existing project\n                </Text>\n              </FormControl>\n\n              <FormControl>\n                <FormLabel color={textPrimary}>Draft Bill ID (Optional)</FormLabel>\n                <Input\n                  value={draftBillId}\n                  onChange={(e) => setDraftBillId(e.target.value)}\n                  placeholder=\"e.g., 6234f234a234b234c234d234\"\n                />\n                <Text fontSize=\"sm\" color={textSecondary} mt={1}>\n                  Draft bill to be paid upon signing\n                </Text>\n              </FormControl>\n\n              <Divider />\n\n              {/* Scheduled Payments */}\n              <Box>\n                <HStack justify=\"space-between\" mb={4}>\n                  <Box>\n                    <Heading size=\"md\" color={textPrimary}>Scheduled Payments</Heading>\n                    <Text fontSize=\"sm\" color={textSecondary} mt={1}>\n                      Create a payment schedule with milestones\n                    </Text>\n                  </Box>\n                  <Button\n                    leftIcon={<FiPlus />}\n                    size=\"sm\"\n                    onClick={handleAddScheduledPayment}\n                    colorScheme=\"blue\"\n                  >\n                    Add Payment\n                  </Button>\n                </HStack>\n\n                {scheduledPayments.length === 0 ? (\n                  <Box\n                    p={6}\n                    textAlign=\"center\"\n                    borderWidth={1}\n                    borderRadius=\"md\"\n                    borderStyle=\"dashed\"\n                    color={textSecondary}\n                  >\n                    <Text>No scheduled payments yet. Click \"Add Payment\" to create a milestone.</Text>\n                  </Box>\n                ) : (\n                  <VStack spacing={4} align=\"stretch\">\n                    {scheduledPayments.map((payment, index) => (\n                      <Box\n                        key={index}\n                        p={4}\n                        borderWidth={1}\n                        borderRadius=\"md\"\n                        bg={colorMode === 'light' ? 'gray.50' : 'gray.700'}\n                      >\n                        <HStack justify=\"space-between\" mb={3}>\n                          <Badge colorScheme=\"blue\">Payment {index + 1}</Badge>\n                          <IconButton\n                            aria-label=\"Remove payment\"\n                            icon={<FiX />}\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            colorScheme=\"red\"\n                            onClick={() => handleRemoveScheduledPayment(index)}\n                          />\n                        </HStack>\n                        <VStack spacing={3} align=\"stretch\">\n                          <FormControl>\n                            <FormLabel fontSize=\"sm\" color={textPrimary}>Bill ID</FormLabel>\n                            <Input\n                              size=\"sm\"\n                              value={payment.billId || ''}\n                              onChange={(e) => handleUpdateScheduledPayment(index, 'billId', e.target.value)}\n                              placeholder=\"e.g., 6234f234a234b234c234d234\"\n                            />\n                          </FormControl>\n                          <FormControl>\n                            <FormLabel fontSize=\"sm\" color={textPrimary}>Days After Previous Payment</FormLabel>\n                            <Input\n                              size=\"sm\"\n                              type=\"number\"\n                              value={payment.daysAfterPrevious || ''}\n                              onChange={(e) => handleUpdateScheduledPayment(index, 'daysAfterPrevious', e.target.value ? parseInt(e.target.value) : undefined)}\n                              placeholder={index === 0 ? \"Days after signing (e.g., 0, 7, 14)\" : \"Days after previous payment\"}\n                            />\n                            <Text fontSize=\"xs\" color={textSecondary} mt={1}>\n                              {index === 0 ? 'Days after proposal is signed' : 'Days after the previous payment is completed'}\n                            </Text>\n                          </FormControl>\n                          <FormControl>\n                            <FormLabel fontSize=\"sm\" color={textPrimary}>Description</FormLabel>\n                            <Input\n                              size=\"sm\"\n                              value={payment.description || ''}\n                              onChange={(e) => handleUpdateScheduledPayment(index, 'description', e.target.value)}\n                              placeholder=\"e.g., Milestone 1: Core Pages & Infrastructure\"\n                            />\n                          </FormControl>\n                        </VStack>\n                      </Box>\n                    ))}\n                  </VStack>\n                )}\n              </Box>\n\n              <Divider />\n\n              {/* Agreement Markdown */}\n              <FormControl isRequired>\n                <FormLabel color={textPrimary}>Agreement (Markdown)</FormLabel>\n                <Textarea\n                  value={agreementMarkdown}\n                  onChange={(e) => setAgreementMarkdown(e.target.value)}\n                  placeholder=\"# AGREEMENT&#10;&#10;## Terms and Conditions&#10;...\"\n                  rows={10}\n                  fontFamily=\"monospace\"\n                />\n                <Text fontSize=\"sm\" color={textSecondary} mt={1}>\n                  Write your agreement in Markdown format\n                </Text>\n              </FormControl>\n\n              <Divider />\n\n              {/* Notes */}\n              <FormControl>\n                <FormLabel color={textPrimary}>Internal Notes (Optional)</FormLabel>\n                <Textarea\n                  value={notes}\n                  onChange={(e) => setNotes(e.target.value)}\n                  placeholder=\"Internal notes about this proposal...\"\n                  rows={3}\n                />\n              </FormControl>\n\n              {/* Actions */}\n              <HStack justify=\"flex-end\" spacing={4}>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => navigate('/proposals')}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  leftIcon={<FiSave />}\n                  colorScheme=\"blue\"\n                  onClick={handleSubmit}\n                  isLoading={creating}\n                >\n                  Create Proposal\n                </Button>\n              </HStack>\n            </VStack>\n          </Box>\n        </VStack>\n      </Container>\n    </Box>\n    <FooterWithFourColumns />\n  </>\n  );\n};\n\nexport default NewProposal;\n"],"names":["CREATE_PROPOSAL","gql","_templateObject","_taggedTemplateLiteral","NewProposal","navigate","useNavigate","toast","useToast","colorMode","useColorMode","companyName","setCompanyName","useState","slug","setSlug","title","setTitle","agreementMarkdown","setAgreementMarkdown","customPagePath","setCustomPagePath","projectId","setProjectId","draftBillId","setDraftBillId","scheduledPayments","setScheduledPayments","notes","setNotes","createProposal","loading","creating","useMutation","bg","getColor","cardBg","textPrimary","textSecondary","handleUpdateScheduledPayment","index","field","value","updated","_objectSpread","_jsxs","_Fragment","children","_jsx","NavbarWithCallToAction","Box","minH","py","Container","maxW","ModuleBreadcrumb","moduleConfig","proposalsModuleConfig","VStack","spacing","align","Heading","size","color","Text","p","borderRadius","shadow","FormControl","isRequired","FormLabel","Input","onChange","e","generatedSlug","toLowerCase","replace","handleCompanyNameChange","target","placeholder","fontSize","mt","Divider","HStack","justify","mb","Button","leftIcon","FiPlus","onClick","handleAddScheduledPayment","billId","daysAfterPrevious","undefined","description","colorScheme","length","textAlign","borderWidth","borderStyle","map","payment","Badge","IconButton","icon","FiX","variant","filter","_","i","handleRemoveScheduledPayment","type","parseInt","Textarea","rows","fontFamily","FiSave","async","console","log","agreementMarkdownLength","status","duration","inputData","JSON","stringify","data","variables","input","concat","error","Error","message","isLoading","FooterWithFourColumns"],"sourceRoot":""}