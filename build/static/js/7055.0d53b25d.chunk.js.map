{"version":3,"file":"static/js/7055.0d53b25d.chunk.js","mappings":"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","sources":["pages/bills/CompanyDetails.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    Box,\n    Button,\n    Container,\n    Heading,\n    VStack,\n    HStack,\n    Text,\n    Card,\n    CardBody,\n    CardHeader,\n    FormControl,\n    FormLabel,\n    Input,\n    Select,\n    Switch,\n    useToast,\n    Divider,\n    SimpleGrid,\n    useColorMode,\n    Spinner,\n    Center,\n    Alert,\n    AlertIcon,\n} from \"@chakra-ui/react\";\nimport { FiCreditCard, FiSave } from \"react-icons/fi\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { NavbarWithCallToAction } from \"../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction\";\nimport { FooterWithFourColumns } from \"../../components/chakra/FooterWithFourColumns/FooterWithFourColumns\";\nimport { usePageTitle } from \"../../hooks/useDocumentTitle\";\nimport { ModuleBreadcrumb } from \"../../components/ModuleBreadcrumb\";\nimport billsModuleConfig from \"./moduleConfig\";\nimport { getColor, brandConfig } from \"../../brandConfig\";\nimport { Bill, BillStatus, BillCurrency } from \"../../generated/graphql\";\n\ninterface CompanyDetails {\n    companyName: string;\n    taxId: string;\n    billingEmail: string;\n    billingPhone: string;\n    taxPercentage: number;\n    billingAddress: {\n        addressLine1: string;\n        addressLine2?: string;\n        city: string;\n        state: string;\n        postalCode: string;\n        country: string;\n    };\n    invoicePreferences: {\n        emailInvoices: boolean;\n        autoPayEnabled: boolean;\n        invoiceLanguage: string;\n        taxIncluded: boolean;\n    };\n}\n\nconst GET_CURRENT_TENANT = gql`\n    query GetCurrentTenant {\n        currentTenant {\n            id\n            name\n            companyDetails {\n                companyName\n                taxId\n                billingEmail\n                billingPhone\n                taxPercentage\n                billingAddress {\n                    addressLine1\n                    addressLine2\n                    city\n                    state\n                    postalCode\n                    country\n                }\n                invoicePreferences {\n                    emailInvoices\n                    autoPayEnabled\n                    invoiceLanguage\n                    taxIncluded\n                }\n            }\n        }\n    }\n`;\n\nconst UPDATE_TENANT_COMPANY_DETAILS = gql`\n    mutation UpdateTenantCompanyDetails($companyDetails: TenantCompanyDetailsInput!) {\n        updateTenantCompanyDetails(companyDetails: $companyDetails) {\n            id\n            companyDetails {\n                companyName\n                taxId\n                billingEmail\n                billingPhone\n                taxPercentage\n                billingAddress {\n                    addressLine1\n                    addressLine2\n                    city\n                    state\n                    postalCode\n                    country\n                }\n                invoicePreferences {\n                    emailInvoices\n                    autoPayEnabled\n                    invoiceLanguage\n                    taxIncluded\n                }\n            }\n        }\n    }\n`;\n\nconst CompanyDetails: React.FC = () => {\n    usePageTitle(\"Company Details\");\n    const toast = useToast();\n    const [isSaving, setIsSaving] = useState(false);\n    const { colorMode } = useColorMode();\n\n    // Consistent styling from brandConfig\n    const bg = getColor(\"background.main\", colorMode);\n    const cardGradientBg = getColor(\"background.cardGradient\", colorMode);\n    const cardBorder = getColor(\"border.darkCard\", colorMode);\n    const textPrimary = getColor(colorMode === 'light' ? \"text.primary\" : \"text.primaryDark\", colorMode);\n    const textSecondary = getColor(colorMode === 'light' ? \"text.secondary\" : \"text.secondaryDark\", colorMode);\n    const textMuted = getColor(colorMode === 'light' ? \"text.muted\" : \"text.mutedDark\", colorMode);\n\n    // GraphQL query and mutation\n    const { data, loading, error } = useQuery(GET_CURRENT_TENANT);\n    const [updateCompanyDetails] = useMutation(UPDATE_TENANT_COMPANY_DETAILS);\n\n    // Local state for form\n    const [companyDetails, setCompanyDetails] = useState<CompanyDetails>({\n        companyName: \"\",\n        taxId: \"\",\n        billingEmail: \"\",\n        billingPhone: \"\",\n        taxPercentage: 10,\n        billingAddress: {\n            addressLine1: \"\",\n            addressLine2: \"\",\n            city: \"\",\n            state: \"\",\n            postalCode: \"\",\n            country: \"Australia\",\n        },\n        invoicePreferences: {\n            emailInvoices: true,\n            autoPayEnabled: false,\n            invoiceLanguage: \"en\",\n            taxIncluded: true,\n        },\n    });\n\n    // Update form when data loads\n    useEffect(() => {\n        if (data?.currentTenant?.companyDetails) {\n            const details = data.currentTenant.companyDetails;\n            setCompanyDetails({\n                companyName: details.companyName || \"\",\n                taxId: details.taxId || \"\",\n                billingEmail: details.billingEmail || \"\",\n                billingPhone: details.billingPhone || \"\",\n                taxPercentage: details.taxPercentage ?? 10,\n                billingAddress: {\n                    addressLine1: details.billingAddress?.addressLine1 || \"\",\n                    addressLine2: details.billingAddress?.addressLine2 || \"\",\n                    city: details.billingAddress?.city || \"\",\n                    state: details.billingAddress?.state || \"\",\n                    postalCode: details.billingAddress?.postalCode || \"\",\n                    country: details.billingAddress?.country || \"Australia\",\n                },\n                invoicePreferences: {\n                    emailInvoices: details.invoicePreferences?.emailInvoices ?? true,\n                    autoPayEnabled: details.invoicePreferences?.autoPayEnabled ?? false,\n                    invoiceLanguage: details.invoicePreferences?.invoiceLanguage || \"en\",\n                    taxIncluded: details.invoicePreferences?.taxIncluded ?? true,\n                },\n            });\n        }\n    }, [data]);\n\n    const handleInputChange = (section: keyof CompanyDetails, field: string, value: string | boolean | number) => {\n        if (section === \"billingAddress\" || section === \"invoicePreferences\") {\n            setCompanyDetails({\n                ...companyDetails,\n                [section]: {\n                    ...companyDetails[section],\n                    [field]: value,\n                },\n            });\n        } else {\n            setCompanyDetails({\n                ...companyDetails,\n                [field]: value,\n            });\n        }\n    };\n\n    const handleSave = async () => {\n        setIsSaving(true);\n        try {\n            await updateCompanyDetails({\n                variables: {\n                    companyDetails: {\n                        companyName: companyDetails.companyName,\n                        taxId: companyDetails.taxId,\n                        billingEmail: companyDetails.billingEmail,\n                        billingPhone: companyDetails.billingPhone,\n                        taxPercentage: companyDetails.taxPercentage,\n                        billingAddress: {\n                            addressLine1: companyDetails.billingAddress.addressLine1,\n                            addressLine2: companyDetails.billingAddress.addressLine2 || null,\n                            city: companyDetails.billingAddress.city,\n                            state: companyDetails.billingAddress.state,\n                            postalCode: companyDetails.billingAddress.postalCode,\n                            country: companyDetails.billingAddress.country,\n                        },\n                        invoicePreferences: {\n                            emailInvoices: companyDetails.invoicePreferences.emailInvoices,\n                            autoPayEnabled: companyDetails.invoicePreferences.autoPayEnabled,\n                            invoiceLanguage: companyDetails.invoicePreferences.invoiceLanguage,\n                            taxIncluded: companyDetails.invoicePreferences.taxIncluded,\n                        },\n                    },\n                },\n            });\n\n            toast({\n                title: \"Company details updated\",\n                description: \"Your company information has been saved successfully.\",\n                status: \"success\",\n                duration: 3000,\n                isClosable: true,\n            });\n        } catch (error) {\n            console.error(\"Error updating company details:\", error);\n            toast({\n                title: \"Error updating company details\",\n                description: \"Please try again later.\",\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n            });\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    if (loading) {\n        return (\n            <Box bg={bg} minHeight=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n                <Container maxW=\"container.xl\" py={12} flex=\"1\">\n                    <Center h=\"50vh\">\n                        <Spinner size=\"xl\" color={getColor(\"primary\")} />\n                    </Center>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    if (error) {\n        return (\n            <Box bg={bg} minHeight=\"100vh\" display=\"flex\" flexDirection=\"column\">\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n                <Container maxW=\"container.xl\" py={12} flex=\"1\">\n                    <Alert status=\"error\">\n                        <AlertIcon />\n                        Error loading company details. Please try again.\n                    </Alert>\n                </Container>\n                <FooterWithFourColumns />\n            </Box>\n        );\n    }\n\n    return (\n        <Box bg={bg} minHeight=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <NavbarWithCallToAction />\n            <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n            <Container maxW=\"container.lg\" py={8} flex=\"1\">\n                <VStack spacing={6} align=\"stretch\">\n                    <Box>\n                        <Heading size=\"lg\" color={textPrimary} mb={2}>\n                            🏢 Company Details\n                        </Heading>\n                        <Text color={textSecondary}>\n                            Manage your company information, business address, and invoice preferences.\n                        </Text>\n                    </Box>\n\n                    <SimpleGrid columns={{ base: 1, lg: 2 }} spacing={6}>\n                        {/* Company Information */}\n                        <Card\n                            bg={cardGradientBg}\n                            backdropFilter=\"blur(10px)\"\n                            boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n                            border=\"1px\"\n                            borderColor={cardBorder}\n                        >\n                            <CardHeader borderBottom=\"1px\" borderColor={cardBorder}>\n                                <Heading size=\"md\" color={textPrimary}>Company Information</Heading>\n                            </CardHeader>\n                            <CardBody>\n                                <VStack spacing={4}>\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Company Name</FormLabel>\n                                        <Input\n                                            value={companyDetails.companyName}\n                                            onChange={(e) => handleInputChange(\"companyName\" as keyof CompanyDetails, \"companyName\", e.target.value)}\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Tax ID / ABN</FormLabel>\n                                        <Input\n                                            value={companyDetails.taxId}\n                                            onChange={(e) => handleInputChange(\"taxId\" as keyof CompanyDetails, \"taxId\", e.target.value)}\n                                            placeholder=\"ABN 12 345 678 901\"\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Billing Email</FormLabel>\n                                        <Input\n                                            type=\"email\"\n                                            value={companyDetails.billingEmail}\n                                            onChange={(e) => handleInputChange(\"billingEmail\" as keyof CompanyDetails, \"billingEmail\", e.target.value)}\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Billing Phone</FormLabel>\n                                        <Input\n                                            type=\"tel\"\n                                            value={companyDetails.billingPhone}\n                                            onChange={(e) => handleInputChange(\"billingPhone\" as keyof CompanyDetails, \"billingPhone\", e.target.value)}\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Tax/GST Percentage</FormLabel>\n                                        <Input\n                                            type=\"number\"\n                                            value={companyDetails.taxPercentage}\n                                            onChange={(e) => handleInputChange(\"taxPercentage\" as keyof CompanyDetails, \"taxPercentage\", parseFloat(e.target.value) || 0)}\n                                            placeholder=\"10\"\n                                            min={0}\n                                            max={100}\n                                            step={0.1}\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                        <Text fontSize=\"xs\" color={textMuted} mt={1}>\n                                            E.g., 10 for 10% GST (Australian standard). This will be applied to all bills.\n                                        </Text>\n                                    </FormControl>\n                                </VStack>\n                            </CardBody>\n                        </Card>\n\n                        {/* Billing Address */}\n                        <Card\n                            bg={cardGradientBg}\n                            backdropFilter=\"blur(10px)\"\n                            boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n                            border=\"1px\"\n                            borderColor={cardBorder}\n                        >\n                            <CardHeader borderBottom=\"1px\" borderColor={cardBorder}>\n                                <Heading size=\"md\" color={textPrimary}>Billing Address</Heading>\n                            </CardHeader>\n                            <CardBody>\n                                <VStack spacing={4}>\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Address Line 1</FormLabel>\n                                        <Input\n                                            value={companyDetails.billingAddress.addressLine1}\n                                            onChange={(e) => handleInputChange(\"billingAddress\", \"addressLine1\", e.target.value)}\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <FormControl>\n                                        <FormLabel color={textPrimary}>Address Line 2</FormLabel>\n                                        <Input\n                                            value={companyDetails.billingAddress.addressLine2 || \"\"}\n                                            onChange={(e) => handleInputChange(\"billingAddress\", \"addressLine2\", e.target.value)}\n                                            placeholder=\"Suite, apartment, etc. (optional)\"\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _placeholder={{ color: textMuted }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                            _hover={{\n                                                borderColor: textSecondary\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <HStack width=\"100%\">\n                                        <FormControl>\n                                            <FormLabel color={textPrimary}>City</FormLabel>\n                                            <Input\n                                                value={companyDetails.billingAddress.city}\n                                                onChange={(e) => handleInputChange(\"billingAddress\", \"city\", e.target.value)}\n                                                bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                                border=\"1px\"\n                                                borderColor={cardBorder}\n                                                color={textPrimary}\n                                                _placeholder={{ color: textMuted }}\n                                                _focus={{\n                                                    borderColor: textSecondary,\n                                                    boxShadow: \"0 0 0 1px rgba(255, 255, 255, 0.1)\"\n                                                }}\n                                                _hover={{\n                                                    borderColor: textSecondary\n                                                }}\n                                            />\n                                        </FormControl>\n\n                                        <FormControl>\n                                            <FormLabel color={textPrimary}>State</FormLabel>\n                                            <Select\n                                                value={companyDetails.billingAddress.state}\n                                                onChange={(e) => handleInputChange(\"billingAddress\", \"state\", e.target.value)}\n                                                bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                                border=\"1px\"\n                                                borderColor={cardBorder}\n                                                color={textPrimary}\n                                                _hover={{ borderColor: textSecondary }}\n                                                _focus={{\n                                                    borderColor: textSecondary,\n                                                    boxShadow: \"0 0 0 1px rgba(255, 255, 255, 0.1)\"\n                                                }}\n                                            >\n                                                {colorMode === 'light' ? (\n                                                    <>\n                                                        <option value=\"NSW\">NSW</option>\n                                                        <option value=\"VIC\">VIC</option>\n                                                        <option value=\"QLD\">QLD</option>\n                                                        <option value=\"WA\">WA</option>\n                                                        <option value=\"SA\">SA</option>\n                                                        <option value=\"TAS\">TAS</option>\n                                                        <option value=\"ACT\">ACT</option>\n                                                        <option value=\"NT\">NT</option>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <option value=\"NSW\" style={{ backgroundColor: '#1a1a1a' }}>NSW</option>\n                                                        <option value=\"VIC\" style={{ backgroundColor: '#1a1a1a' }}>VIC</option>\n                                                        <option value=\"QLD\" style={{ backgroundColor: '#1a1a1a' }}>QLD</option>\n                                                        <option value=\"WA\" style={{ backgroundColor: '#1a1a1a' }}>WA</option>\n                                                        <option value=\"SA\" style={{ backgroundColor: '#1a1a1a' }}>SA</option>\n                                                        <option value=\"TAS\" style={{ backgroundColor: '#1a1a1a' }}>TAS</option>\n                                                        <option value=\"ACT\" style={{ backgroundColor: '#1a1a1a' }}>ACT</option>\n                                                        <option value=\"NT\" style={{ backgroundColor: '#1a1a1a' }}>NT</option>\n                                                    </>\n                                                )}\n                                            </Select>\n                                        </FormControl>\n                                    </HStack>\n\n                                    <HStack width=\"100%\">\n                                        <FormControl>\n                                            <FormLabel color={textPrimary}>Postal Code</FormLabel>\n                                            <Input\n                                                value={companyDetails.billingAddress.postalCode}\n                                                onChange={(e) => handleInputChange(\"billingAddress\", \"postalCode\", e.target.value)}\n                                                bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                                border=\"1px\"\n                                                borderColor={cardBorder}\n                                                color={textPrimary}\n                                                _placeholder={{ color: textMuted }}\n                                                _focus={{\n                                                    borderColor: textSecondary,\n                                                    boxShadow: \"0 0 0 1px rgba(255, 255, 255, 0.1)\"\n                                                }}\n                                                _hover={{\n                                                    borderColor: textSecondary\n                                                }}\n                                            />\n                                        </FormControl>\n\n                                        <FormControl>\n                                            <FormLabel color={textPrimary}>Country</FormLabel>\n                                            <Select\n                                                value={companyDetails.billingAddress.country}\n                                                onChange={(e) => handleInputChange(\"billingAddress\", \"country\", e.target.value)}\n                                                bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                                border=\"1px\"\n                                                borderColor={cardBorder}\n                                                color={textPrimary}\n                                                _hover={{ borderColor: textSecondary }}\n                                                _focus={{\n                                                    borderColor: textSecondary,\n                                                    boxShadow: \"0 0 0 1px rgba(255, 255, 255, 0.1)\"\n                                                }}\n                                            >\n                                                {colorMode === 'light' ? (\n                                                    <>\n                                                        <option value=\"Australia\">Australia</option>\n                                                        <option value=\"New Zealand\">New Zealand</option>\n                                                        <option value=\"United States\">United States</option>\n                                                        <option value=\"Canada\">Canada</option>\n                                                        <option value=\"United Kingdom\">United Kingdom</option>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <option value=\"Australia\" style={{ backgroundColor: '#1a1a1a' }}>Australia</option>\n                                                        <option value=\"New Zealand\" style={{ backgroundColor: '#1a1a1a' }}>New Zealand</option>\n                                                        <option value=\"United States\" style={{ backgroundColor: '#1a1a1a' }}>United States</option>\n                                                        <option value=\"Canada\" style={{ backgroundColor: '#1a1a1a' }}>Canada</option>\n                                                        <option value=\"United Kingdom\" style={{ backgroundColor: '#1a1a1a' }}>United Kingdom</option>\n                                                    </>\n                                                )}\n                                            </Select>\n                                        </FormControl>\n                                    </HStack>\n                                </VStack>\n                            </CardBody>\n                        </Card>\n                    </SimpleGrid>\n\n                    {/* Invoice Preferences */}\n                    <Card\n                        bg={cardGradientBg}\n                        backdropFilter=\"blur(10px)\"\n                        boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n                        border=\"1px\"\n                        borderColor={cardBorder}\n                    >\n                        <CardHeader borderBottom=\"1px\" borderColor={cardBorder}>\n                            <Heading size=\"md\" color={textPrimary}>Invoice Preferences</Heading>\n                            <Text fontSize=\"sm\" color={textMuted} mt={2}>\n                                Configure how invoices are generated and delivered to your clients\n                            </Text>\n                        </CardHeader>\n                        <CardBody>\n                            <VStack spacing={6} align=\"stretch\">\n                                {/* Email Invoices */}\n                                <Box>\n                                    <FormControl display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Box flex=\"1\" mr={4}>\n                                            <FormLabel htmlFor=\"email-invoices\" mb=\"1\" color={textPrimary} fontWeight=\"semibold\">\n                                                Email Invoices\n                                            </FormLabel>\n                                            <Text fontSize=\"sm\" color={textMuted}>\n                                                Automatically send invoice PDFs to clients via email when a bill is marked as \"Sent\"\n                                            </Text>\n                                        </Box>\n                                        <Switch\n                                            id=\"email-invoices\"\n                                            isChecked={companyDetails.invoicePreferences.emailInvoices}\n                                            onChange={(e) => handleInputChange(\"invoicePreferences\", \"emailInvoices\", e.target.checked)}\n                                            colorScheme=\"blue\"\n                                            size=\"lg\"\n                                        />\n                                    </FormControl>\n                                </Box>\n\n                                <Divider />\n\n                                {/* Auto-Pay Enabled */}\n                                <Box>\n                                    <FormControl display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Box flex=\"1\" mr={4}>\n                                            <FormLabel htmlFor=\"auto-pay\" mb=\"1\" color={textPrimary} fontWeight=\"semibold\">\n                                                Auto-Pay Enabled\n                                            </FormLabel>\n                                            <Text fontSize=\"sm\" color={textMuted}>\n                                                Allow clients to set up automatic payment methods. When enabled, bills will be charged automatically on the due date.\n                                            </Text>\n                                        </Box>\n                                        <Switch\n                                            id=\"auto-pay\"\n                                            isChecked={companyDetails.invoicePreferences.autoPayEnabled}\n                                            onChange={(e) => handleInputChange(\"invoicePreferences\", \"autoPayEnabled\", e.target.checked)}\n                                            colorScheme=\"blue\"\n                                            size=\"lg\"\n                                        />\n                                    </FormControl>\n                                </Box>\n\n                                <Divider />\n\n                                {/* Tax Included */}\n                                <Box>\n                                    <FormControl display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Box flex=\"1\" mr={4}>\n                                            <FormLabel htmlFor=\"tax-included\" mb=\"1\" color={textPrimary} fontWeight=\"semibold\">\n                                                Tax Included in Display\n                                            </FormLabel>\n                                            <Text fontSize=\"sm\" color={textMuted}>\n                                                Show prices with GST/tax already included. When disabled, tax is shown separately as a line item.\n                                            </Text>\n                                        </Box>\n                                        <Switch\n                                            id=\"tax-included\"\n                                            isChecked={companyDetails.invoicePreferences.taxIncluded}\n                                            onChange={(e) => handleInputChange(\"invoicePreferences\", \"taxIncluded\", e.target.checked)}\n                                            colorScheme=\"blue\"\n                                            size=\"lg\"\n                                        />\n                                    </FormControl>\n                                </Box>\n\n                                <Divider />\n\n                                {/* Invoice Language */}\n                                <Box>\n                                    <FormControl>\n                                        <FormLabel color={textPrimary} fontWeight=\"semibold\">Invoice Language</FormLabel>\n                                        <Text fontSize=\"sm\" color={textMuted} mb={3}>\n                                            Default language for invoice templates, email notifications, and PDF generation\n                                        </Text>\n                                        <Select\n                                            value={companyDetails.invoicePreferences.invoiceLanguage}\n                                            onChange={(e) => handleInputChange(\"invoicePreferences\", \"invoiceLanguage\", e.target.value)}\n                                            bg={colorMode === 'light' ? \"white\" : \"rgba(255, 255, 255, 0.05)\"}\n                                            border=\"1px\"\n                                            borderColor={cardBorder}\n                                            color={textPrimary}\n                                            _hover={{ borderColor: textSecondary }}\n                                            _focus={{\n                                                borderColor: colorMode === 'light' ? \"#007AFF\" : \"#3B82F6\",\n                                                boxShadow: colorMode === 'light' ? \"0 0 0 1px rgba(0, 122, 255, 0.2)\" : \"0 0 0 1px rgba(59, 130, 246, 0.2)\"\n                                            }}\n                                        >\n                                            {colorMode === 'light' ? (\n                                                <>\n                                                    <option value=\"en\">English</option>\n                                                    <option value=\"es\">Spanish</option>\n                                                    <option value=\"fr\">French</option>\n                                                    <option value=\"de\">German</option>\n                                                    <option value=\"zh\">Chinese</option>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <option value=\"en\" style={{ backgroundColor: '#1a1a1a' }}>English</option>\n                                                    <option value=\"es\" style={{ backgroundColor: '#1a1a1a' }}>Spanish</option>\n                                                    <option value=\"fr\" style={{ backgroundColor: '#1a1a1a' }}>French</option>\n                                                    <option value=\"de\" style={{ backgroundColor: '#1a1a1a' }}>German</option>\n                                                    <option value=\"zh\" style={{ backgroundColor: '#1a1a1a' }}>Chinese</option>\n                                                </>\n                                            )}\n                                        </Select>\n                                    </FormControl>\n                                </Box>\n                            </VStack>\n                        </CardBody>\n                    </Card>\n\n                    <Divider borderColor={cardBorder} />\n\n                    {/* Save Button */}\n                    <HStack justify=\"flex-end\">\n                        <Button\n                            leftIcon={<FiSave />}\n                            bg=\"white\"\n                            color=\"black\"\n                            _hover={{ \n                                bg: \"gray.100\",\n                                transform: \"translateY(-2px)\"\n                            }}\n                            onClick={handleSave}\n                            isLoading={isSaving}\n                            loadingText=\"Saving...\"\n                            size=\"lg\"\n                            boxShadow=\"0 2px 4px rgba(255, 255, 255, 0.1)\"\n                        >\n                            Save Company Details\n                        </Button>\n                    </HStack>\n                </VStack>\n            </Container>\n            <FooterWithFourColumns />\n        </Box>\n    );\n};\n\nexport default CompanyDetails;"],"names":["GET_CURRENT_TENANT","gql","_templateObject","_taggedTemplateLiteral","UPDATE_TENANT_COMPANY_DETAILS","_templateObject2","CompanyDetails","usePageTitle","toast","useToast","isSaving","setIsSaving","useState","colorMode","useColorMode","bg","getColor","cardGradientBg","cardBorder","textPrimary","textSecondary","textMuted","data","loading","error","useQuery","updateCompanyDetails","useMutation","companyDetails","setCompanyDetails","companyName","taxId","billingEmail","billingPhone","taxPercentage","billingAddress","addressLine1","addressLine2","city","state","postalCode","country","invoicePreferences","emailInvoices","autoPayEnabled","invoiceLanguage","taxIncluded","useEffect","_data$currentTenant","currentTenant","_details$taxPercentag","_details$billingAddre","_details$billingAddre2","_details$billingAddre3","_details$billingAddre4","_details$billingAddre5","_details$billingAddre6","_details$invoicePrefe","_details$invoicePrefe2","_details$invoicePrefe3","_details$invoicePrefe4","_details$invoicePrefe5","_details$invoicePrefe6","_details$invoicePrefe7","details","handleInputChange","section","field","value","_objectSpread","_jsxs","Box","minHeight","display","flexDirection","children","_jsx","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","billsModuleConfig","Container","maxW","py","flex","Center","h","Spinner","size","color","FooterWithFourColumns","Alert","status","AlertIcon","VStack","spacing","align","Heading","mb","Text","SimpleGrid","columns","base","lg","Card","backdropFilter","boxShadow","border","borderColor","CardHeader","borderBottom","CardBody","FormControl","FormLabel","Input","onChange","e","target","_placeholder","_focus","_hover","placeholder","type","parseFloat","min","max","step","fontSize","mt","HStack","width","Select","_Fragment","style","backgroundColor","alignItems","justifyContent","mr","htmlFor","fontWeight","Switch","id","isChecked","checked","colorScheme","Divider","justify","Button","leftIcon","FiSave","transform","onClick","async","variables","title","description","duration","isClosable","console","isLoading","loadingText"],"sourceRoot":""}