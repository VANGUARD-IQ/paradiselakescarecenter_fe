{"version":3,"file":"static/js/6771.7d48ee4a.chunk.js","mappings":"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","sources":["pages/bills/BillPDFPreview.tsx","pages/bills/components/BillPDF.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport {\n    Box,\n    Container,\n    Heading,\n    VStack,\n    HStack,\n    Text,\n    Badge,\n    Card,\n    CardHeader,\n    CardBody,\n    Skeleton,\n    Alert,\n    AlertIcon,\n    useToast,\n    Button,\n    Center,\n    Spinner,\n    useDisclosure,\n} from \"@chakra-ui/react\";\nimport { ArrowBackIcon, DownloadIcon } from \"@chakra-ui/icons\";\nimport { NavbarWithCallToAction } from \"../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction\";\nimport { FooterWithFourColumns } from \"../../components/chakra/FooterWithFourColumns/FooterWithFourColumns\";\nimport { usePageTitle } from \"../../hooks/useDocumentTitle\";\nimport { ModuleBreadcrumb } from \"../../components/ModuleBreadcrumb\";\nimport billsModuleConfig from \"./moduleConfig\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { pdf } from '@react-pdf/renderer';\nimport { BillPDF } from './components/BillPDF';\nimport { LoginWithSmsModal } from \"../authentication\";\nimport { getColor, getComponent, brandConfig } from \"../../brandConfig\";\n\n// Authenticated queries\nconst GET_BILL = gql`\n  query GetBillById($id: ID!) {\n    bill(id: $id) {\n      id\n      isPaid\n      status\n      paymentMethod\n      currency\n      acceptCardPayment\n      acceptCryptoPayment\n      projectId\n      issuedBy\n      lineItems {\n        id\n        description\n        amount\n        createdAt\n        updatedAt\n      }\n      totalAmount\n      tenantId\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nconst GET_CLIENT_BY_BILL = gql`\n  query GetClientDetailsByBillId($billId: ID!) {\n    getClientDetailsByBillId(billId: $billId) {\n      id\n      fName\n      lName\n      email\n      phoneNumber\n      businessName\n    }\n  }\n`;\n\nconst GET_BILL_ISSUER = gql`\n  query GetBillIssuerDetails($billId: ID!) {\n    getBillIssuerDetails(billId: $billId) {\n      id\n      fName\n      lName\n      email\n      phoneNumber\n      businessName\n      businessRegistrationNumber\n      paymentReceivingDetails {\n        acceptedMethods\n        bankAccount {\n          accountName\n          bsb\n          accountNumber\n          bankName\n          swiftCode\n        }\n        cryptoWallets {\n          walletAddress\n          network\n          memo\n        }\n        stripeConnect {\n          stripeAccountId\n          accountVerified\n          verifiedAt\n        }\n        paypalEmail\n        isVerified\n        cryptoDiscountPercentage\n      }\n    }\n  }\n`;\n\n// Public queries (no authentication required)\nconst PUBLIC_GET_BILL = gql`\n  query PublicGetBillById($id: ID!) {\n    publicBill(id: $id) {\n      id\n      isPaid\n      status\n      paymentMethod\n      currency\n      acceptCardPayment\n      acceptCryptoPayment\n      projectId\n      issuedBy\n      lineItems {\n        id\n        description\n        amount\n        createdAt\n        updatedAt\n      }\n      totalAmount\n      tenantId\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nconst PUBLIC_GET_CLIENT_BY_BILL = gql`\n  query PublicGetClientDetailsByBillId($billId: ID!) {\n    publicGetClientDetailsByBillId(billId: $billId) {\n      id\n      fName\n      lName\n      email\n      phoneNumber\n      businessName\n    }\n  }\n`;\n\nconst PUBLIC_GET_BILL_ISSUER = gql`\n  query PublicGetBillIssuerDetails($billId: ID!) {\n    publicGetBillIssuerDetails(billId: $billId) {\n      id\n      fName\n      lName\n      email\n      phoneNumber\n      businessName\n      businessRegistrationNumber\n      paymentReceivingDetails {\n        acceptedMethods\n        bankAccount {\n          accountName\n          bsb\n          accountNumber\n          bankName\n          swiftCode\n        }\n        cryptoWallets {\n          walletAddress\n          network\n          memo\n        }\n        stripeConnect {\n          stripeAccountId\n          accountVerified\n          verifiedAt\n        }\n        paypalEmail\n        isVerified\n        cryptoDiscountPercentage\n      }\n    }\n  }\n`;\n\nconst BillPDFPreview = () => {\n    usePageTitle(\"Bill PDF Preview\");\n    const { id } = useParams<{ id: string }>();\n    const navigate = useNavigate();\n    const { user, isAuthenticated } = useAuth();\n    const toast = useToast();\n    const [pdfUrl, setPdfUrl] = useState<string | null>(null);\n    const [isGenerating, setIsGenerating] = useState(true);\n    const [pdfHeight, setPdfHeight] = useState<number>(800); // Default height\n    const { isOpen: isLoginModalOpen, onOpen: openLoginModal, onClose: closeLoginModal } = useDisclosure();\n\n    // Consistent styling from brandConfig\n    const bg = getColor(\"background.main\");\n    const cardGradientBg = `linear-gradient(135deg, rgba(20, 20, 20, 0.8) 0%, rgba(30, 30, 30, 0.6) 50%, rgba(20, 20, 20, 0.8) 100%)`;\n    const cardBorder = \"rgba(255, 255, 255, 0.1)\";\n    const textPrimary = brandConfig.colors.text.inverse || \"#FFFFFF\";\n    const textSecondary = brandConfig.colors.text.secondaryDark || \"#B0B0B0\";\n    const textMuted = brandConfig.colors.text.mutedDark || \"#888888\";\n\n    // Rule: Display only the first 4 digits of the MongoDB ID for invoice ID\n    const getDisplayBillId = (fullId: string) => {\n        return fullId.substring(0, 4);\n    };\n\n    // Use public queries when not authenticated, authenticated queries otherwise\n    const billQuery = isAuthenticated ? GET_BILL : PUBLIC_GET_BILL;\n    const clientQuery = isAuthenticated ? GET_CLIENT_BY_BILL : PUBLIC_GET_CLIENT_BY_BILL;\n    const issuerQuery = isAuthenticated ? GET_BILL_ISSUER : PUBLIC_GET_BILL_ISSUER;\n\n    console.log('🔍 BillPDFPreview Debug:', {\n        isAuthenticated,\n        user,\n        billId: id,\n        usingPublicQuery: !isAuthenticated,\n        queryName: isAuthenticated ? 'Authenticated queries' : 'Public queries'\n    });\n\n    const { loading, error, data } = useQuery(billQuery, {\n        variables: { id },\n        onCompleted: (data) => {\n            console.log('✅ Bill query completed:', {\n                hasData: !!data,\n                billData: data?.bill || data?.publicBill,\n                dataKeys: Object.keys(data || {})\n            });\n        },\n        onError: (err) => {\n            console.error('❌ Bill query error:', err);\n        }\n    });\n\n    const { data: clientData, loading: clientLoading } = useQuery(clientQuery, {\n        variables: { billId: id },\n        onCompleted: (data) => {\n            console.log('✅ Client query completed:', data);\n        },\n        onError: (err) => {\n            console.error('❌ Client query error:', err);\n        }\n    });\n\n    const { data: issuerData, loading: issuerLoading } = useQuery(issuerQuery, {\n        variables: { billId: id },\n        onCompleted: (data) => {\n            console.log('✅ Issuer query completed:', data);\n        },\n        onError: (err) => {\n            console.error('❌ Issuer query error:', err);\n        }\n    });\n\n    // Generate PDF when data is loaded\n    useEffect(() => {\n        const generatePDF = async () => {\n            // Get bill data from either authenticated or public query\n            const billData = data?.bill || data?.publicBill;\n            if (billData && !loading && !clientLoading && !issuerLoading) {\n                try {\n                    setIsGenerating(true);\n                    const doc = <BillPDF bill={billData} clientData={clientData} issuerData={issuerData} />;\n\n                    // Generate PDF and get document info\n                    const pdfDoc = pdf(doc);\n                    const pdfBlob = await pdfDoc.toBlob();\n\n                    // Calculate the height needed for the PDF\n                    // A4 page is 794 points wide and 1123 points tall at 72 DPI\n                    // Convert to pixels: 1123 points = ~1500px height per page\n                    // For our single-page bill, we'll calculate based on content\n                    const estimatedHeight = calculatePDFHeight(billData);\n                    setPdfHeight(estimatedHeight);\n\n                    const url = URL.createObjectURL(pdfBlob);\n                    setPdfUrl(url);\n                } catch (error) {\n                    toast({\n                        title: \"Error generating PDF preview\",\n                        description: error instanceof Error ? error.message : \"Unknown error occurred\",\n                        status: \"error\",\n                        duration: 5000,\n                        isClosable: true,\n                    });\n                } finally {\n                    setIsGenerating(false);\n                }\n            }\n        };\n\n        generatePDF();\n\n        // Cleanup function\n        return () => {\n            if (pdfUrl) {\n                URL.revokeObjectURL(pdfUrl);\n            }\n        };\n    }, [data, clientData, issuerData, loading, clientLoading, issuerLoading, toast]);\n\n    // Calculate estimated PDF height based on content\n    const calculatePDFHeight = (bill: any) => {\n        let height = 200; // Header section\n\n        // Bill info sections\n        height += 200; // From/To information\n\n        // Line items - approximately 40px per item + header\n        const lineItemsCount = bill.lineItems?.length || 0;\n        height += 60 + (lineItemsCount * 45); // Header + rows\n\n        // Total and payment info\n        height += 100;\n\n        // Payment details section (if available)\n        if (issuerData?.getBillIssuerDetails?.paymentReceivingDetails) {\n            const paymentDetails = issuerData.getBillIssuerDetails.paymentReceivingDetails;\n\n            // Add height for bank account details\n            if (paymentDetails.bankAccount) {\n                height += 120;\n            }\n\n            // Add height for crypto wallets\n            if (paymentDetails.cryptoWallets?.length > 0) {\n                height += 80 + (paymentDetails.cryptoWallets.length * 60);\n            }\n\n            // Add height for other payment methods\n            if (paymentDetails.paypalEmail || paymentDetails.stripeConnect) {\n                height += 100;\n            }\n\n            // Base payment info section\n            height += 80;\n        }\n\n        // Footer and padding\n        height += 100;\n\n        // Add some extra padding to avoid any cutting off\n        height += 50;\n\n        // Minimum height\n        return Math.max(height, 600);\n    };\n\n    const handleDownloadPDF = async () => {\n        const billData = data?.bill || data?.publicBill;\n        if (!billData) return;\n\n        try {\n            const doc = <BillPDF bill={billData} clientData={clientData} issuerData={issuerData} />;\n            const pdfBlob = await pdf(doc).toBlob();\n\n            // Create download link\n            const url = URL.createObjectURL(pdfBlob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `Invoice_${getDisplayBillId(billData.id)}_${new Date().toISOString().split('T')[0]}.pdf`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n\n            toast({\n                title: \"PDF downloaded successfully\",\n                status: \"success\",\n                duration: 3000,\n                isClosable: true,\n            });\n        } catch (error) {\n            toast({\n                title: \"Error downloading PDF\",\n                description: error instanceof Error ? error.message : \"Unknown error occurred\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            });\n        }\n    };\n\n    const handleBackToDetails = () => {\n        if (isAuthenticated) {\n            navigate(`/bill/${id}`);\n        } else {\n            openLoginModal();\n        }\n    };\n\n    const handleLoginSuccess = () => {\n        closeLoginModal();\n        navigate(`/bill/${id}`);\n    };\n\n    if (loading || clientLoading || issuerLoading) {\n        return (\n            <>\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n                <Container maxW=\"container.xl\" py={8}>\n                    <VStack spacing={6}>\n                        <Skeleton height=\"60px\" width=\"100%\" />\n                        <Skeleton height=\"200px\" width=\"100%\" />\n                        <Skeleton height=\"100%\" width=\"100%\" />\n                    </VStack>\n                </Container>\n                <FooterWithFourColumns />\n            </>\n        );\n    }\n\n    if (error) {\n        return (\n            <>\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n                <Container maxW=\"container.xl\" py={8}>\n                    <Alert status=\"error\">\n                        <AlertIcon />\n                        Error loading bill: {error.message}\n                    </Alert>\n                </Container>\n                <FooterWithFourColumns />\n            </>\n        );\n    }\n\n    const bill = data?.bill || data?.publicBill;\n    if (!bill) {\n        return (\n            <>\n                <NavbarWithCallToAction />\n                <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n                <Container maxW=\"container.xl\" py={8}>\n                    <Alert status=\"info\">\n                        <AlertIcon />\n                        Bill not found\n                    </Alert>\n                </Container>\n                <FooterWithFourColumns />\n            </>\n        );\n    }\n\n    return (\n        <Box bg={bg} minHeight=\"100vh\">\n            <NavbarWithCallToAction />\n            <ModuleBreadcrumb moduleConfig={billsModuleConfig} />\n            <Container maxW=\"container.xl\" py={8}>\n                <VStack spacing={6} align=\"stretch\">\n                    <Box\n                        bg={cardGradientBg}\n                        backdropFilter=\"blur(10px)\"\n                        borderRadius=\"lg\"\n                        boxShadow=\"0 8px 32px 0 rgba(0, 0, 0, 0.37)\"\n                        borderWidth=\"1px\"\n                        borderColor={cardBorder}\n                        overflow=\"hidden\"\n                    >\n                        <Box p={6} borderBottom=\"1px solid\" borderColor={cardBorder}>\n                            <VStack spacing={4} width=\"100%\">\n                                <HStack justify=\"space-between\" width=\"100%\">\n                                    <VStack align=\"start\" spacing={2}>\n                                        <Heading size={{ base: \"md\", md: \"lg\" }} color={textPrimary}>📄 Bill PDF Preview</Heading>\n                                        <Text color={textMuted} fontSize={{ base: \"sm\", md: \"md\" }}>\n                                            Invoice ID: {getDisplayBillId(bill.id)}\n                                        </Text>\n                                    </VStack>\n                                    <HStack spacing={{ base: 2, md: 4 }} flexWrap=\"wrap\">\n                                        <Button\n                                            size={{ base: \"sm\", md: \"md\" }}\n                                            onClick={handleBackToDetails}\n                                            leftIcon={<ArrowBackIcon />}\n                                            bg=\"rgba(255, 255, 255, 0.1)\"\n                                            color={textPrimary}\n                                            borderWidth=\"1px\"\n                                            borderColor=\"rgba(255, 255, 255, 0.2)\"\n                                            _hover={{\n                                                bg: \"rgba(255, 255, 255, 0.15)\",\n                                                transform: \"translateY(-2px)\",\n                                                boxShadow: \"0 4px 15px rgba(0, 0, 0, 0.3)\"\n                                            }}\n                                        >\n                                            Back to Details\n                                        </Button>\n                                        <Button\n                                            size={{ base: \"sm\", md: \"md\" }}\n                                            onClick={handleDownloadPDF}\n                                            leftIcon={<DownloadIcon />}\n                                            bg=\"white\"\n                                            color=\"black\"\n                                            _hover={{\n                                                bg: \"gray.100\",\n                                                transform: \"translateY(-2px)\",\n                                                boxShadow: \"0 8px 30px rgba(54, 158, 255, 0.25)\"\n                                            }}\n                                        >\n                                            Download PDF\n                                        </Button>\n                                        <Badge\n                                            fontSize={{ base: \"md\", md: \"lg\" }}\n                                            p={2}\n                                            borderRadius=\"md\"\n                                            bg={bill.status === \"SENT\" ? \"rgba(54, 158, 255, 0.2)\" : \"rgba(107, 114, 128, 0.2)\"}\n                                            color={bill.status === \"SENT\" ? \"#369EFF\" : \"#6B7280\"}\n                                            border=\"1px solid\"\n                                            borderColor={bill.status === \"SENT\" ? \"rgba(54, 158, 255, 0.3)\" : \"rgba(107, 114, 128, 0.3)\"}\n                                        >\n                                            {bill.status}\n                                        </Badge>\n                                    </HStack>\n                                </HStack>\n                            </VStack>\n                        </Box>\n\n                        <Box p={6}>\n                            <Box>\n                                {isGenerating ? (\n                                    <Center h={`${pdfHeight}px`}>\n                                        <VStack spacing={4}>\n                                            <Spinner size=\"xl\" color={getColor(\"primary\")} thickness=\"4px\" />\n                                            <Text color={textPrimary}>Generating PDF preview...</Text>\n                                        </VStack>\n                                    </Center>\n                                ) : pdfUrl ? (\n                                    <Box\n                                        border=\"1px solid\"\n                                        borderColor={cardBorder}\n                                        borderRadius=\"md\"\n                                        overflow=\"hidden\"\n                                        bg=\"rgba(255, 255, 255, 0.95)\"\n                                        boxShadow=\"0 4px 20px rgba(0, 0, 0, 0.2)\"\n                                    >\n                                        <iframe\n                                            src={pdfUrl}\n                                            width=\"100%\"\n                                            height={`${pdfHeight}px`}\n                                            title=\"Bill PDF Preview\"\n                                            style={{ border: 'none' }}\n                                        />\n                                    </Box>\n                                ) : (\n                                    <Center h={`${pdfHeight}px`}>\n                                        <Alert status=\"error\">\n                                            <AlertIcon />\n                                            Failed to generate PDF preview\n                                        </Alert>\n                                    </Center>\n                                )}\n                            </Box>\n                        </Box>\n                    </Box>\n                </VStack>\n            </Container>\n            <FooterWithFourColumns />\n            <LoginWithSmsModal \n                isOpen={isLoginModalOpen} \n                onClose={closeLoginModal} \n                onLoginSuccess={handleLoginSuccess}\n            />\n        </Box>\n    );\n};\n\nexport default BillPDFPreview; ","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, Font, Link } from '@react-pdf/renderer';\nimport { brandConfig } from '../../../brandConfig';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        fontSize: 11,\n        paddingTop: 30,\n        paddingLeft: 60,\n        paddingRight: 60,\n        paddingBottom: 40,\n        lineHeight: 1.5,\n        flexDirection: 'column',\n    },\n    header: {\n        flexDirection: 'row',\n        marginBottom: 20,\n        paddingBottom: 20,\n        borderBottomWidth: 2,\n        borderBottomColor: '#112233',\n    },\n    headerLeft: {\n        flex: 1,\n    },\n    headerRight: {\n        flex: 1,\n        textAlign: 'right',\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 10,\n        fontWeight: 'bold',\n        color: '#112233',\n    },\n    billInfo: {\n        flexDirection: 'row',\n        marginBottom: 20,\n    },\n    billInfoLeft: {\n        flex: 1,\n    },\n    billInfoRight: {\n        flex: 1,\n    },\n    section: {\n        marginBottom: 15,\n    },\n    sectionTitle: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        marginBottom: 8,\n        color: '#112233',\n        borderBottomWidth: 1,\n        borderBottomColor: '#112233',\n        paddingBottom: 4,\n    },\n    row: {\n        flexDirection: 'row',\n        marginBottom: 5,\n    },\n    label: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        marginRight: 10,\n        color: '#666',\n        width: 100,\n    },\n    value: {\n        fontSize: 10,\n        flex: 1,\n    },\n    table: {\n        marginTop: 15,\n        marginBottom: 20,\n    },\n    tableHeader: {\n        flexDirection: 'row',\n        borderBottomWidth: 2,\n        borderBottomColor: '#112233',\n        backgroundColor: '#f5f5f5',\n        paddingTop: 8,\n        paddingBottom: 8,\n    },\n    tableRow: {\n        flexDirection: 'row',\n        borderBottomWidth: 1,\n        borderBottomColor: '#e0e0e0',\n        paddingTop: 8,\n        paddingBottom: 8,\n    },\n    tableCol: {\n        fontSize: 10,\n        paddingLeft: 8,\n        paddingRight: 8,\n    },\n    tableColHeader: {\n        fontSize: 11,\n        fontWeight: 'bold',\n        paddingLeft: 8,\n        paddingRight: 8,\n        color: '#112233',\n    },\n    descriptionCol: {\n        width: '50%',\n    },\n    dateCol: {\n        width: '25%',\n    },\n    amountCol: {\n        width: '25%',\n        textAlign: 'right',\n    },\n    totalSection: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        marginTop: 15,\n        paddingTop: 15,\n        borderTopWidth: 2,\n        borderTopColor: '#112233',\n    },\n    totalLabel: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        marginRight: 20,\n        color: '#112233',\n    },\n    totalAmount: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: '#112233',\n        width: 100,\n        textAlign: 'right',\n    },\n    paymentStatus: {\n        marginTop: 20,\n        padding: 10,\n        backgroundColor: '#f9f9f9',\n        borderRadius: 4,\n    },\n    paymentStatusText: {\n        fontSize: 12,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    paymentPaid: {\n        color: '#22c55e',\n    },\n    paymentUnpaid: {\n        color: '#ef4444',\n    },\n    footer: {\n        marginTop: 40,\n        paddingTop: 20,\n        borderTopWidth: 1,\n        borderTopColor: '#e0e0e0',\n        textAlign: 'center',\n        fontSize: 9,\n        color: '#666',\n    },\n});\n\ninterface BillPDFProps {\n    bill: any;\n    clientData?: any;\n    issuerData?: any;\n}\n\nexport const BillPDF: React.FC<BillPDFProps> = ({ bill, clientData, issuerData }) => {\n    // Debug logging\n    console.log('[BillPDF] Bill data:', {\n        id: bill?.id,\n        acceptCardPayment: bill?.acceptCardPayment,\n        acceptCryptoPayment: bill?.acceptCryptoPayment,\n        status: bill?.status\n    });\n\n    const formatDate = (dateString: string | { $date: string }) => {\n        const date = dateString instanceof Object ? dateString.$date : dateString;\n        return new Date(date).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n        });\n    };\n\n    const formatCurrency = (amount: number) => {\n        return amount.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        });\n    };\n\n    const calculateTotal = () => {\n        if (bill.totalAmount && bill.totalAmount > 0) {\n            return formatCurrency(bill.totalAmount);\n        }\n        if (bill.lineItems?.length > 0) {\n            const total = bill.lineItems.reduce((total: number, item: any) => total + Number(item.amount), 0);\n            return formatCurrency(total);\n        }\n        return '0.00';\n    };\n\n    const calculateTotalNumeric = () => {\n        if (bill.totalAmount && bill.totalAmount > 0) {\n            return bill.totalAmount;\n        }\n        if (bill.lineItems?.length > 0) {\n            return bill.lineItems.reduce((total: number, item: any) => total + Number(item.amount), 0);\n        }\n        return 0;\n    };\n\n    // Rule: Display only the first 4 digits of the MongoDB ID for invoice ID\n    const getDisplayBillId = (fullId: string) => {\n        return fullId.substring(0, 4);\n    };\n\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n                {/* Header */}\n                <View style={styles.header}>\n                    <View style={styles.headerLeft}>\n                        <Text style={styles.title}>INVOICE</Text>\n                        <Text>Invoice ID: {getDisplayBillId(bill.id)}</Text>\n                        <Text>Status: {bill.status}</Text>\n                    </View>\n                    <View style={styles.headerRight}>\n                        <Text>Date: {formatDate(bill.createdAt)}</Text>\n                        {bill.status === 'SENT' && (\n                            <Text>Sent: {formatDate(bill.updatedAt)}</Text>\n                        )}\n                    </View>\n                </View>\n\n                {/* Bill From/To Information */}\n                <View style={styles.billInfo}>\n                    <View style={styles.billInfoLeft}>\n                        <View style={styles.section}>\n                            <Text style={styles.sectionTitle}>Bill From:</Text>\n                            {issuerData?.getBillIssuerDetails ? (\n                                <>\n                                    {(brandConfig.contact.businessName || issuerData.getBillIssuerDetails.businessName) && (\n                                        <View style={styles.row}>\n                                            <Text style={styles.label}>Business:</Text>\n                                            <Text style={styles.value}>{brandConfig.contact.businessName || issuerData.getBillIssuerDetails.businessName}</Text>\n                                        </View>\n                                    )}\n                                    <View style={styles.row}>\n                                        <Text style={styles.label}>Contact:</Text>\n                                        <Text style={styles.value}>\n                                            {brandConfig.contact.contactName || `${issuerData.getBillIssuerDetails.fName} ${issuerData.getBillIssuerDetails.lName}`}\n                                        </Text>\n                                    </View>\n                                    <View style={styles.row}>\n                                        <Text style={styles.label}>Email:</Text>\n                                        <Text style={styles.value}>{brandConfig.contact.email || issuerData.getBillIssuerDetails.email}</Text>\n                                    </View>\n                                    <View style={styles.row}>\n                                        <Text style={styles.label}>Phone:</Text>\n                                        <Text style={styles.value}>{brandConfig.contact.phone || issuerData.getBillIssuerDetails.phoneNumber}</Text>\n                                    </View>\n                                    {issuerData.getBillIssuerDetails.businessRegistrationNumber && (\n                                        <View style={styles.row}>\n                                            <Text style={styles.label}>ABN/ACN:</Text>\n                                            <Text style={styles.value}>{issuerData.getBillIssuerDetails.businessRegistrationNumber}</Text>\n                                        </View>\n                                    )}\n                                </>\n                            ) : (\n                                <Text style={styles.value}>Issuer information not available</Text>\n                            )}\n                        </View>\n                    </View>\n\n                    <View style={styles.billInfoRight}>\n                        <View style={styles.section}>\n                            <Text style={styles.sectionTitle}>Bill To:</Text>\n                            {clientData?.getClientDetailsByBillId ? (\n                                <>\n                                    <View style={styles.row}>\n                                        <Text style={styles.label}>Name:</Text>\n                                        <Text style={styles.value}>\n                                            {clientData.getClientDetailsByBillId.fName} {clientData.getClientDetailsByBillId.lName}\n                                        </Text>\n                                    </View>\n                                    <View style={styles.row}>\n                                        <Text style={styles.label}>Email:</Text>\n                                        <Text style={styles.value}>{clientData.getClientDetailsByBillId.email}</Text>\n                                    </View>\n                                    {clientData.getClientDetailsByBillId.phoneNumber && (\n                                        <View style={styles.row}>\n                                            <Text style={styles.label}>Phone:</Text>\n                                            <Text style={styles.value}>{clientData.getClientDetailsByBillId.phoneNumber}</Text>\n                                        </View>\n                                    )}\n                                    {clientData.getClientDetailsByBillId.businessName && (\n                                        <View style={styles.row}>\n                                            <Text style={styles.label}>Business:</Text>\n                                            <Text style={styles.value}>{clientData.getClientDetailsByBillId.businessName}</Text>\n                                        </View>\n                                    )}\n                                </>\n                            ) : (\n                                <Text style={styles.value}>Client information not available</Text>\n                            )}\n                        </View>\n                    </View>\n                </View>\n\n                {/* Line Items Table */}\n                <View style={styles.section}>\n                    <Text style={styles.sectionTitle}>Services & Items</Text>\n                    <View style={styles.table}>\n                        <View style={styles.tableHeader}>\n                            <Text style={[styles.tableColHeader, styles.descriptionCol]}>Description</Text>\n                            <Text style={[styles.tableColHeader, styles.dateCol]}>Date</Text>\n                            <Text style={[styles.tableColHeader, styles.amountCol]}>Amount (AUD)</Text>\n                        </View>\n                        {bill.lineItems && bill.lineItems.map((item: any, index: number) => (\n                            <View key={index} style={styles.tableRow}>\n                                <Text style={[styles.tableCol, styles.descriptionCol]}>{item.description}</Text>\n                                <Text style={[styles.tableCol, styles.dateCol]}>{formatDate(item.createdAt)}</Text>\n                                <Text style={[styles.tableCol, styles.amountCol]}>${formatCurrency(Number(item.amount))}</Text>\n                            </View>\n                        ))}\n                    </View>\n                </View>\n\n                {/* Total */}\n                <View style={styles.totalSection}>\n                    <Text style={styles.totalLabel}>Total Amount ({bill.currency || 'AUD'}):</Text>\n                    <Text style={styles.totalAmount}>${calculateTotal()} {bill.currency || 'AUD'}</Text>\n                </View>\n\n                {/* Payment Status */}\n                <View style={styles.paymentStatus}>\n                    <Text style={[\n                        styles.paymentStatusText,\n                        bill.isPaid ? styles.paymentPaid : styles.paymentUnpaid\n                    ]}>\n                        Payment Status: {bill.isPaid ? 'PAID' : 'UNPAID'}\n                    </Text>\n                </View>\n\n                {/* Payment Information */}\n                {issuerData?.getBillIssuerDetails?.paymentReceivingDetails && (\n                    <View style={[styles.section, { marginBottom: 30 }]}>\n                        <Text style={styles.sectionTitle}>Payment Information</Text>\n\n                        {/* Bank Account */}\n                        {issuerData.getBillIssuerDetails.paymentReceivingDetails.bankAccount && (\n                            <View style={{ marginBottom: 10 }}>\n                                <Text style={{ fontSize: 11, fontWeight: 'bold', marginBottom: 5 }}>Bank Transfer:</Text>\n                                <View style={styles.row}>\n                                    <Text style={styles.label}>Account Name:</Text>\n                                    <Text style={styles.value}>{issuerData.getBillIssuerDetails.paymentReceivingDetails.bankAccount.accountName}</Text>\n                                </View>\n                                <View style={styles.row}>\n                                    <Text style={styles.label}>BSB:</Text>\n                                    <Text style={styles.value}>{issuerData.getBillIssuerDetails.paymentReceivingDetails.bankAccount.bsb}</Text>\n                                </View>\n                                <View style={styles.row}>\n                                    <Text style={styles.label}>Account:</Text>\n                                    <Text style={styles.value}>{issuerData.getBillIssuerDetails.paymentReceivingDetails.bankAccount.accountNumber}</Text>\n                                </View>\n                            </View>\n                        )}\n\n                        {/* Payment Reference */}\n                        <View style={styles.row}>\n                            <Text style={styles.label}>Reference:</Text>\n                            <Text style={styles.value}>INV-{bill.id.substring(0, 4).toUpperCase()}</Text>\n                        </View>\n\n                        {/* Online Payment Options */}\n                        {((issuerData.getBillIssuerDetails.paymentReceivingDetails.acceptedMethods?.includes('STRIPE') && bill.acceptCardPayment !== false) || \n                          (issuerData.getBillIssuerDetails.paymentReceivingDetails.acceptedMethods?.includes('CRYPTO') && bill.acceptCryptoPayment === true)) && (\n                            <View style={{ marginTop: 10, marginBottom: 15, padding: 10, backgroundColor: '#f7f9fc', borderRadius: 5, border: '1px solid #e0e0e0' }}>\n                                <Text style={{ fontSize: 11, fontWeight: 'bold', marginBottom: 8, color: '#333' }}>Online Payment Options</Text>\n                                \n                                {/* Generate the payment URL - in production this should use actual domain */}\n                                {(() => {\n                                    const baseUrl = 'https://tommillerservices.com';\n                                    const paymentUrl = `${baseUrl}/bill/${bill.id}`;\n                                    \n                                    return (\n                                        <View>\n                                            {issuerData.getBillIssuerDetails.paymentReceivingDetails.acceptedMethods?.includes('STRIPE') && \n                                             bill.acceptCardPayment !== false && (\n                                                <View style={{ marginBottom: 5 }}>\n                                                    <View style={styles.row}>\n                                                        <Text style={styles.label}>Credit/Debit Card:</Text>\n                                                        <Link src={paymentUrl} style={{ fontSize: 10, color: '#007AFF', textDecoration: 'underline', flex: 1 }}>\n                                                            Pay with Visa, Mastercard, or Amex\n                                                        </Link>\n                                                    </View>\n                                                </View>\n                                            )}\n                                            \n                                            {issuerData.getBillIssuerDetails.paymentReceivingDetails.acceptedMethods?.includes('CRYPTO') && \n                                             bill.acceptCryptoPayment === true && (\n                                                <View style={{ marginBottom: 5 }}>\n                                                    <View style={styles.row}>\n                                                        <Text style={styles.label}>Bitcoin (BTC):</Text>\n                                                        <View style={{ flex: 1 }}>\n                                                            <Link src={paymentUrl} style={{ fontSize: 10, color: '#007AFF', textDecoration: 'underline' }}>\n                                                                Pay with Bitcoin Silent Payments\n                                                                {issuerData.getBillIssuerDetails.paymentReceivingDetails.cryptoDiscountPercentage && \n                                                                    ` (${issuerData.getBillIssuerDetails.paymentReceivingDetails.cryptoDiscountPercentage}% discount)`\n                                                                }\n                                                            </Link>\n                                                            {issuerData.getBillIssuerDetails.paymentReceivingDetails.cryptoDiscountPercentage && (\n                                                                <Text style={{ fontSize: 9, color: '#28a745', marginTop: 2 }}>\n                                                                    Save ${formatCurrency(calculateTotalNumeric() * issuerData.getBillIssuerDetails.paymentReceivingDetails.cryptoDiscountPercentage / 100)} {bill.currency || 'AUD'}\n                                                                </Text>\n                                                            )}\n                                                        </View>\n                                                    </View>\n                                                </View>\n                                            )}\n                                            \n                                            <View style={{ marginTop: 8, padding: 5, backgroundColor: '#e8f4f8', borderRadius: 3 }}>\n                                                <Text style={{ fontSize: 9, color: '#666', marginBottom: 3 }}>\n                                                    Payment Link: \n                                                </Text>\n                                                <Link src={paymentUrl} style={{ fontSize: 9, color: '#007AFF', textDecoration: 'underline' }}>\n                                                    {paymentUrl}\n                                                </Link>\n                                            </View>\n                                        </View>\n                                    );\n                                })()}\n                            </View>\n                        )}\n\n                        {/* Other payment methods */}\n                        {issuerData.getBillIssuerDetails.paymentReceivingDetails.acceptedMethods && (\n                            <View style={[styles.row, { marginTop: 10, marginBottom: 20 }]}>\n                                <Text style={styles.label}>All Methods:</Text>\n                                <Text style={styles.value}>\n                                    {issuerData.getBillIssuerDetails.paymentReceivingDetails.acceptedMethods\n                                        .filter((method: string) => {\n                                            // Always show bank transfer\n                                            if (method === 'BANK_TRANSFER') return true;\n                                            // Only show Stripe if card payment is enabled (default true if undefined)\n                                            if (method === 'STRIPE') return bill.acceptCardPayment !== false;\n                                            // Only show Crypto if crypto payment is explicitly enabled\n                                            if (method === 'CRYPTO') return bill.acceptCryptoPayment === true;\n                                            // Show other methods by default\n                                            return true;\n                                        })\n                                        .map((method: string) => {\n                                            switch(method) {\n                                                case 'BANK_TRANSFER': return 'Bank Transfer';\n                                                case 'STRIPE': return 'Credit Card';\n                                                case 'CRYPTO': return 'Bitcoin';\n                                                case 'PAYPAL': return 'PayPal';\n                                                default: return method;\n                                            }\n                                        })\n                                        .join(', ')}\n                                </Text>\n                            </View>\n                        )}\n                    </View>\n                )}\n\n                {/* Footer */}\n                <View style={styles.footer}>\n                    <Text style={{ fontSize: 10, color: '#666' }}>\n                        Thank you for your business! • Generated on {new Date().toLocaleDateString()}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n}; "],"names":["GET_BILL","gql","_templateObject","_taggedTemplateLiteral","GET_CLIENT_BY_BILL","_templateObject2","GET_BILL_ISSUER","_templateObject3","PUBLIC_GET_BILL","_templateObject4","PUBLIC_GET_CLIENT_BY_BILL","_templateObject5","PUBLIC_GET_BILL_ISSUER","_templateObject6","BillPDFPreview","usePageTitle","id","useParams","navigate","useNavigate","user","isAuthenticated","useAuth","toast","useToast","pdfUrl","setPdfUrl","useState","isGenerating","setIsGenerating","pdfHeight","setPdfHeight","isOpen","isLoginModalOpen","onOpen","openLoginModal","onClose","closeLoginModal","useDisclosure","bg","getColor","cardBorder","textPrimary","brandConfig","colors","text","inverse","textMuted","secondaryDark","mutedDark","getDisplayBillId","fullId","substring","billQuery","clientQuery","issuerQuery","console","log","billId","usingPublicQuery","queryName","loading","error","data","useQuery","variables","onCompleted","hasData","billData","bill","publicBill","dataKeys","Object","keys","onError","err","clientData","clientLoading","issuerData","issuerLoading","useEffect","async","doc","_jsx","BillPDF","pdfDoc","pdf","pdfBlob","toBlob","estimatedHeight","calculatePDFHeight","url","URL","createObjectURL","title","description","Error","message","status","duration","isClosable","generatePDF","revokeObjectURL","_bill$lineItems","_issuerData$getBillIs","height","lineItems","length","getBillIssuerDetails","paymentReceivingDetails","_paymentDetails$crypt","paymentDetails","bankAccount","cryptoWallets","paypalEmail","stripeConnect","Math","max","_jsxs","_Fragment","children","NavbarWithCallToAction","ModuleBreadcrumb","moduleConfig","billsModuleConfig","Container","maxW","py","VStack","spacing","Skeleton","width","FooterWithFourColumns","Alert","AlertIcon","Box","minHeight","align","backdropFilter","borderRadius","boxShadow","borderWidth","borderColor","overflow","p","borderBottom","HStack","justify","Heading","size","base","md","color","Text","fontSize","flexWrap","Button","onClick","handleBackToDetails","concat","leftIcon","ArrowBackIcon","_hover","transform","link","document","createElement","href","download","Date","toISOString","split","body","appendChild","click","removeChild","DownloadIcon","Badge","border","Center","h","Spinner","thickness","src","style","LoginWithSmsModal","onLoginSuccess","handleLoginSuccess","styles","StyleSheet","create","page","fontFamily","paddingTop","paddingLeft","paddingRight","paddingBottom","lineHeight","flexDirection","header","marginBottom","borderBottomWidth","borderBottomColor","headerLeft","flex","headerRight","textAlign","fontWeight","billInfo","billInfoLeft","billInfoRight","section","sectionTitle","row","label","marginRight","value","table","marginTop","tableHeader","backgroundColor","tableRow","tableCol","tableColHeader","descriptionCol","dateCol","amountCol","totalSection","justifyContent","borderTopWidth","borderTopColor","totalLabel","totalAmount","paymentStatus","padding","paymentStatusText","paymentPaid","paymentUnpaid","footer","_ref","_issuerData$getBillIs2","_issuerData$getBillIs3","acceptCardPayment","acceptCryptoPayment","formatDate","dateString","date","$date","toLocaleDateString","year","month","day","formatCurrency","amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","calculateTotalNumeric","_bill$lineItems2","reduce","total","item","Number","Document","Page","View","createdAt","updatedAt","contact","businessName","contactName","fName","lName","email","phone","phoneNumber","businessRegistrationNumber","getClientDetailsByBillId","map","index","currency","calculateTotal","isPaid","accountName","bsb","accountNumber","toUpperCase","acceptedMethods","includes","_issuerData$getBillIs4","_issuerData$getBillIs5","paymentUrl","Link","textDecoration","cryptoDiscountPercentage","filter","method","join"],"sourceRoot":""}