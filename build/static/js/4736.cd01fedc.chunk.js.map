{"version":3,"file":"static/js/4736.cd01fedc.chunk.js","mappings":"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","sources":["pages/frontend-upgrades/ModuleSummary.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  VStack,\n  Text,\n  Card,\n  CardBody,\n  CardHeader,\n  useToast,\n  Code,\n  Divider,\n  List,\n  ListItem,\n  ListIcon,\n  Badge,\n  useColorMode,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  HStack,\n} from '@chakra-ui/react';\nimport { FiCheckCircle, FiCopy, FiCode, FiBook } from 'react-icons/fi';\nimport { getColor } from '../../brandConfig';\nimport ReactMarkdown from 'react-markdown';\nimport { FooterWithFourColumns } from '../../components/chakra/FooterWithFourColumns/FooterWithFourColumns';\nimport { NavbarWithCallToAction } from '../../components/chakra/NavbarWithCallToAction/NavbarWithCallToAction';\n\nconst ModuleSummary: React.FC = () => {\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n  const [copiedSection, setCopiedSection] = useState<string | null>(null);\n\n  const developerBrief = `# Frontend Upgrades Module - Developer Brief\n\n## Purpose\nTrack and manage code improvements across multiple tenant frontend sites. This module allows you to:\n- Register code upgrades from any tenant site\n- Track which commits contain the improvements\n- Monitor deployment status across all tenant sites\n- Document implementation details with markdown\n\n## Key Features\n✅ **Git Commit Tracking** - Link one or more GitHub commit URLs\n✅ **Origin Tracking** - Record which tenant innovated the feature\n✅ **Multi-Site Deployment** - Auto-populates all tenants + master\n✅ **Status Management** - Track: Pending → In Progress → Completed → Skipped\n✅ **Markdown Documentation** - Attach detailed implementation notes\n✅ **Progress Visualization** - See completion % across sites\n✅ **Categorization** - UI Enhancement, Bug Fix, Performance, Security, etc.\n\n## When to Use This Module\nUse this module when you:\n1. Implement a feature on one tenant site that should be replicated\n2. Find a bug fix that affects multiple sites\n3. Create a performance improvement worth sharing\n4. Refactor code in a way that benefits all sites\n5. Need to track which sites have received specific updates\n\n## How to Create an Upgrade Entry\n\n### Step 1: Identify the Improvement\n- What changed?\n- Why is it valuable?\n- Which tenant site has it first?\n\n### Step 2: Get the Git Commit URLs\nExample: https://github.com/username/repo/commit/abc123...\n\n### Step 3: Create the Entry\nNavigate to: \\`/frontend-upgrades/new\\`\n\nFill in:\n- **Title**: Brief description (e.g., \"Dynamic Color Configuration\")\n- **Description**: What problem does it solve?\n- **Category**: Select appropriate type\n- **Origin Tenant**: Where was it first created?\n- **Git Commits**: Paste the commit URL(s)\n- **Documentation**: (Optional) Add markdown notes\n\n### Step 4: Track Progress\nFor each tenant site:\n1. Open the upgrade detail view\n2. Click \"Update\" next to the tenant\n3. Change status as you apply it\n4. Add notes about any customizations needed\n\n## Example Use Case\n\n\\`\\`\\`\nTitle: \"Floating Navbar Dynamic Colors\"\nDescription: \"Refactored FloatingNavbar to use brandConfig.getColor()\n             instead of hardcoded colors, enabling easy theme customization\"\nCategory: UI_ENHANCEMENT\nOrigin: Blooming Brilliant\nCommits:\n  - https://github.com/.../commit/bed4769...\n  - https://github.com/.../commit/98a7b5d...\n\nStatus:\n  ✅ Master Frontend: COMPLETED\n  ⏳ Blooming Brilliant: COMPLETED (origin)\n  ⏳ Tenant Site A: PENDING\n  ⏳ Tenant Site B: PENDING\n\\`\\`\\`\n\n## Permissions\nRequires: \\`FRONTEND_UPGRADES_ADMIN\\` or \\`ADMIN\\` permission\n\n## GraphQL API\n\n### Queries\n\\`\\`\\`graphql\nquery GetUpgrades {\n  frontendUpgrades {\n    id\n    title\n    description\n    gitCommitUrls\n    category\n    originTenantName\n    completedCount\n    totalTenantCount\n  }\n}\n\\`\\`\\`\n\n### Mutations\n\\`\\`\\`graphql\nmutation CreateUpgrade($input: CreateFrontendUpgradeInput!) {\n  createFrontendUpgrade(input: $input) {\n    id\n    title\n  }\n}\n\nmutation MarkApplied($input: MarkUpgradeAppliedInput!) {\n  markUpgradeApplied(input: $input) {\n    id\n  }\n}\n\\`\\`\\`\n\n## Backend Models\n- **Location**: \\`business-builder-backend/src/entities/models/FrontendUpgrade.ts\\`\n- **Resolver**: \\`business-builder-backend/src/resolvers/frontendUpgrade.resolver.ts\\`\n\n## Frontend Components\n- **List**: \\`/frontend-upgrades\\` - Overview with stats\n- **Create**: \\`/frontend-upgrades/new\\` - Track new upgrade\n- **Detail**: \\`/frontend-upgrades/:id\\` - View & update status\n- **Module Config**: \\`src/pages/frontend-upgrades/moduleConfig.ts\\`\n\n## Best Practices\n\n### Do:\n✅ Create upgrade entries BEFORE applying to multiple sites\n✅ Include all related commit URLs\n✅ Add markdown documentation for complex changes\n✅ Update status immediately after applying to each site\n✅ Add notes if customization was needed per tenant\n\n### Don't:\n❌ Skip creating entries for \"small\" changes (they add up!)\n❌ Forget to mark master frontend as completed\n❌ Leave upgrades in \"pending\" after applying them\n❌ Mix unrelated changes in one upgrade entry\n\n## Integration with Development Workflow\n\n1. **During Development**: When creating a feature, think \"will other sites need this?\"\n2. **After Commit**: Copy the GitHub commit URL\n3. **Create Entry**: Register in Frontend Upgrades module\n4. **Deploy to Master**: Apply to master frontend first\n5. **Roll Out**: Systematically apply to each tenant site\n6. **Track Progress**: Mark complete as you go\n\n## Markdown Documentation Tips\n\nUse the documentation field to capture:\n- Implementation gotchas\n- Environment-specific changes needed\n- Configuration differences per tenant\n- Dependencies or prerequisites\n- Testing steps\n- Screenshots/examples\n\n## Future Enhancements\n- Automated deployment integration\n- Bulk status updates\n- Email notifications on new upgrades\n- Version tagging\n- Rollback tracking\n`;\n\n  const quickStartBrief = `I need help using the Frontend Upgrades Tracking Module.\n\n**Context**: We have a multi-tenant platform where code improvements from one tenant site should be tracked and deployed to other tenant sites.\n\n**Goal**: ${copiedSection === 'create' ? 'Create a new upgrade entry' : copiedSection === 'update' ? 'Update the status of an existing upgrade' : 'Understand how to use this module'}\n\n**What I need**:\n${copiedSection === 'create' ? `\n1. Navigate to /frontend-upgrades/new\n2. Fill in the form with:\n   - Title: [Brief description]\n   - Description: [What it improves]\n   - Category: [Select type]\n   - Origin Tenant: [Where created]\n   - Git Commit URLs: [GitHub URLs]\n   - Documentation: [Optional markdown]\n` : copiedSection === 'update' ? `\n1. Open the upgrade detail page\n2. Find the tenant in the status table\n3. Click \"Update\" button\n4. Change status (PENDING/IN_PROGRESS/COMPLETED/SKIPPED)\n5. Add any notes\n` : `\nPlease explain:\n1. The purpose of this module\n2. When to use it\n3. How to create upgrade entries\n4. How to track progress across tenant sites\n5. Best practices for our workflow\n`}\n\n**Backend**: business-builder-backend (GraphQL/TypeScript/MongoDB)\n**Frontend**: business-builder-master-frontend (React/Chakra UI)\n**Module Location**: src/pages/frontend-upgrades/\n`;\n\n  const handleCopy = (text: string, section: string) => {\n    navigator.clipboard.writeText(text);\n    setCopiedSection(section);\n    toast({\n      title: 'Copied to clipboard!',\n      description: 'Brief ready to paste for Claude',\n      status: 'success',\n      duration: 2000,\n      isClosable: true,\n    });\n    setTimeout(() => setCopiedSection(null), 2000);\n  };\n\n  return (\n    <>\n      <NavbarWithCallToAction />\n      <Box p={6}>\n        <VStack spacing={6} align=\"stretch\" maxW=\"1200px\" mx=\"auto\">\n        {/* Header */}\n        <HStack justify=\"space-between\">\n          <Heading size=\"lg\">Frontend Upgrades Module - Overview</Heading>\n          <Badge colorScheme=\"teal\" fontSize=\"md\" px={3} py={1}>\n            v1.0.0\n          </Badge>\n        </HStack>\n\n        {/* Quick Stats */}\n        <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n          <CardBody>\n            <HStack spacing={8} justify=\"space-around\">\n              <VStack>\n                <Text fontSize=\"3xl\" fontWeight=\"bold\" color={getColor('secondary', colorMode)}>🔄</Text>\n                <Text fontSize=\"sm\" color={colorMode === 'light' ? 'gray.600' : 'gray.400'}>Track Upgrades</Text>\n              </VStack>\n              <VStack>\n                <Text fontSize=\"3xl\" fontWeight=\"bold\" color={getColor('secondary', colorMode)}>📊</Text>\n                <Text fontSize=\"sm\" color={colorMode === 'light' ? 'gray.600' : 'gray.400'}>Monitor Progress</Text>\n              </VStack>\n              <VStack>\n                <Text fontSize=\"3xl\" fontWeight=\"bold\" color={getColor('secondary', colorMode)}>📝</Text>\n                <Text fontSize=\"sm\" color={colorMode === 'light' ? 'gray.600' : 'gray.400'}>Document Changes</Text>\n              </VStack>\n              <VStack>\n                <Text fontSize=\"3xl\" fontWeight=\"bold\" color={getColor('secondary', colorMode)}>🎯</Text>\n                <Text fontSize=\"sm\" color={colorMode === 'light' ? 'gray.600' : 'gray.400'}>Multi-Site Deploy</Text>\n              </VStack>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Purpose */}\n        <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n          <CardHeader>\n            <Heading size=\"md\">Purpose</Heading>\n          </CardHeader>\n          <CardBody pt={0}>\n            <Text mb={4}>\n              This module helps you track code improvements created on any tenant site and manage their deployment\n              across all your frontend applications (master + tenant sites).\n            </Text>\n            <List spacing={2}>\n              <ListItem>\n                <ListIcon as={FiCheckCircle} color=\"green.500\" />\n                Track which tenant first innovated a feature\n              </ListItem>\n              <ListItem>\n                <ListIcon as={FiCheckCircle} color=\"green.500\" />\n                Link GitHub commit URLs for easy reference\n              </ListItem>\n              <ListItem>\n                <ListIcon as={FiCheckCircle} color=\"green.500\" />\n                Monitor deployment status across all sites\n              </ListItem>\n              <ListItem>\n                <ListIcon as={FiCheckCircle} color=\"green.500\" />\n                Document implementation details with markdown\n              </ListItem>\n              <ListItem>\n                <ListIcon as={FiCheckCircle} color=\"green.500\" />\n                Visualize progress with completion percentages\n              </ListItem>\n            </List>\n          </CardBody>\n        </Card>\n\n        {/* Quick Action Briefs */}\n        <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n          <CardHeader>\n            <Heading size=\"md\">Quick Action Briefs for Claude</Heading>\n            <Text fontSize=\"sm\" color={colorMode === 'light' ? 'gray.600' : 'gray.400'} mt={2}>\n              Copy these briefs to ask Claude for help with specific tasks\n            </Text>\n          </CardHeader>\n          <CardBody pt={0}>\n            <VStack spacing={4} align=\"stretch\">\n              <HStack>\n                <Button\n                  leftIcon={<FiCopy />}\n                  size=\"sm\"\n                  onClick={() => handleCopy(quickStartBrief.replace('${copiedSection === \\'create\\' ? \\'Create a new upgrade entry\\' : copiedSection === \\'update\\' ? \\'Update the status of an existing upgrade\\' : \\'Understand how to use this module\\'}', 'Understand how to use this module'), 'general')}\n                  colorScheme={copiedSection === 'general' ? 'green' : 'blue'}\n                  flex={1}\n                >\n                  {copiedSection === 'general' ? 'Copied!' : 'General Help Brief'}\n                </Button>\n                <Button\n                  leftIcon={<FiCopy />}\n                  size=\"sm\"\n                  onClick={() => handleCopy(quickStartBrief.replace('${copiedSection === \\'create\\' ? \\'Create a new upgrade entry\\' : copiedSection === \\'update\\' ? \\'Update the status of an existing upgrade\\' : \\'Understand how to use this module\\'}', 'Create a new upgrade entry'), 'create')}\n                  colorScheme={copiedSection === 'create' ? 'green' : 'blue'}\n                  flex={1}\n                >\n                  {copiedSection === 'create' ? 'Copied!' : 'Create Upgrade Brief'}\n                </Button>\n                <Button\n                  leftIcon={<FiCopy />}\n                  size=\"sm\"\n                  onClick={() => handleCopy(quickStartBrief.replace('${copiedSection === \\'create\\' ? \\'Create a new upgrade entry\\' : copiedSection === \\'update\\' ? \\'Update the status of an existing upgrade\\' : \\'Understand how to use this module\\'}', 'Update the status of an existing upgrade'), 'update')}\n                  colorScheme={copiedSection === 'update' ? 'green' : 'blue'}\n                  flex={1}\n                >\n                  {copiedSection === 'update' ? 'Copied!' : 'Update Status Brief'}\n                </Button>\n              </HStack>\n              <Box\n                p={4}\n                bg={colorMode === 'light' ? 'gray.50' : 'gray.800'}\n                borderRadius=\"md\"\n                fontSize=\"sm\"\n                fontFamily=\"monospace\"\n                whiteSpace=\"pre-wrap\"\n              >\n                {quickStartBrief.replace(/\\$\\{[^}]+\\}/g, '[Task-specific content]')}\n              </Box>\n            </VStack>\n          </CardBody>\n        </Card>\n\n        {/* Full Documentation */}\n        <Card bg={colorMode === 'light' ? 'white' : getColor('background.darkSurface', colorMode)}>\n          <CardHeader>\n            <HStack justify=\"space-between\">\n              <Heading size=\"md\">Complete Developer Documentation</Heading>\n              <Button\n                leftIcon={<FiCopy />}\n                size=\"sm\"\n                onClick={() => handleCopy(developerBrief, 'full')}\n                colorScheme={copiedSection === 'full' ? 'green' : 'blue'}\n              >\n                {copiedSection === 'full' ? 'Copied!' : 'Copy Full Docs'}\n              </Button>\n            </HStack>\n          </CardHeader>\n          <CardBody pt={0}>\n            <Tabs>\n              <TabList>\n                <Tab><FiBook /> Documentation</Tab>\n                <Tab><FiCode /> Markdown Source</Tab>\n              </TabList>\n              <TabPanels>\n                <TabPanel px={0}>\n                  <Box\n                    p={4}\n                    border=\"1px solid\"\n                    borderColor={colorMode === 'light' ? 'gray.200' : 'gray.600'}\n                    borderRadius=\"md\"\n                    maxH=\"600px\"\n                    overflowY=\"auto\"\n                  >\n                    <ReactMarkdown>{developerBrief}</ReactMarkdown>\n                  </Box>\n                </TabPanel>\n                <TabPanel px={0}>\n                  <Box\n                    as=\"pre\"\n                    p={4}\n                    bg={colorMode === 'light' ? 'gray.50' : 'gray.800'}\n                    borderRadius=\"md\"\n                    fontSize=\"sm\"\n                    maxH=\"600px\"\n                    overflowY=\"auto\"\n                    whiteSpace=\"pre-wrap\"\n                  >\n                    <Code>{developerBrief}</Code>\n                  </Box>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </CardBody>\n        </Card>\n        </VStack>\n      </Box>\n      <FooterWithFourColumns />\n    </>\n  );\n};\n\nexport default ModuleSummary;\n"],"names":["ModuleSummary","colorMode","useColorMode","toast","useToast","copiedSection","setCopiedSection","useState","developerBrief","quickStartBrief","concat","handleCopy","text","section","navigator","clipboard","writeText","title","description","status","duration","isClosable","setTimeout","_jsxs","_Fragment","children","_jsx","NavbarWithCallToAction","Box","p","VStack","spacing","align","maxW","mx","HStack","justify","Heading","size","Badge","colorScheme","fontSize","px","py","Card","bg","getColor","CardBody","Text","fontWeight","color","CardHeader","pt","mb","List","ListItem","ListIcon","as","FiCheckCircle","mt","Button","leftIcon","FiCopy","onClick","replace","flex","borderRadius","fontFamily","whiteSpace","Tabs","TabList","Tab","FiBook","FiCode","TabPanels","TabPanel","border","borderColor","maxH","overflowY","ReactMarkdown","Code","FooterWithFourColumns"],"sourceRoot":""}